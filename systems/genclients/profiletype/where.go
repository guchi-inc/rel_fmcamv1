// Code generated by ent, DO NOT EDIT.

package profiletype

import (
	"fmcam/systems/genclients/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLTE(FieldID, id))
}

// TypeName applies equality check predicate on the "type_name" field. It's identical to TypeNameEQ.
func TypeName(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldTypeName, v))
}

// WarningLevel applies equality check predicate on the "warning_level" field. It's identical to WarningLevelEQ.
func WarningLevel(v int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldWarningLevel, v))
}

// WarningEnabled applies equality check predicate on the "warning_enabled" field. It's identical to WarningEnabledEQ.
func WarningEnabled(v bool) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldWarningEnabled, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v uuid.UUID) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldTenantID, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldDescription, v))
}

// Deleteable applies equality check predicate on the "deleteable" field. It's identical to DeleteableEQ.
func Deleteable(v bool) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldDeleteable, v))
}

// Enabled applies equality check predicate on the "enabled" field. It's identical to EnabledEQ.
func Enabled(v bool) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldEnabled, v))
}

// TypeCode applies equality check predicate on the "type_code" field. It's identical to TypeCodeEQ.
func TypeCode(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldTypeCode, v))
}

// FaceValidityHours applies equality check predicate on the "face_validity_hours" field. It's identical to FaceValidityHoursEQ.
func FaceValidityHours(v int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldFaceValidityHours, v))
}

// CreatedTime applies equality check predicate on the "created_time" field. It's identical to CreatedTimeEQ.
func CreatedTime(v time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldCreatedTime, v))
}

// UpdatedTime applies equality check predicate on the "updated_time" field. It's identical to UpdatedTimeEQ.
func UpdatedTime(v time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldUpdatedTime, v))
}

// TypeNameEQ applies the EQ predicate on the "type_name" field.
func TypeNameEQ(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldTypeName, v))
}

// TypeNameNEQ applies the NEQ predicate on the "type_name" field.
func TypeNameNEQ(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNEQ(FieldTypeName, v))
}

// TypeNameIn applies the In predicate on the "type_name" field.
func TypeNameIn(vs ...string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIn(FieldTypeName, vs...))
}

// TypeNameNotIn applies the NotIn predicate on the "type_name" field.
func TypeNameNotIn(vs ...string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotIn(FieldTypeName, vs...))
}

// TypeNameGT applies the GT predicate on the "type_name" field.
func TypeNameGT(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGT(FieldTypeName, v))
}

// TypeNameGTE applies the GTE predicate on the "type_name" field.
func TypeNameGTE(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGTE(FieldTypeName, v))
}

// TypeNameLT applies the LT predicate on the "type_name" field.
func TypeNameLT(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLT(FieldTypeName, v))
}

// TypeNameLTE applies the LTE predicate on the "type_name" field.
func TypeNameLTE(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLTE(FieldTypeName, v))
}

// TypeNameContains applies the Contains predicate on the "type_name" field.
func TypeNameContains(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldContains(FieldTypeName, v))
}

// TypeNameHasPrefix applies the HasPrefix predicate on the "type_name" field.
func TypeNameHasPrefix(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldHasPrefix(FieldTypeName, v))
}

// TypeNameHasSuffix applies the HasSuffix predicate on the "type_name" field.
func TypeNameHasSuffix(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldHasSuffix(FieldTypeName, v))
}

// TypeNameEqualFold applies the EqualFold predicate on the "type_name" field.
func TypeNameEqualFold(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEqualFold(FieldTypeName, v))
}

// TypeNameContainsFold applies the ContainsFold predicate on the "type_name" field.
func TypeNameContainsFold(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldContainsFold(FieldTypeName, v))
}

// WarningLevelEQ applies the EQ predicate on the "warning_level" field.
func WarningLevelEQ(v int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldWarningLevel, v))
}

// WarningLevelNEQ applies the NEQ predicate on the "warning_level" field.
func WarningLevelNEQ(v int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNEQ(FieldWarningLevel, v))
}

// WarningLevelIn applies the In predicate on the "warning_level" field.
func WarningLevelIn(vs ...int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIn(FieldWarningLevel, vs...))
}

// WarningLevelNotIn applies the NotIn predicate on the "warning_level" field.
func WarningLevelNotIn(vs ...int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotIn(FieldWarningLevel, vs...))
}

// WarningLevelGT applies the GT predicate on the "warning_level" field.
func WarningLevelGT(v int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGT(FieldWarningLevel, v))
}

// WarningLevelGTE applies the GTE predicate on the "warning_level" field.
func WarningLevelGTE(v int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGTE(FieldWarningLevel, v))
}

// WarningLevelLT applies the LT predicate on the "warning_level" field.
func WarningLevelLT(v int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLT(FieldWarningLevel, v))
}

// WarningLevelLTE applies the LTE predicate on the "warning_level" field.
func WarningLevelLTE(v int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLTE(FieldWarningLevel, v))
}

// WarningLevelIsNil applies the IsNil predicate on the "warning_level" field.
func WarningLevelIsNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIsNull(FieldWarningLevel))
}

// WarningLevelNotNil applies the NotNil predicate on the "warning_level" field.
func WarningLevelNotNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotNull(FieldWarningLevel))
}

// WarningEnabledEQ applies the EQ predicate on the "warning_enabled" field.
func WarningEnabledEQ(v bool) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldWarningEnabled, v))
}

// WarningEnabledNEQ applies the NEQ predicate on the "warning_enabled" field.
func WarningEnabledNEQ(v bool) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNEQ(FieldWarningEnabled, v))
}

// WarningEnabledIsNil applies the IsNil predicate on the "warning_enabled" field.
func WarningEnabledIsNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIsNull(FieldWarningEnabled))
}

// WarningEnabledNotNil applies the NotNil predicate on the "warning_enabled" field.
func WarningEnabledNotNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotNull(FieldWarningEnabled))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v uuid.UUID) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v uuid.UUID) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...uuid.UUID) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...uuid.UUID) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v uuid.UUID) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v uuid.UUID) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v uuid.UUID) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v uuid.UUID) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDIsNil applies the IsNil predicate on the "tenant_id" field.
func TenantIDIsNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIsNull(FieldTenantID))
}

// TenantIDNotNil applies the NotNil predicate on the "tenant_id" field.
func TenantIDNotNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotNull(FieldTenantID))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldContainsFold(FieldDescription, v))
}

// DeleteableEQ applies the EQ predicate on the "deleteable" field.
func DeleteableEQ(v bool) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldDeleteable, v))
}

// DeleteableNEQ applies the NEQ predicate on the "deleteable" field.
func DeleteableNEQ(v bool) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNEQ(FieldDeleteable, v))
}

// DeleteableIsNil applies the IsNil predicate on the "deleteable" field.
func DeleteableIsNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIsNull(FieldDeleteable))
}

// DeleteableNotNil applies the NotNil predicate on the "deleteable" field.
func DeleteableNotNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotNull(FieldDeleteable))
}

// EnabledEQ applies the EQ predicate on the "enabled" field.
func EnabledEQ(v bool) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldEnabled, v))
}

// EnabledNEQ applies the NEQ predicate on the "enabled" field.
func EnabledNEQ(v bool) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNEQ(FieldEnabled, v))
}

// EnabledIsNil applies the IsNil predicate on the "enabled" field.
func EnabledIsNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIsNull(FieldEnabled))
}

// EnabledNotNil applies the NotNil predicate on the "enabled" field.
func EnabledNotNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotNull(FieldEnabled))
}

// TypeCodeEQ applies the EQ predicate on the "type_code" field.
func TypeCodeEQ(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldTypeCode, v))
}

// TypeCodeNEQ applies the NEQ predicate on the "type_code" field.
func TypeCodeNEQ(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNEQ(FieldTypeCode, v))
}

// TypeCodeIn applies the In predicate on the "type_code" field.
func TypeCodeIn(vs ...string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIn(FieldTypeCode, vs...))
}

// TypeCodeNotIn applies the NotIn predicate on the "type_code" field.
func TypeCodeNotIn(vs ...string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotIn(FieldTypeCode, vs...))
}

// TypeCodeGT applies the GT predicate on the "type_code" field.
func TypeCodeGT(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGT(FieldTypeCode, v))
}

// TypeCodeGTE applies the GTE predicate on the "type_code" field.
func TypeCodeGTE(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGTE(FieldTypeCode, v))
}

// TypeCodeLT applies the LT predicate on the "type_code" field.
func TypeCodeLT(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLT(FieldTypeCode, v))
}

// TypeCodeLTE applies the LTE predicate on the "type_code" field.
func TypeCodeLTE(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLTE(FieldTypeCode, v))
}

// TypeCodeContains applies the Contains predicate on the "type_code" field.
func TypeCodeContains(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldContains(FieldTypeCode, v))
}

// TypeCodeHasPrefix applies the HasPrefix predicate on the "type_code" field.
func TypeCodeHasPrefix(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldHasPrefix(FieldTypeCode, v))
}

// TypeCodeHasSuffix applies the HasSuffix predicate on the "type_code" field.
func TypeCodeHasSuffix(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldHasSuffix(FieldTypeCode, v))
}

// TypeCodeIsNil applies the IsNil predicate on the "type_code" field.
func TypeCodeIsNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIsNull(FieldTypeCode))
}

// TypeCodeNotNil applies the NotNil predicate on the "type_code" field.
func TypeCodeNotNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotNull(FieldTypeCode))
}

// TypeCodeEqualFold applies the EqualFold predicate on the "type_code" field.
func TypeCodeEqualFold(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEqualFold(FieldTypeCode, v))
}

// TypeCodeContainsFold applies the ContainsFold predicate on the "type_code" field.
func TypeCodeContainsFold(v string) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldContainsFold(FieldTypeCode, v))
}

// FaceValidityHoursEQ applies the EQ predicate on the "face_validity_hours" field.
func FaceValidityHoursEQ(v int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldFaceValidityHours, v))
}

// FaceValidityHoursNEQ applies the NEQ predicate on the "face_validity_hours" field.
func FaceValidityHoursNEQ(v int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNEQ(FieldFaceValidityHours, v))
}

// FaceValidityHoursIn applies the In predicate on the "face_validity_hours" field.
func FaceValidityHoursIn(vs ...int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIn(FieldFaceValidityHours, vs...))
}

// FaceValidityHoursNotIn applies the NotIn predicate on the "face_validity_hours" field.
func FaceValidityHoursNotIn(vs ...int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotIn(FieldFaceValidityHours, vs...))
}

// FaceValidityHoursGT applies the GT predicate on the "face_validity_hours" field.
func FaceValidityHoursGT(v int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGT(FieldFaceValidityHours, v))
}

// FaceValidityHoursGTE applies the GTE predicate on the "face_validity_hours" field.
func FaceValidityHoursGTE(v int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGTE(FieldFaceValidityHours, v))
}

// FaceValidityHoursLT applies the LT predicate on the "face_validity_hours" field.
func FaceValidityHoursLT(v int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLT(FieldFaceValidityHours, v))
}

// FaceValidityHoursLTE applies the LTE predicate on the "face_validity_hours" field.
func FaceValidityHoursLTE(v int) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLTE(FieldFaceValidityHours, v))
}

// FaceValidityHoursIsNil applies the IsNil predicate on the "face_validity_hours" field.
func FaceValidityHoursIsNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIsNull(FieldFaceValidityHours))
}

// FaceValidityHoursNotNil applies the NotNil predicate on the "face_validity_hours" field.
func FaceValidityHoursNotNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotNull(FieldFaceValidityHours))
}

// CreatedTimeEQ applies the EQ predicate on the "created_time" field.
func CreatedTimeEQ(v time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldCreatedTime, v))
}

// CreatedTimeNEQ applies the NEQ predicate on the "created_time" field.
func CreatedTimeNEQ(v time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNEQ(FieldCreatedTime, v))
}

// CreatedTimeIn applies the In predicate on the "created_time" field.
func CreatedTimeIn(vs ...time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIn(FieldCreatedTime, vs...))
}

// CreatedTimeNotIn applies the NotIn predicate on the "created_time" field.
func CreatedTimeNotIn(vs ...time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotIn(FieldCreatedTime, vs...))
}

// CreatedTimeGT applies the GT predicate on the "created_time" field.
func CreatedTimeGT(v time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGT(FieldCreatedTime, v))
}

// CreatedTimeGTE applies the GTE predicate on the "created_time" field.
func CreatedTimeGTE(v time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGTE(FieldCreatedTime, v))
}

// CreatedTimeLT applies the LT predicate on the "created_time" field.
func CreatedTimeLT(v time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLT(FieldCreatedTime, v))
}

// CreatedTimeLTE applies the LTE predicate on the "created_time" field.
func CreatedTimeLTE(v time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLTE(FieldCreatedTime, v))
}

// CreatedTimeIsNil applies the IsNil predicate on the "created_time" field.
func CreatedTimeIsNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIsNull(FieldCreatedTime))
}

// CreatedTimeNotNil applies the NotNil predicate on the "created_time" field.
func CreatedTimeNotNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotNull(FieldCreatedTime))
}

// UpdatedTimeEQ applies the EQ predicate on the "updated_time" field.
func UpdatedTimeEQ(v time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldEQ(FieldUpdatedTime, v))
}

// UpdatedTimeNEQ applies the NEQ predicate on the "updated_time" field.
func UpdatedTimeNEQ(v time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNEQ(FieldUpdatedTime, v))
}

// UpdatedTimeIn applies the In predicate on the "updated_time" field.
func UpdatedTimeIn(vs ...time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIn(FieldUpdatedTime, vs...))
}

// UpdatedTimeNotIn applies the NotIn predicate on the "updated_time" field.
func UpdatedTimeNotIn(vs ...time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotIn(FieldUpdatedTime, vs...))
}

// UpdatedTimeGT applies the GT predicate on the "updated_time" field.
func UpdatedTimeGT(v time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGT(FieldUpdatedTime, v))
}

// UpdatedTimeGTE applies the GTE predicate on the "updated_time" field.
func UpdatedTimeGTE(v time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldGTE(FieldUpdatedTime, v))
}

// UpdatedTimeLT applies the LT predicate on the "updated_time" field.
func UpdatedTimeLT(v time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLT(FieldUpdatedTime, v))
}

// UpdatedTimeLTE applies the LTE predicate on the "updated_time" field.
func UpdatedTimeLTE(v time.Time) predicate.ProfileType {
	return predicate.ProfileType(sql.FieldLTE(FieldUpdatedTime, v))
}

// UpdatedTimeIsNil applies the IsNil predicate on the "updated_time" field.
func UpdatedTimeIsNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldIsNull(FieldUpdatedTime))
}

// UpdatedTimeNotNil applies the NotNil predicate on the "updated_time" field.
func UpdatedTimeNotNil() predicate.ProfileType {
	return predicate.ProfileType(sql.FieldNotNull(FieldUpdatedTime))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ProfileType) predicate.ProfileType {
	return predicate.ProfileType(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ProfileType) predicate.ProfileType {
	return predicate.ProfileType(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ProfileType) predicate.ProfileType {
	return predicate.ProfileType(sql.NotPredicates(p))
}

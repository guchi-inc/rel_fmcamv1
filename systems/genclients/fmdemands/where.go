// Code generated by ent, DO NOT EDIT.

package fmdemands

import (
	"fmcam/systems/genclients/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLTE(FieldID, id))
}

// Supplier applies equality check predicate on the "supplier" field. It's identical to SupplierEQ.
func Supplier(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldSupplier, v))
}

// Username applies equality check predicate on the "username" field. It's identical to UsernameEQ.
func Username(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldUsername, v))
}

// Phonenum applies equality check predicate on the "phonenum" field. It's identical to PhonenumEQ.
func Phonenum(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldPhonenum, v))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldEmail, v))
}

// Province applies equality check predicate on the "province" field. It's identical to ProvinceEQ.
func Province(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldProvince, v))
}

// City applies equality check predicate on the "city" field. It's identical to CityEQ.
func City(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldCity, v))
}

// Area applies equality check predicate on the "area" field. It's identical to AreaEQ.
func Area(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldArea, v))
}

// Street applies equality check predicate on the "street" field. It's identical to StreetEQ.
func Street(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldStreet, v))
}

// Message applies equality check predicate on the "message" field. It's identical to MessageEQ.
func Message(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldMessage, v))
}

// Creator applies equality check predicate on the "creator" field. It's identical to CreatorEQ.
func Creator(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldCreator, v))
}

// CreatedTime applies equality check predicate on the "created_time" field. It's identical to CreatedTimeEQ.
func CreatedTime(v time.Time) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldCreatedTime, v))
}

// SupplierEQ applies the EQ predicate on the "supplier" field.
func SupplierEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldSupplier, v))
}

// SupplierNEQ applies the NEQ predicate on the "supplier" field.
func SupplierNEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNEQ(FieldSupplier, v))
}

// SupplierIn applies the In predicate on the "supplier" field.
func SupplierIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIn(FieldSupplier, vs...))
}

// SupplierNotIn applies the NotIn predicate on the "supplier" field.
func SupplierNotIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotIn(FieldSupplier, vs...))
}

// SupplierGT applies the GT predicate on the "supplier" field.
func SupplierGT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGT(FieldSupplier, v))
}

// SupplierGTE applies the GTE predicate on the "supplier" field.
func SupplierGTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGTE(FieldSupplier, v))
}

// SupplierLT applies the LT predicate on the "supplier" field.
func SupplierLT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLT(FieldSupplier, v))
}

// SupplierLTE applies the LTE predicate on the "supplier" field.
func SupplierLTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLTE(FieldSupplier, v))
}

// SupplierContains applies the Contains predicate on the "supplier" field.
func SupplierContains(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContains(FieldSupplier, v))
}

// SupplierHasPrefix applies the HasPrefix predicate on the "supplier" field.
func SupplierHasPrefix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasPrefix(FieldSupplier, v))
}

// SupplierHasSuffix applies the HasSuffix predicate on the "supplier" field.
func SupplierHasSuffix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasSuffix(FieldSupplier, v))
}

// SupplierIsNil applies the IsNil predicate on the "supplier" field.
func SupplierIsNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIsNull(FieldSupplier))
}

// SupplierNotNil applies the NotNil predicate on the "supplier" field.
func SupplierNotNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotNull(FieldSupplier))
}

// SupplierEqualFold applies the EqualFold predicate on the "supplier" field.
func SupplierEqualFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEqualFold(FieldSupplier, v))
}

// SupplierContainsFold applies the ContainsFold predicate on the "supplier" field.
func SupplierContainsFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContainsFold(FieldSupplier, v))
}

// UsernameEQ applies the EQ predicate on the "username" field.
func UsernameEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldUsername, v))
}

// UsernameNEQ applies the NEQ predicate on the "username" field.
func UsernameNEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNEQ(FieldUsername, v))
}

// UsernameIn applies the In predicate on the "username" field.
func UsernameIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIn(FieldUsername, vs...))
}

// UsernameNotIn applies the NotIn predicate on the "username" field.
func UsernameNotIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotIn(FieldUsername, vs...))
}

// UsernameGT applies the GT predicate on the "username" field.
func UsernameGT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGT(FieldUsername, v))
}

// UsernameGTE applies the GTE predicate on the "username" field.
func UsernameGTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGTE(FieldUsername, v))
}

// UsernameLT applies the LT predicate on the "username" field.
func UsernameLT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLT(FieldUsername, v))
}

// UsernameLTE applies the LTE predicate on the "username" field.
func UsernameLTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLTE(FieldUsername, v))
}

// UsernameContains applies the Contains predicate on the "username" field.
func UsernameContains(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContains(FieldUsername, v))
}

// UsernameHasPrefix applies the HasPrefix predicate on the "username" field.
func UsernameHasPrefix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasPrefix(FieldUsername, v))
}

// UsernameHasSuffix applies the HasSuffix predicate on the "username" field.
func UsernameHasSuffix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasSuffix(FieldUsername, v))
}

// UsernameIsNil applies the IsNil predicate on the "username" field.
func UsernameIsNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIsNull(FieldUsername))
}

// UsernameNotNil applies the NotNil predicate on the "username" field.
func UsernameNotNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotNull(FieldUsername))
}

// UsernameEqualFold applies the EqualFold predicate on the "username" field.
func UsernameEqualFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEqualFold(FieldUsername, v))
}

// UsernameContainsFold applies the ContainsFold predicate on the "username" field.
func UsernameContainsFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContainsFold(FieldUsername, v))
}

// PhonenumEQ applies the EQ predicate on the "phonenum" field.
func PhonenumEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldPhonenum, v))
}

// PhonenumNEQ applies the NEQ predicate on the "phonenum" field.
func PhonenumNEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNEQ(FieldPhonenum, v))
}

// PhonenumIn applies the In predicate on the "phonenum" field.
func PhonenumIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIn(FieldPhonenum, vs...))
}

// PhonenumNotIn applies the NotIn predicate on the "phonenum" field.
func PhonenumNotIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotIn(FieldPhonenum, vs...))
}

// PhonenumGT applies the GT predicate on the "phonenum" field.
func PhonenumGT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGT(FieldPhonenum, v))
}

// PhonenumGTE applies the GTE predicate on the "phonenum" field.
func PhonenumGTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGTE(FieldPhonenum, v))
}

// PhonenumLT applies the LT predicate on the "phonenum" field.
func PhonenumLT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLT(FieldPhonenum, v))
}

// PhonenumLTE applies the LTE predicate on the "phonenum" field.
func PhonenumLTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLTE(FieldPhonenum, v))
}

// PhonenumContains applies the Contains predicate on the "phonenum" field.
func PhonenumContains(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContains(FieldPhonenum, v))
}

// PhonenumHasPrefix applies the HasPrefix predicate on the "phonenum" field.
func PhonenumHasPrefix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasPrefix(FieldPhonenum, v))
}

// PhonenumHasSuffix applies the HasSuffix predicate on the "phonenum" field.
func PhonenumHasSuffix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasSuffix(FieldPhonenum, v))
}

// PhonenumIsNil applies the IsNil predicate on the "phonenum" field.
func PhonenumIsNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIsNull(FieldPhonenum))
}

// PhonenumNotNil applies the NotNil predicate on the "phonenum" field.
func PhonenumNotNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotNull(FieldPhonenum))
}

// PhonenumEqualFold applies the EqualFold predicate on the "phonenum" field.
func PhonenumEqualFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEqualFold(FieldPhonenum, v))
}

// PhonenumContainsFold applies the ContainsFold predicate on the "phonenum" field.
func PhonenumContainsFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContainsFold(FieldPhonenum, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailIsNil applies the IsNil predicate on the "email" field.
func EmailIsNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIsNull(FieldEmail))
}

// EmailNotNil applies the NotNil predicate on the "email" field.
func EmailNotNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotNull(FieldEmail))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContainsFold(FieldEmail, v))
}

// ProvinceEQ applies the EQ predicate on the "province" field.
func ProvinceEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldProvince, v))
}

// ProvinceNEQ applies the NEQ predicate on the "province" field.
func ProvinceNEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNEQ(FieldProvince, v))
}

// ProvinceIn applies the In predicate on the "province" field.
func ProvinceIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIn(FieldProvince, vs...))
}

// ProvinceNotIn applies the NotIn predicate on the "province" field.
func ProvinceNotIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotIn(FieldProvince, vs...))
}

// ProvinceGT applies the GT predicate on the "province" field.
func ProvinceGT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGT(FieldProvince, v))
}

// ProvinceGTE applies the GTE predicate on the "province" field.
func ProvinceGTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGTE(FieldProvince, v))
}

// ProvinceLT applies the LT predicate on the "province" field.
func ProvinceLT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLT(FieldProvince, v))
}

// ProvinceLTE applies the LTE predicate on the "province" field.
func ProvinceLTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLTE(FieldProvince, v))
}

// ProvinceContains applies the Contains predicate on the "province" field.
func ProvinceContains(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContains(FieldProvince, v))
}

// ProvinceHasPrefix applies the HasPrefix predicate on the "province" field.
func ProvinceHasPrefix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasPrefix(FieldProvince, v))
}

// ProvinceHasSuffix applies the HasSuffix predicate on the "province" field.
func ProvinceHasSuffix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasSuffix(FieldProvince, v))
}

// ProvinceIsNil applies the IsNil predicate on the "province" field.
func ProvinceIsNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIsNull(FieldProvince))
}

// ProvinceNotNil applies the NotNil predicate on the "province" field.
func ProvinceNotNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotNull(FieldProvince))
}

// ProvinceEqualFold applies the EqualFold predicate on the "province" field.
func ProvinceEqualFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEqualFold(FieldProvince, v))
}

// ProvinceContainsFold applies the ContainsFold predicate on the "province" field.
func ProvinceContainsFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContainsFold(FieldProvince, v))
}

// CityEQ applies the EQ predicate on the "city" field.
func CityEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldCity, v))
}

// CityNEQ applies the NEQ predicate on the "city" field.
func CityNEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNEQ(FieldCity, v))
}

// CityIn applies the In predicate on the "city" field.
func CityIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIn(FieldCity, vs...))
}

// CityNotIn applies the NotIn predicate on the "city" field.
func CityNotIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotIn(FieldCity, vs...))
}

// CityGT applies the GT predicate on the "city" field.
func CityGT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGT(FieldCity, v))
}

// CityGTE applies the GTE predicate on the "city" field.
func CityGTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGTE(FieldCity, v))
}

// CityLT applies the LT predicate on the "city" field.
func CityLT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLT(FieldCity, v))
}

// CityLTE applies the LTE predicate on the "city" field.
func CityLTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLTE(FieldCity, v))
}

// CityContains applies the Contains predicate on the "city" field.
func CityContains(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContains(FieldCity, v))
}

// CityHasPrefix applies the HasPrefix predicate on the "city" field.
func CityHasPrefix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasPrefix(FieldCity, v))
}

// CityHasSuffix applies the HasSuffix predicate on the "city" field.
func CityHasSuffix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasSuffix(FieldCity, v))
}

// CityIsNil applies the IsNil predicate on the "city" field.
func CityIsNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIsNull(FieldCity))
}

// CityNotNil applies the NotNil predicate on the "city" field.
func CityNotNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotNull(FieldCity))
}

// CityEqualFold applies the EqualFold predicate on the "city" field.
func CityEqualFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEqualFold(FieldCity, v))
}

// CityContainsFold applies the ContainsFold predicate on the "city" field.
func CityContainsFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContainsFold(FieldCity, v))
}

// AreaEQ applies the EQ predicate on the "area" field.
func AreaEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldArea, v))
}

// AreaNEQ applies the NEQ predicate on the "area" field.
func AreaNEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNEQ(FieldArea, v))
}

// AreaIn applies the In predicate on the "area" field.
func AreaIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIn(FieldArea, vs...))
}

// AreaNotIn applies the NotIn predicate on the "area" field.
func AreaNotIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotIn(FieldArea, vs...))
}

// AreaGT applies the GT predicate on the "area" field.
func AreaGT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGT(FieldArea, v))
}

// AreaGTE applies the GTE predicate on the "area" field.
func AreaGTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGTE(FieldArea, v))
}

// AreaLT applies the LT predicate on the "area" field.
func AreaLT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLT(FieldArea, v))
}

// AreaLTE applies the LTE predicate on the "area" field.
func AreaLTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLTE(FieldArea, v))
}

// AreaContains applies the Contains predicate on the "area" field.
func AreaContains(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContains(FieldArea, v))
}

// AreaHasPrefix applies the HasPrefix predicate on the "area" field.
func AreaHasPrefix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasPrefix(FieldArea, v))
}

// AreaHasSuffix applies the HasSuffix predicate on the "area" field.
func AreaHasSuffix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasSuffix(FieldArea, v))
}

// AreaIsNil applies the IsNil predicate on the "area" field.
func AreaIsNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIsNull(FieldArea))
}

// AreaNotNil applies the NotNil predicate on the "area" field.
func AreaNotNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotNull(FieldArea))
}

// AreaEqualFold applies the EqualFold predicate on the "area" field.
func AreaEqualFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEqualFold(FieldArea, v))
}

// AreaContainsFold applies the ContainsFold predicate on the "area" field.
func AreaContainsFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContainsFold(FieldArea, v))
}

// StreetEQ applies the EQ predicate on the "street" field.
func StreetEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldStreet, v))
}

// StreetNEQ applies the NEQ predicate on the "street" field.
func StreetNEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNEQ(FieldStreet, v))
}

// StreetIn applies the In predicate on the "street" field.
func StreetIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIn(FieldStreet, vs...))
}

// StreetNotIn applies the NotIn predicate on the "street" field.
func StreetNotIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotIn(FieldStreet, vs...))
}

// StreetGT applies the GT predicate on the "street" field.
func StreetGT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGT(FieldStreet, v))
}

// StreetGTE applies the GTE predicate on the "street" field.
func StreetGTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGTE(FieldStreet, v))
}

// StreetLT applies the LT predicate on the "street" field.
func StreetLT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLT(FieldStreet, v))
}

// StreetLTE applies the LTE predicate on the "street" field.
func StreetLTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLTE(FieldStreet, v))
}

// StreetContains applies the Contains predicate on the "street" field.
func StreetContains(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContains(FieldStreet, v))
}

// StreetHasPrefix applies the HasPrefix predicate on the "street" field.
func StreetHasPrefix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasPrefix(FieldStreet, v))
}

// StreetHasSuffix applies the HasSuffix predicate on the "street" field.
func StreetHasSuffix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasSuffix(FieldStreet, v))
}

// StreetIsNil applies the IsNil predicate on the "street" field.
func StreetIsNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIsNull(FieldStreet))
}

// StreetNotNil applies the NotNil predicate on the "street" field.
func StreetNotNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotNull(FieldStreet))
}

// StreetEqualFold applies the EqualFold predicate on the "street" field.
func StreetEqualFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEqualFold(FieldStreet, v))
}

// StreetContainsFold applies the ContainsFold predicate on the "street" field.
func StreetContainsFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContainsFold(FieldStreet, v))
}

// MessageEQ applies the EQ predicate on the "message" field.
func MessageEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldMessage, v))
}

// MessageNEQ applies the NEQ predicate on the "message" field.
func MessageNEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNEQ(FieldMessage, v))
}

// MessageIn applies the In predicate on the "message" field.
func MessageIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIn(FieldMessage, vs...))
}

// MessageNotIn applies the NotIn predicate on the "message" field.
func MessageNotIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotIn(FieldMessage, vs...))
}

// MessageGT applies the GT predicate on the "message" field.
func MessageGT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGT(FieldMessage, v))
}

// MessageGTE applies the GTE predicate on the "message" field.
func MessageGTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGTE(FieldMessage, v))
}

// MessageLT applies the LT predicate on the "message" field.
func MessageLT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLT(FieldMessage, v))
}

// MessageLTE applies the LTE predicate on the "message" field.
func MessageLTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLTE(FieldMessage, v))
}

// MessageContains applies the Contains predicate on the "message" field.
func MessageContains(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContains(FieldMessage, v))
}

// MessageHasPrefix applies the HasPrefix predicate on the "message" field.
func MessageHasPrefix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasPrefix(FieldMessage, v))
}

// MessageHasSuffix applies the HasSuffix predicate on the "message" field.
func MessageHasSuffix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasSuffix(FieldMessage, v))
}

// MessageIsNil applies the IsNil predicate on the "message" field.
func MessageIsNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIsNull(FieldMessage))
}

// MessageNotNil applies the NotNil predicate on the "message" field.
func MessageNotNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotNull(FieldMessage))
}

// MessageEqualFold applies the EqualFold predicate on the "message" field.
func MessageEqualFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEqualFold(FieldMessage, v))
}

// MessageContainsFold applies the ContainsFold predicate on the "message" field.
func MessageContainsFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContainsFold(FieldMessage, v))
}

// CreatorEQ applies the EQ predicate on the "creator" field.
func CreatorEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldCreator, v))
}

// CreatorNEQ applies the NEQ predicate on the "creator" field.
func CreatorNEQ(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNEQ(FieldCreator, v))
}

// CreatorIn applies the In predicate on the "creator" field.
func CreatorIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIn(FieldCreator, vs...))
}

// CreatorNotIn applies the NotIn predicate on the "creator" field.
func CreatorNotIn(vs ...string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotIn(FieldCreator, vs...))
}

// CreatorGT applies the GT predicate on the "creator" field.
func CreatorGT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGT(FieldCreator, v))
}

// CreatorGTE applies the GTE predicate on the "creator" field.
func CreatorGTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGTE(FieldCreator, v))
}

// CreatorLT applies the LT predicate on the "creator" field.
func CreatorLT(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLT(FieldCreator, v))
}

// CreatorLTE applies the LTE predicate on the "creator" field.
func CreatorLTE(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLTE(FieldCreator, v))
}

// CreatorContains applies the Contains predicate on the "creator" field.
func CreatorContains(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContains(FieldCreator, v))
}

// CreatorHasPrefix applies the HasPrefix predicate on the "creator" field.
func CreatorHasPrefix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasPrefix(FieldCreator, v))
}

// CreatorHasSuffix applies the HasSuffix predicate on the "creator" field.
func CreatorHasSuffix(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldHasSuffix(FieldCreator, v))
}

// CreatorIsNil applies the IsNil predicate on the "creator" field.
func CreatorIsNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIsNull(FieldCreator))
}

// CreatorNotNil applies the NotNil predicate on the "creator" field.
func CreatorNotNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotNull(FieldCreator))
}

// CreatorEqualFold applies the EqualFold predicate on the "creator" field.
func CreatorEqualFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEqualFold(FieldCreator, v))
}

// CreatorContainsFold applies the ContainsFold predicate on the "creator" field.
func CreatorContainsFold(v string) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldContainsFold(FieldCreator, v))
}

// CreatedTimeEQ applies the EQ predicate on the "created_time" field.
func CreatedTimeEQ(v time.Time) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldEQ(FieldCreatedTime, v))
}

// CreatedTimeNEQ applies the NEQ predicate on the "created_time" field.
func CreatedTimeNEQ(v time.Time) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNEQ(FieldCreatedTime, v))
}

// CreatedTimeIn applies the In predicate on the "created_time" field.
func CreatedTimeIn(vs ...time.Time) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIn(FieldCreatedTime, vs...))
}

// CreatedTimeNotIn applies the NotIn predicate on the "created_time" field.
func CreatedTimeNotIn(vs ...time.Time) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotIn(FieldCreatedTime, vs...))
}

// CreatedTimeGT applies the GT predicate on the "created_time" field.
func CreatedTimeGT(v time.Time) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGT(FieldCreatedTime, v))
}

// CreatedTimeGTE applies the GTE predicate on the "created_time" field.
func CreatedTimeGTE(v time.Time) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldGTE(FieldCreatedTime, v))
}

// CreatedTimeLT applies the LT predicate on the "created_time" field.
func CreatedTimeLT(v time.Time) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLT(FieldCreatedTime, v))
}

// CreatedTimeLTE applies the LTE predicate on the "created_time" field.
func CreatedTimeLTE(v time.Time) predicate.FmDemands {
	return predicate.FmDemands(sql.FieldLTE(FieldCreatedTime, v))
}

// CreatedTimeIsNil applies the IsNil predicate on the "created_time" field.
func CreatedTimeIsNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldIsNull(FieldCreatedTime))
}

// CreatedTimeNotNil applies the NotNil predicate on the "created_time" field.
func CreatedTimeNotNil() predicate.FmDemands {
	return predicate.FmDemands(sql.FieldNotNull(FieldCreatedTime))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.FmDemands) predicate.FmDemands {
	return predicate.FmDemands(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.FmDemands) predicate.FmDemands {
	return predicate.FmDemands(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.FmDemands) predicate.FmDemands {
	return predicate.FmDemands(sql.NotPredicates(p))
}

// Code generated by ent, DO NOT EDIT.

package tenants

import (
	"fmcam/models/schema"
	"fmcam/systems/genclients/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldID, id))
}

// Supplier applies equality check predicate on the "supplier" field. It's identical to SupplierEQ.
func Supplier(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldSupplier, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v uuid.UUID) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldTenantID, v))
}

// Contacts applies equality check predicate on the "contacts" field. It's identical to ContactsEQ.
func Contacts(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldContacts, v))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldEmail, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldDescription, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldType, v))
}

// Province applies equality check predicate on the "province" field. It's identical to ProvinceEQ.
func Province(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldProvince, v))
}

// City applies equality check predicate on the "city" field. It's identical to CityEQ.
func City(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldCity, v))
}

// Area applies equality check predicate on the "area" field. It's identical to AreaEQ.
func Area(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldArea, v))
}

// Street applies equality check predicate on the "street" field. It's identical to StreetEQ.
func Street(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldStreet, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldAddress, v))
}

// AddrCode applies equality check predicate on the "addr_code" field. It's identical to AddrCodeEQ.
func AddrCode(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldAddrCode, v))
}

// Fax applies equality check predicate on the "fax" field. It's identical to FaxEQ.
func Fax(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldFax, v))
}

// PhoneNum applies equality check predicate on the "phone_num" field. It's identical to PhoneNumEQ.
func PhoneNum(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldPhoneNum, v))
}

// Telephone applies equality check predicate on the "telephone" field. It's identical to TelephoneEQ.
func Telephone(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldTelephone, v))
}

// TaxNum applies equality check predicate on the "tax_num" field. It's identical to TaxNumEQ.
func TaxNum(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldTaxNum, v))
}

// BankName applies equality check predicate on the "bank_name" field. It's identical to BankNameEQ.
func BankName(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldBankName, v))
}

// AccountNumber applies equality check predicate on the "account_number" field. It's identical to AccountNumberEQ.
func AccountNumber(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldAccountNumber, v))
}

// Sort applies equality check predicate on the "sort" field. It's identical to SortEQ.
func Sort(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldSort, v))
}

// Enabled applies equality check predicate on the "enabled" field. It's identical to EnabledEQ.
func Enabled(v bool) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldEnabled, v))
}

// DeleteFlag applies equality check predicate on the "delete_flag" field. It's identical to DeleteFlagEQ.
func DeleteFlag(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldDeleteFlag, v))
}

// Isystem applies equality check predicate on the "isystem" field. It's identical to IsystemEQ.
func Isystem(v bool) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldIsystem, v))
}

// TaxRate applies equality check predicate on the "tax_rate" field. It's identical to TaxRateEQ.
func TaxRate(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldTaxRate, v))
}

// AdvanceIn applies equality check predicate on the "advance_in" field. It's identical to AdvanceInEQ.
func AdvanceIn(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldAdvanceIn, v))
}

// BeginNeedGet applies equality check predicate on the "begin_need_get" field. It's identical to BeginNeedGetEQ.
func BeginNeedGet(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldBeginNeedGet, v))
}

// BeginNeedPay applies equality check predicate on the "begin_need_pay" field. It's identical to BeginNeedPayEQ.
func BeginNeedPay(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldBeginNeedPay, v))
}

// AllNeedGet applies equality check predicate on the "all_need_get" field. It's identical to AllNeedGetEQ.
func AllNeedGet(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldAllNeedGet, v))
}

// AllNeedPay applies equality check predicate on the "all_need_pay" field. It's identical to AllNeedPayEQ.
func AllNeedPay(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldAllNeedPay, v))
}

// Creator applies equality check predicate on the "creator" field. It's identical to CreatorEQ.
func Creator(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldCreator, v))
}

// CreatedTime applies equality check predicate on the "created_time" field. It's identical to CreatedTimeEQ.
func CreatedTime(v time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldCreatedTime, v))
}

// UpdatedTime applies equality check predicate on the "updated_time" field. It's identical to UpdatedTimeEQ.
func UpdatedTime(v time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldUpdatedTime, v))
}

// SupplierEQ applies the EQ predicate on the "supplier" field.
func SupplierEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldSupplier, v))
}

// SupplierNEQ applies the NEQ predicate on the "supplier" field.
func SupplierNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldSupplier, v))
}

// SupplierIn applies the In predicate on the "supplier" field.
func SupplierIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldSupplier, vs...))
}

// SupplierNotIn applies the NotIn predicate on the "supplier" field.
func SupplierNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldSupplier, vs...))
}

// SupplierGT applies the GT predicate on the "supplier" field.
func SupplierGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldSupplier, v))
}

// SupplierGTE applies the GTE predicate on the "supplier" field.
func SupplierGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldSupplier, v))
}

// SupplierLT applies the LT predicate on the "supplier" field.
func SupplierLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldSupplier, v))
}

// SupplierLTE applies the LTE predicate on the "supplier" field.
func SupplierLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldSupplier, v))
}

// SupplierContains applies the Contains predicate on the "supplier" field.
func SupplierContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldSupplier, v))
}

// SupplierHasPrefix applies the HasPrefix predicate on the "supplier" field.
func SupplierHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldSupplier, v))
}

// SupplierHasSuffix applies the HasSuffix predicate on the "supplier" field.
func SupplierHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldSupplier, v))
}

// SupplierEqualFold applies the EqualFold predicate on the "supplier" field.
func SupplierEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldSupplier, v))
}

// SupplierContainsFold applies the ContainsFold predicate on the "supplier" field.
func SupplierContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldSupplier, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v uuid.UUID) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v uuid.UUID) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...uuid.UUID) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...uuid.UUID) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v uuid.UUID) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v uuid.UUID) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v uuid.UUID) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v uuid.UUID) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldTenantID, v))
}

// ContactsEQ applies the EQ predicate on the "contacts" field.
func ContactsEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldContacts, v))
}

// ContactsNEQ applies the NEQ predicate on the "contacts" field.
func ContactsNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldContacts, v))
}

// ContactsIn applies the In predicate on the "contacts" field.
func ContactsIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldContacts, vs...))
}

// ContactsNotIn applies the NotIn predicate on the "contacts" field.
func ContactsNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldContacts, vs...))
}

// ContactsGT applies the GT predicate on the "contacts" field.
func ContactsGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldContacts, v))
}

// ContactsGTE applies the GTE predicate on the "contacts" field.
func ContactsGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldContacts, v))
}

// ContactsLT applies the LT predicate on the "contacts" field.
func ContactsLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldContacts, v))
}

// ContactsLTE applies the LTE predicate on the "contacts" field.
func ContactsLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldContacts, v))
}

// ContactsContains applies the Contains predicate on the "contacts" field.
func ContactsContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldContacts, v))
}

// ContactsHasPrefix applies the HasPrefix predicate on the "contacts" field.
func ContactsHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldContacts, v))
}

// ContactsHasSuffix applies the HasSuffix predicate on the "contacts" field.
func ContactsHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldContacts, v))
}

// ContactsEqualFold applies the EqualFold predicate on the "contacts" field.
func ContactsEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldContacts, v))
}

// ContactsContainsFold applies the ContainsFold predicate on the "contacts" field.
func ContactsContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldContacts, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldEmail, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldDescription, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "type" field.
func TypeContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "type" field.
func TypeHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "type" field.
func TypeHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldType, v))
}

// TypeEqualFold applies the EqualFold predicate on the "type" field.
func TypeEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "type" field.
func TypeContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldType, v))
}

// ProvinceEQ applies the EQ predicate on the "province" field.
func ProvinceEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldProvince, v))
}

// ProvinceNEQ applies the NEQ predicate on the "province" field.
func ProvinceNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldProvince, v))
}

// ProvinceIn applies the In predicate on the "province" field.
func ProvinceIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldProvince, vs...))
}

// ProvinceNotIn applies the NotIn predicate on the "province" field.
func ProvinceNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldProvince, vs...))
}

// ProvinceGT applies the GT predicate on the "province" field.
func ProvinceGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldProvince, v))
}

// ProvinceGTE applies the GTE predicate on the "province" field.
func ProvinceGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldProvince, v))
}

// ProvinceLT applies the LT predicate on the "province" field.
func ProvinceLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldProvince, v))
}

// ProvinceLTE applies the LTE predicate on the "province" field.
func ProvinceLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldProvince, v))
}

// ProvinceContains applies the Contains predicate on the "province" field.
func ProvinceContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldProvince, v))
}

// ProvinceHasPrefix applies the HasPrefix predicate on the "province" field.
func ProvinceHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldProvince, v))
}

// ProvinceHasSuffix applies the HasSuffix predicate on the "province" field.
func ProvinceHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldProvince, v))
}

// ProvinceEqualFold applies the EqualFold predicate on the "province" field.
func ProvinceEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldProvince, v))
}

// ProvinceContainsFold applies the ContainsFold predicate on the "province" field.
func ProvinceContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldProvince, v))
}

// CityEQ applies the EQ predicate on the "city" field.
func CityEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldCity, v))
}

// CityNEQ applies the NEQ predicate on the "city" field.
func CityNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldCity, v))
}

// CityIn applies the In predicate on the "city" field.
func CityIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldCity, vs...))
}

// CityNotIn applies the NotIn predicate on the "city" field.
func CityNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldCity, vs...))
}

// CityGT applies the GT predicate on the "city" field.
func CityGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldCity, v))
}

// CityGTE applies the GTE predicate on the "city" field.
func CityGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldCity, v))
}

// CityLT applies the LT predicate on the "city" field.
func CityLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldCity, v))
}

// CityLTE applies the LTE predicate on the "city" field.
func CityLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldCity, v))
}

// CityContains applies the Contains predicate on the "city" field.
func CityContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldCity, v))
}

// CityHasPrefix applies the HasPrefix predicate on the "city" field.
func CityHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldCity, v))
}

// CityHasSuffix applies the HasSuffix predicate on the "city" field.
func CityHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldCity, v))
}

// CityEqualFold applies the EqualFold predicate on the "city" field.
func CityEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldCity, v))
}

// CityContainsFold applies the ContainsFold predicate on the "city" field.
func CityContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldCity, v))
}

// AreaEQ applies the EQ predicate on the "area" field.
func AreaEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldArea, v))
}

// AreaNEQ applies the NEQ predicate on the "area" field.
func AreaNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldArea, v))
}

// AreaIn applies the In predicate on the "area" field.
func AreaIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldArea, vs...))
}

// AreaNotIn applies the NotIn predicate on the "area" field.
func AreaNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldArea, vs...))
}

// AreaGT applies the GT predicate on the "area" field.
func AreaGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldArea, v))
}

// AreaGTE applies the GTE predicate on the "area" field.
func AreaGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldArea, v))
}

// AreaLT applies the LT predicate on the "area" field.
func AreaLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldArea, v))
}

// AreaLTE applies the LTE predicate on the "area" field.
func AreaLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldArea, v))
}

// AreaContains applies the Contains predicate on the "area" field.
func AreaContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldArea, v))
}

// AreaHasPrefix applies the HasPrefix predicate on the "area" field.
func AreaHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldArea, v))
}

// AreaHasSuffix applies the HasSuffix predicate on the "area" field.
func AreaHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldArea, v))
}

// AreaEqualFold applies the EqualFold predicate on the "area" field.
func AreaEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldArea, v))
}

// AreaContainsFold applies the ContainsFold predicate on the "area" field.
func AreaContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldArea, v))
}

// StreetEQ applies the EQ predicate on the "street" field.
func StreetEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldStreet, v))
}

// StreetNEQ applies the NEQ predicate on the "street" field.
func StreetNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldStreet, v))
}

// StreetIn applies the In predicate on the "street" field.
func StreetIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldStreet, vs...))
}

// StreetNotIn applies the NotIn predicate on the "street" field.
func StreetNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldStreet, vs...))
}

// StreetGT applies the GT predicate on the "street" field.
func StreetGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldStreet, v))
}

// StreetGTE applies the GTE predicate on the "street" field.
func StreetGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldStreet, v))
}

// StreetLT applies the LT predicate on the "street" field.
func StreetLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldStreet, v))
}

// StreetLTE applies the LTE predicate on the "street" field.
func StreetLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldStreet, v))
}

// StreetContains applies the Contains predicate on the "street" field.
func StreetContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldStreet, v))
}

// StreetHasPrefix applies the HasPrefix predicate on the "street" field.
func StreetHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldStreet, v))
}

// StreetHasSuffix applies the HasSuffix predicate on the "street" field.
func StreetHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldStreet, v))
}

// StreetEqualFold applies the EqualFold predicate on the "street" field.
func StreetEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldStreet, v))
}

// StreetContainsFold applies the ContainsFold predicate on the "street" field.
func StreetContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldStreet, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldAddress, v))
}

// AddrCodeEQ applies the EQ predicate on the "addr_code" field.
func AddrCodeEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldAddrCode, v))
}

// AddrCodeNEQ applies the NEQ predicate on the "addr_code" field.
func AddrCodeNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldAddrCode, v))
}

// AddrCodeIn applies the In predicate on the "addr_code" field.
func AddrCodeIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldAddrCode, vs...))
}

// AddrCodeNotIn applies the NotIn predicate on the "addr_code" field.
func AddrCodeNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldAddrCode, vs...))
}

// AddrCodeGT applies the GT predicate on the "addr_code" field.
func AddrCodeGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldAddrCode, v))
}

// AddrCodeGTE applies the GTE predicate on the "addr_code" field.
func AddrCodeGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldAddrCode, v))
}

// AddrCodeLT applies the LT predicate on the "addr_code" field.
func AddrCodeLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldAddrCode, v))
}

// AddrCodeLTE applies the LTE predicate on the "addr_code" field.
func AddrCodeLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldAddrCode, v))
}

// AddrCodeContains applies the Contains predicate on the "addr_code" field.
func AddrCodeContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldAddrCode, v))
}

// AddrCodeHasPrefix applies the HasPrefix predicate on the "addr_code" field.
func AddrCodeHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldAddrCode, v))
}

// AddrCodeHasSuffix applies the HasSuffix predicate on the "addr_code" field.
func AddrCodeHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldAddrCode, v))
}

// AddrCodeEqualFold applies the EqualFold predicate on the "addr_code" field.
func AddrCodeEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldAddrCode, v))
}

// AddrCodeContainsFold applies the ContainsFold predicate on the "addr_code" field.
func AddrCodeContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldAddrCode, v))
}

// FaxEQ applies the EQ predicate on the "fax" field.
func FaxEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldFax, v))
}

// FaxNEQ applies the NEQ predicate on the "fax" field.
func FaxNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldFax, v))
}

// FaxIn applies the In predicate on the "fax" field.
func FaxIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldFax, vs...))
}

// FaxNotIn applies the NotIn predicate on the "fax" field.
func FaxNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldFax, vs...))
}

// FaxGT applies the GT predicate on the "fax" field.
func FaxGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldFax, v))
}

// FaxGTE applies the GTE predicate on the "fax" field.
func FaxGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldFax, v))
}

// FaxLT applies the LT predicate on the "fax" field.
func FaxLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldFax, v))
}

// FaxLTE applies the LTE predicate on the "fax" field.
func FaxLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldFax, v))
}

// FaxContains applies the Contains predicate on the "fax" field.
func FaxContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldFax, v))
}

// FaxHasPrefix applies the HasPrefix predicate on the "fax" field.
func FaxHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldFax, v))
}

// FaxHasSuffix applies the HasSuffix predicate on the "fax" field.
func FaxHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldFax, v))
}

// FaxEqualFold applies the EqualFold predicate on the "fax" field.
func FaxEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldFax, v))
}

// FaxContainsFold applies the ContainsFold predicate on the "fax" field.
func FaxContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldFax, v))
}

// PhoneNumEQ applies the EQ predicate on the "phone_num" field.
func PhoneNumEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldPhoneNum, v))
}

// PhoneNumNEQ applies the NEQ predicate on the "phone_num" field.
func PhoneNumNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldPhoneNum, v))
}

// PhoneNumIn applies the In predicate on the "phone_num" field.
func PhoneNumIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldPhoneNum, vs...))
}

// PhoneNumNotIn applies the NotIn predicate on the "phone_num" field.
func PhoneNumNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldPhoneNum, vs...))
}

// PhoneNumGT applies the GT predicate on the "phone_num" field.
func PhoneNumGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldPhoneNum, v))
}

// PhoneNumGTE applies the GTE predicate on the "phone_num" field.
func PhoneNumGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldPhoneNum, v))
}

// PhoneNumLT applies the LT predicate on the "phone_num" field.
func PhoneNumLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldPhoneNum, v))
}

// PhoneNumLTE applies the LTE predicate on the "phone_num" field.
func PhoneNumLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldPhoneNum, v))
}

// PhoneNumContains applies the Contains predicate on the "phone_num" field.
func PhoneNumContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldPhoneNum, v))
}

// PhoneNumHasPrefix applies the HasPrefix predicate on the "phone_num" field.
func PhoneNumHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldPhoneNum, v))
}

// PhoneNumHasSuffix applies the HasSuffix predicate on the "phone_num" field.
func PhoneNumHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldPhoneNum, v))
}

// PhoneNumEqualFold applies the EqualFold predicate on the "phone_num" field.
func PhoneNumEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldPhoneNum, v))
}

// PhoneNumContainsFold applies the ContainsFold predicate on the "phone_num" field.
func PhoneNumContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldPhoneNum, v))
}

// TelephoneEQ applies the EQ predicate on the "telephone" field.
func TelephoneEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldTelephone, v))
}

// TelephoneNEQ applies the NEQ predicate on the "telephone" field.
func TelephoneNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldTelephone, v))
}

// TelephoneIn applies the In predicate on the "telephone" field.
func TelephoneIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldTelephone, vs...))
}

// TelephoneNotIn applies the NotIn predicate on the "telephone" field.
func TelephoneNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldTelephone, vs...))
}

// TelephoneGT applies the GT predicate on the "telephone" field.
func TelephoneGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldTelephone, v))
}

// TelephoneGTE applies the GTE predicate on the "telephone" field.
func TelephoneGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldTelephone, v))
}

// TelephoneLT applies the LT predicate on the "telephone" field.
func TelephoneLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldTelephone, v))
}

// TelephoneLTE applies the LTE predicate on the "telephone" field.
func TelephoneLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldTelephone, v))
}

// TelephoneContains applies the Contains predicate on the "telephone" field.
func TelephoneContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldTelephone, v))
}

// TelephoneHasPrefix applies the HasPrefix predicate on the "telephone" field.
func TelephoneHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldTelephone, v))
}

// TelephoneHasSuffix applies the HasSuffix predicate on the "telephone" field.
func TelephoneHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldTelephone, v))
}

// TelephoneEqualFold applies the EqualFold predicate on the "telephone" field.
func TelephoneEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldTelephone, v))
}

// TelephoneContainsFold applies the ContainsFold predicate on the "telephone" field.
func TelephoneContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldTelephone, v))
}

// TaxNumEQ applies the EQ predicate on the "tax_num" field.
func TaxNumEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldTaxNum, v))
}

// TaxNumNEQ applies the NEQ predicate on the "tax_num" field.
func TaxNumNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldTaxNum, v))
}

// TaxNumIn applies the In predicate on the "tax_num" field.
func TaxNumIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldTaxNum, vs...))
}

// TaxNumNotIn applies the NotIn predicate on the "tax_num" field.
func TaxNumNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldTaxNum, vs...))
}

// TaxNumGT applies the GT predicate on the "tax_num" field.
func TaxNumGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldTaxNum, v))
}

// TaxNumGTE applies the GTE predicate on the "tax_num" field.
func TaxNumGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldTaxNum, v))
}

// TaxNumLT applies the LT predicate on the "tax_num" field.
func TaxNumLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldTaxNum, v))
}

// TaxNumLTE applies the LTE predicate on the "tax_num" field.
func TaxNumLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldTaxNum, v))
}

// TaxNumContains applies the Contains predicate on the "tax_num" field.
func TaxNumContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldTaxNum, v))
}

// TaxNumHasPrefix applies the HasPrefix predicate on the "tax_num" field.
func TaxNumHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldTaxNum, v))
}

// TaxNumHasSuffix applies the HasSuffix predicate on the "tax_num" field.
func TaxNumHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldTaxNum, v))
}

// TaxNumEqualFold applies the EqualFold predicate on the "tax_num" field.
func TaxNumEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldTaxNum, v))
}

// TaxNumContainsFold applies the ContainsFold predicate on the "tax_num" field.
func TaxNumContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldTaxNum, v))
}

// BankNameEQ applies the EQ predicate on the "bank_name" field.
func BankNameEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldBankName, v))
}

// BankNameNEQ applies the NEQ predicate on the "bank_name" field.
func BankNameNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldBankName, v))
}

// BankNameIn applies the In predicate on the "bank_name" field.
func BankNameIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldBankName, vs...))
}

// BankNameNotIn applies the NotIn predicate on the "bank_name" field.
func BankNameNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldBankName, vs...))
}

// BankNameGT applies the GT predicate on the "bank_name" field.
func BankNameGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldBankName, v))
}

// BankNameGTE applies the GTE predicate on the "bank_name" field.
func BankNameGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldBankName, v))
}

// BankNameLT applies the LT predicate on the "bank_name" field.
func BankNameLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldBankName, v))
}

// BankNameLTE applies the LTE predicate on the "bank_name" field.
func BankNameLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldBankName, v))
}

// BankNameContains applies the Contains predicate on the "bank_name" field.
func BankNameContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldBankName, v))
}

// BankNameHasPrefix applies the HasPrefix predicate on the "bank_name" field.
func BankNameHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldBankName, v))
}

// BankNameHasSuffix applies the HasSuffix predicate on the "bank_name" field.
func BankNameHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldBankName, v))
}

// BankNameEqualFold applies the EqualFold predicate on the "bank_name" field.
func BankNameEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldBankName, v))
}

// BankNameContainsFold applies the ContainsFold predicate on the "bank_name" field.
func BankNameContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldBankName, v))
}

// AccountNumberEQ applies the EQ predicate on the "account_number" field.
func AccountNumberEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldAccountNumber, v))
}

// AccountNumberNEQ applies the NEQ predicate on the "account_number" field.
func AccountNumberNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldAccountNumber, v))
}

// AccountNumberIn applies the In predicate on the "account_number" field.
func AccountNumberIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldAccountNumber, vs...))
}

// AccountNumberNotIn applies the NotIn predicate on the "account_number" field.
func AccountNumberNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldAccountNumber, vs...))
}

// AccountNumberGT applies the GT predicate on the "account_number" field.
func AccountNumberGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldAccountNumber, v))
}

// AccountNumberGTE applies the GTE predicate on the "account_number" field.
func AccountNumberGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldAccountNumber, v))
}

// AccountNumberLT applies the LT predicate on the "account_number" field.
func AccountNumberLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldAccountNumber, v))
}

// AccountNumberLTE applies the LTE predicate on the "account_number" field.
func AccountNumberLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldAccountNumber, v))
}

// AccountNumberContains applies the Contains predicate on the "account_number" field.
func AccountNumberContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldAccountNumber, v))
}

// AccountNumberHasPrefix applies the HasPrefix predicate on the "account_number" field.
func AccountNumberHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldAccountNumber, v))
}

// AccountNumberHasSuffix applies the HasSuffix predicate on the "account_number" field.
func AccountNumberHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldAccountNumber, v))
}

// AccountNumberEqualFold applies the EqualFold predicate on the "account_number" field.
func AccountNumberEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldAccountNumber, v))
}

// AccountNumberContainsFold applies the ContainsFold predicate on the "account_number" field.
func AccountNumberContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldAccountNumber, v))
}

// SortEQ applies the EQ predicate on the "sort" field.
func SortEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldSort, v))
}

// SortNEQ applies the NEQ predicate on the "sort" field.
func SortNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldSort, v))
}

// SortIn applies the In predicate on the "sort" field.
func SortIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldSort, vs...))
}

// SortNotIn applies the NotIn predicate on the "sort" field.
func SortNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldSort, vs...))
}

// SortGT applies the GT predicate on the "sort" field.
func SortGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldSort, v))
}

// SortGTE applies the GTE predicate on the "sort" field.
func SortGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldSort, v))
}

// SortLT applies the LT predicate on the "sort" field.
func SortLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldSort, v))
}

// SortLTE applies the LTE predicate on the "sort" field.
func SortLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldSort, v))
}

// SortContains applies the Contains predicate on the "sort" field.
func SortContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldSort, v))
}

// SortHasPrefix applies the HasPrefix predicate on the "sort" field.
func SortHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldSort, v))
}

// SortHasSuffix applies the HasSuffix predicate on the "sort" field.
func SortHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldSort, v))
}

// SortEqualFold applies the EqualFold predicate on the "sort" field.
func SortEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldSort, v))
}

// SortContainsFold applies the ContainsFold predicate on the "sort" field.
func SortContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldSort, v))
}

// EnabledEQ applies the EQ predicate on the "enabled" field.
func EnabledEQ(v bool) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldEnabled, v))
}

// EnabledNEQ applies the NEQ predicate on the "enabled" field.
func EnabledNEQ(v bool) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldEnabled, v))
}

// EnabledIsNil applies the IsNil predicate on the "enabled" field.
func EnabledIsNil() predicate.Tenants {
	return predicate.Tenants(sql.FieldIsNull(FieldEnabled))
}

// EnabledNotNil applies the NotNil predicate on the "enabled" field.
func EnabledNotNil() predicate.Tenants {
	return predicate.Tenants(sql.FieldNotNull(FieldEnabled))
}

// DeleteFlagEQ applies the EQ predicate on the "delete_flag" field.
func DeleteFlagEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldDeleteFlag, v))
}

// DeleteFlagNEQ applies the NEQ predicate on the "delete_flag" field.
func DeleteFlagNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldDeleteFlag, v))
}

// DeleteFlagIn applies the In predicate on the "delete_flag" field.
func DeleteFlagIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldDeleteFlag, vs...))
}

// DeleteFlagNotIn applies the NotIn predicate on the "delete_flag" field.
func DeleteFlagNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldDeleteFlag, vs...))
}

// DeleteFlagGT applies the GT predicate on the "delete_flag" field.
func DeleteFlagGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldDeleteFlag, v))
}

// DeleteFlagGTE applies the GTE predicate on the "delete_flag" field.
func DeleteFlagGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldDeleteFlag, v))
}

// DeleteFlagLT applies the LT predicate on the "delete_flag" field.
func DeleteFlagLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldDeleteFlag, v))
}

// DeleteFlagLTE applies the LTE predicate on the "delete_flag" field.
func DeleteFlagLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldDeleteFlag, v))
}

// DeleteFlagContains applies the Contains predicate on the "delete_flag" field.
func DeleteFlagContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldDeleteFlag, v))
}

// DeleteFlagHasPrefix applies the HasPrefix predicate on the "delete_flag" field.
func DeleteFlagHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldDeleteFlag, v))
}

// DeleteFlagHasSuffix applies the HasSuffix predicate on the "delete_flag" field.
func DeleteFlagHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldDeleteFlag, v))
}

// DeleteFlagEqualFold applies the EqualFold predicate on the "delete_flag" field.
func DeleteFlagEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldDeleteFlag, v))
}

// DeleteFlagContainsFold applies the ContainsFold predicate on the "delete_flag" field.
func DeleteFlagContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldDeleteFlag, v))
}

// IsystemEQ applies the EQ predicate on the "isystem" field.
func IsystemEQ(v bool) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldIsystem, v))
}

// IsystemNEQ applies the NEQ predicate on the "isystem" field.
func IsystemNEQ(v bool) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldIsystem, v))
}

// TaxRateEQ applies the EQ predicate on the "tax_rate" field.
func TaxRateEQ(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldTaxRate, v))
}

// TaxRateNEQ applies the NEQ predicate on the "tax_rate" field.
func TaxRateNEQ(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldTaxRate, v))
}

// TaxRateIn applies the In predicate on the "tax_rate" field.
func TaxRateIn(vs ...schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldTaxRate, vs...))
}

// TaxRateNotIn applies the NotIn predicate on the "tax_rate" field.
func TaxRateNotIn(vs ...schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldTaxRate, vs...))
}

// TaxRateGT applies the GT predicate on the "tax_rate" field.
func TaxRateGT(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldTaxRate, v))
}

// TaxRateGTE applies the GTE predicate on the "tax_rate" field.
func TaxRateGTE(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldTaxRate, v))
}

// TaxRateLT applies the LT predicate on the "tax_rate" field.
func TaxRateLT(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldTaxRate, v))
}

// TaxRateLTE applies the LTE predicate on the "tax_rate" field.
func TaxRateLTE(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldTaxRate, v))
}

// AdvanceInEQ applies the EQ predicate on the "advance_in" field.
func AdvanceInEQ(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldAdvanceIn, v))
}

// AdvanceInNEQ applies the NEQ predicate on the "advance_in" field.
func AdvanceInNEQ(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldAdvanceIn, v))
}

// AdvanceInIn applies the In predicate on the "advance_in" field.
func AdvanceInIn(vs ...schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldAdvanceIn, vs...))
}

// AdvanceInNotIn applies the NotIn predicate on the "advance_in" field.
func AdvanceInNotIn(vs ...schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldAdvanceIn, vs...))
}

// AdvanceInGT applies the GT predicate on the "advance_in" field.
func AdvanceInGT(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldAdvanceIn, v))
}

// AdvanceInGTE applies the GTE predicate on the "advance_in" field.
func AdvanceInGTE(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldAdvanceIn, v))
}

// AdvanceInLT applies the LT predicate on the "advance_in" field.
func AdvanceInLT(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldAdvanceIn, v))
}

// AdvanceInLTE applies the LTE predicate on the "advance_in" field.
func AdvanceInLTE(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldAdvanceIn, v))
}

// BeginNeedGetEQ applies the EQ predicate on the "begin_need_get" field.
func BeginNeedGetEQ(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldBeginNeedGet, v))
}

// BeginNeedGetNEQ applies the NEQ predicate on the "begin_need_get" field.
func BeginNeedGetNEQ(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldBeginNeedGet, v))
}

// BeginNeedGetIn applies the In predicate on the "begin_need_get" field.
func BeginNeedGetIn(vs ...schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldBeginNeedGet, vs...))
}

// BeginNeedGetNotIn applies the NotIn predicate on the "begin_need_get" field.
func BeginNeedGetNotIn(vs ...schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldBeginNeedGet, vs...))
}

// BeginNeedGetGT applies the GT predicate on the "begin_need_get" field.
func BeginNeedGetGT(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldBeginNeedGet, v))
}

// BeginNeedGetGTE applies the GTE predicate on the "begin_need_get" field.
func BeginNeedGetGTE(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldBeginNeedGet, v))
}

// BeginNeedGetLT applies the LT predicate on the "begin_need_get" field.
func BeginNeedGetLT(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldBeginNeedGet, v))
}

// BeginNeedGetLTE applies the LTE predicate on the "begin_need_get" field.
func BeginNeedGetLTE(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldBeginNeedGet, v))
}

// BeginNeedPayEQ applies the EQ predicate on the "begin_need_pay" field.
func BeginNeedPayEQ(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldBeginNeedPay, v))
}

// BeginNeedPayNEQ applies the NEQ predicate on the "begin_need_pay" field.
func BeginNeedPayNEQ(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldBeginNeedPay, v))
}

// BeginNeedPayIn applies the In predicate on the "begin_need_pay" field.
func BeginNeedPayIn(vs ...schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldBeginNeedPay, vs...))
}

// BeginNeedPayNotIn applies the NotIn predicate on the "begin_need_pay" field.
func BeginNeedPayNotIn(vs ...schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldBeginNeedPay, vs...))
}

// BeginNeedPayGT applies the GT predicate on the "begin_need_pay" field.
func BeginNeedPayGT(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldBeginNeedPay, v))
}

// BeginNeedPayGTE applies the GTE predicate on the "begin_need_pay" field.
func BeginNeedPayGTE(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldBeginNeedPay, v))
}

// BeginNeedPayLT applies the LT predicate on the "begin_need_pay" field.
func BeginNeedPayLT(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldBeginNeedPay, v))
}

// BeginNeedPayLTE applies the LTE predicate on the "begin_need_pay" field.
func BeginNeedPayLTE(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldBeginNeedPay, v))
}

// AllNeedGetEQ applies the EQ predicate on the "all_need_get" field.
func AllNeedGetEQ(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldAllNeedGet, v))
}

// AllNeedGetNEQ applies the NEQ predicate on the "all_need_get" field.
func AllNeedGetNEQ(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldAllNeedGet, v))
}

// AllNeedGetIn applies the In predicate on the "all_need_get" field.
func AllNeedGetIn(vs ...schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldAllNeedGet, vs...))
}

// AllNeedGetNotIn applies the NotIn predicate on the "all_need_get" field.
func AllNeedGetNotIn(vs ...schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldAllNeedGet, vs...))
}

// AllNeedGetGT applies the GT predicate on the "all_need_get" field.
func AllNeedGetGT(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldAllNeedGet, v))
}

// AllNeedGetGTE applies the GTE predicate on the "all_need_get" field.
func AllNeedGetGTE(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldAllNeedGet, v))
}

// AllNeedGetLT applies the LT predicate on the "all_need_get" field.
func AllNeedGetLT(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldAllNeedGet, v))
}

// AllNeedGetLTE applies the LTE predicate on the "all_need_get" field.
func AllNeedGetLTE(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldAllNeedGet, v))
}

// AllNeedPayEQ applies the EQ predicate on the "all_need_pay" field.
func AllNeedPayEQ(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldAllNeedPay, v))
}

// AllNeedPayNEQ applies the NEQ predicate on the "all_need_pay" field.
func AllNeedPayNEQ(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldAllNeedPay, v))
}

// AllNeedPayIn applies the In predicate on the "all_need_pay" field.
func AllNeedPayIn(vs ...schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldAllNeedPay, vs...))
}

// AllNeedPayNotIn applies the NotIn predicate on the "all_need_pay" field.
func AllNeedPayNotIn(vs ...schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldAllNeedPay, vs...))
}

// AllNeedPayGT applies the GT predicate on the "all_need_pay" field.
func AllNeedPayGT(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldAllNeedPay, v))
}

// AllNeedPayGTE applies the GTE predicate on the "all_need_pay" field.
func AllNeedPayGTE(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldAllNeedPay, v))
}

// AllNeedPayLT applies the LT predicate on the "all_need_pay" field.
func AllNeedPayLT(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldAllNeedPay, v))
}

// AllNeedPayLTE applies the LTE predicate on the "all_need_pay" field.
func AllNeedPayLTE(v schema.Decimal) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldAllNeedPay, v))
}

// CreatorEQ applies the EQ predicate on the "creator" field.
func CreatorEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldCreator, v))
}

// CreatorNEQ applies the NEQ predicate on the "creator" field.
func CreatorNEQ(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldCreator, v))
}

// CreatorIn applies the In predicate on the "creator" field.
func CreatorIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldCreator, vs...))
}

// CreatorNotIn applies the NotIn predicate on the "creator" field.
func CreatorNotIn(vs ...string) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldCreator, vs...))
}

// CreatorGT applies the GT predicate on the "creator" field.
func CreatorGT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldCreator, v))
}

// CreatorGTE applies the GTE predicate on the "creator" field.
func CreatorGTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldCreator, v))
}

// CreatorLT applies the LT predicate on the "creator" field.
func CreatorLT(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldCreator, v))
}

// CreatorLTE applies the LTE predicate on the "creator" field.
func CreatorLTE(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldCreator, v))
}

// CreatorContains applies the Contains predicate on the "creator" field.
func CreatorContains(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContains(FieldCreator, v))
}

// CreatorHasPrefix applies the HasPrefix predicate on the "creator" field.
func CreatorHasPrefix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasPrefix(FieldCreator, v))
}

// CreatorHasSuffix applies the HasSuffix predicate on the "creator" field.
func CreatorHasSuffix(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldHasSuffix(FieldCreator, v))
}

// CreatorEqualFold applies the EqualFold predicate on the "creator" field.
func CreatorEqualFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldEqualFold(FieldCreator, v))
}

// CreatorContainsFold applies the ContainsFold predicate on the "creator" field.
func CreatorContainsFold(v string) predicate.Tenants {
	return predicate.Tenants(sql.FieldContainsFold(FieldCreator, v))
}

// CreatedTimeEQ applies the EQ predicate on the "created_time" field.
func CreatedTimeEQ(v time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldCreatedTime, v))
}

// CreatedTimeNEQ applies the NEQ predicate on the "created_time" field.
func CreatedTimeNEQ(v time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldCreatedTime, v))
}

// CreatedTimeIn applies the In predicate on the "created_time" field.
func CreatedTimeIn(vs ...time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldCreatedTime, vs...))
}

// CreatedTimeNotIn applies the NotIn predicate on the "created_time" field.
func CreatedTimeNotIn(vs ...time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldCreatedTime, vs...))
}

// CreatedTimeGT applies the GT predicate on the "created_time" field.
func CreatedTimeGT(v time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldCreatedTime, v))
}

// CreatedTimeGTE applies the GTE predicate on the "created_time" field.
func CreatedTimeGTE(v time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldCreatedTime, v))
}

// CreatedTimeLT applies the LT predicate on the "created_time" field.
func CreatedTimeLT(v time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldCreatedTime, v))
}

// CreatedTimeLTE applies the LTE predicate on the "created_time" field.
func CreatedTimeLTE(v time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldCreatedTime, v))
}

// CreatedTimeIsNil applies the IsNil predicate on the "created_time" field.
func CreatedTimeIsNil() predicate.Tenants {
	return predicate.Tenants(sql.FieldIsNull(FieldCreatedTime))
}

// CreatedTimeNotNil applies the NotNil predicate on the "created_time" field.
func CreatedTimeNotNil() predicate.Tenants {
	return predicate.Tenants(sql.FieldNotNull(FieldCreatedTime))
}

// UpdatedTimeEQ applies the EQ predicate on the "updated_time" field.
func UpdatedTimeEQ(v time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldEQ(FieldUpdatedTime, v))
}

// UpdatedTimeNEQ applies the NEQ predicate on the "updated_time" field.
func UpdatedTimeNEQ(v time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldNEQ(FieldUpdatedTime, v))
}

// UpdatedTimeIn applies the In predicate on the "updated_time" field.
func UpdatedTimeIn(vs ...time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldIn(FieldUpdatedTime, vs...))
}

// UpdatedTimeNotIn applies the NotIn predicate on the "updated_time" field.
func UpdatedTimeNotIn(vs ...time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldNotIn(FieldUpdatedTime, vs...))
}

// UpdatedTimeGT applies the GT predicate on the "updated_time" field.
func UpdatedTimeGT(v time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldGT(FieldUpdatedTime, v))
}

// UpdatedTimeGTE applies the GTE predicate on the "updated_time" field.
func UpdatedTimeGTE(v time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldGTE(FieldUpdatedTime, v))
}

// UpdatedTimeLT applies the LT predicate on the "updated_time" field.
func UpdatedTimeLT(v time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldLT(FieldUpdatedTime, v))
}

// UpdatedTimeLTE applies the LTE predicate on the "updated_time" field.
func UpdatedTimeLTE(v time.Time) predicate.Tenants {
	return predicate.Tenants(sql.FieldLTE(FieldUpdatedTime, v))
}

// UpdatedTimeIsNil applies the IsNil predicate on the "updated_time" field.
func UpdatedTimeIsNil() predicate.Tenants {
	return predicate.Tenants(sql.FieldIsNull(FieldUpdatedTime))
}

// UpdatedTimeNotNil applies the NotNil predicate on the "updated_time" field.
func UpdatedTimeNotNil() predicate.Tenants {
	return predicate.Tenants(sql.FieldNotNull(FieldUpdatedTime))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Tenants) predicate.Tenants {
	return predicate.Tenants(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Tenants) predicate.Tenants {
	return predicate.Tenants(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Tenants) predicate.Tenants {
	return predicate.Tenants(sql.NotPredicates(p))
}

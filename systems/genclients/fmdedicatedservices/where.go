// Code generated by ent, DO NOT EDIT.

package fmdedicatedservices

import (
	"fmcam/systems/genclients/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLTE(FieldID, id))
}

// WorkID applies equality check predicate on the "work_id" field. It's identical to WorkIDEQ.
func WorkID(v int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldWorkID, v))
}

// Contacts applies equality check predicate on the "contacts" field. It's identical to ContactsEQ.
func Contacts(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldContacts, v))
}

// Supplier applies equality check predicate on the "supplier" field. It's identical to SupplierEQ.
func Supplier(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldSupplier, v))
}

// Phonenum applies equality check predicate on the "phonenum" field. It's identical to PhonenumEQ.
func Phonenum(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldPhonenum, v))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldEmail, v))
}

// Fax applies equality check predicate on the "fax" field. It's identical to FaxEQ.
func Fax(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldFax, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldDescription, v))
}

// Creator applies equality check predicate on the "creator" field. It's identical to CreatorEQ.
func Creator(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldCreator, v))
}

// CreatedTime applies equality check predicate on the "created_time" field. It's identical to CreatedTimeEQ.
func CreatedTime(v time.Time) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldCreatedTime, v))
}

// WorkIDEQ applies the EQ predicate on the "work_id" field.
func WorkIDEQ(v int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldWorkID, v))
}

// WorkIDNEQ applies the NEQ predicate on the "work_id" field.
func WorkIDNEQ(v int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNEQ(FieldWorkID, v))
}

// WorkIDIn applies the In predicate on the "work_id" field.
func WorkIDIn(vs ...int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIn(FieldWorkID, vs...))
}

// WorkIDNotIn applies the NotIn predicate on the "work_id" field.
func WorkIDNotIn(vs ...int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotIn(FieldWorkID, vs...))
}

// WorkIDGT applies the GT predicate on the "work_id" field.
func WorkIDGT(v int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGT(FieldWorkID, v))
}

// WorkIDGTE applies the GTE predicate on the "work_id" field.
func WorkIDGTE(v int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGTE(FieldWorkID, v))
}

// WorkIDLT applies the LT predicate on the "work_id" field.
func WorkIDLT(v int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLT(FieldWorkID, v))
}

// WorkIDLTE applies the LTE predicate on the "work_id" field.
func WorkIDLTE(v int64) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLTE(FieldWorkID, v))
}

// WorkIDIsNil applies the IsNil predicate on the "work_id" field.
func WorkIDIsNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIsNull(FieldWorkID))
}

// WorkIDNotNil applies the NotNil predicate on the "work_id" field.
func WorkIDNotNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotNull(FieldWorkID))
}

// ContactsEQ applies the EQ predicate on the "contacts" field.
func ContactsEQ(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldContacts, v))
}

// ContactsNEQ applies the NEQ predicate on the "contacts" field.
func ContactsNEQ(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNEQ(FieldContacts, v))
}

// ContactsIn applies the In predicate on the "contacts" field.
func ContactsIn(vs ...string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIn(FieldContacts, vs...))
}

// ContactsNotIn applies the NotIn predicate on the "contacts" field.
func ContactsNotIn(vs ...string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotIn(FieldContacts, vs...))
}

// ContactsGT applies the GT predicate on the "contacts" field.
func ContactsGT(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGT(FieldContacts, v))
}

// ContactsGTE applies the GTE predicate on the "contacts" field.
func ContactsGTE(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGTE(FieldContacts, v))
}

// ContactsLT applies the LT predicate on the "contacts" field.
func ContactsLT(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLT(FieldContacts, v))
}

// ContactsLTE applies the LTE predicate on the "contacts" field.
func ContactsLTE(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLTE(FieldContacts, v))
}

// ContactsContains applies the Contains predicate on the "contacts" field.
func ContactsContains(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldContains(FieldContacts, v))
}

// ContactsHasPrefix applies the HasPrefix predicate on the "contacts" field.
func ContactsHasPrefix(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldHasPrefix(FieldContacts, v))
}

// ContactsHasSuffix applies the HasSuffix predicate on the "contacts" field.
func ContactsHasSuffix(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldHasSuffix(FieldContacts, v))
}

// ContactsIsNil applies the IsNil predicate on the "contacts" field.
func ContactsIsNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIsNull(FieldContacts))
}

// ContactsNotNil applies the NotNil predicate on the "contacts" field.
func ContactsNotNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotNull(FieldContacts))
}

// ContactsEqualFold applies the EqualFold predicate on the "contacts" field.
func ContactsEqualFold(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEqualFold(FieldContacts, v))
}

// ContactsContainsFold applies the ContainsFold predicate on the "contacts" field.
func ContactsContainsFold(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldContainsFold(FieldContacts, v))
}

// SupplierEQ applies the EQ predicate on the "supplier" field.
func SupplierEQ(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldSupplier, v))
}

// SupplierNEQ applies the NEQ predicate on the "supplier" field.
func SupplierNEQ(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNEQ(FieldSupplier, v))
}

// SupplierIn applies the In predicate on the "supplier" field.
func SupplierIn(vs ...string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIn(FieldSupplier, vs...))
}

// SupplierNotIn applies the NotIn predicate on the "supplier" field.
func SupplierNotIn(vs ...string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotIn(FieldSupplier, vs...))
}

// SupplierGT applies the GT predicate on the "supplier" field.
func SupplierGT(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGT(FieldSupplier, v))
}

// SupplierGTE applies the GTE predicate on the "supplier" field.
func SupplierGTE(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGTE(FieldSupplier, v))
}

// SupplierLT applies the LT predicate on the "supplier" field.
func SupplierLT(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLT(FieldSupplier, v))
}

// SupplierLTE applies the LTE predicate on the "supplier" field.
func SupplierLTE(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLTE(FieldSupplier, v))
}

// SupplierContains applies the Contains predicate on the "supplier" field.
func SupplierContains(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldContains(FieldSupplier, v))
}

// SupplierHasPrefix applies the HasPrefix predicate on the "supplier" field.
func SupplierHasPrefix(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldHasPrefix(FieldSupplier, v))
}

// SupplierHasSuffix applies the HasSuffix predicate on the "supplier" field.
func SupplierHasSuffix(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldHasSuffix(FieldSupplier, v))
}

// SupplierIsNil applies the IsNil predicate on the "supplier" field.
func SupplierIsNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIsNull(FieldSupplier))
}

// SupplierNotNil applies the NotNil predicate on the "supplier" field.
func SupplierNotNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotNull(FieldSupplier))
}

// SupplierEqualFold applies the EqualFold predicate on the "supplier" field.
func SupplierEqualFold(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEqualFold(FieldSupplier, v))
}

// SupplierContainsFold applies the ContainsFold predicate on the "supplier" field.
func SupplierContainsFold(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldContainsFold(FieldSupplier, v))
}

// PhonenumEQ applies the EQ predicate on the "phonenum" field.
func PhonenumEQ(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldPhonenum, v))
}

// PhonenumNEQ applies the NEQ predicate on the "phonenum" field.
func PhonenumNEQ(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNEQ(FieldPhonenum, v))
}

// PhonenumIn applies the In predicate on the "phonenum" field.
func PhonenumIn(vs ...string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIn(FieldPhonenum, vs...))
}

// PhonenumNotIn applies the NotIn predicate on the "phonenum" field.
func PhonenumNotIn(vs ...string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotIn(FieldPhonenum, vs...))
}

// PhonenumGT applies the GT predicate on the "phonenum" field.
func PhonenumGT(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGT(FieldPhonenum, v))
}

// PhonenumGTE applies the GTE predicate on the "phonenum" field.
func PhonenumGTE(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGTE(FieldPhonenum, v))
}

// PhonenumLT applies the LT predicate on the "phonenum" field.
func PhonenumLT(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLT(FieldPhonenum, v))
}

// PhonenumLTE applies the LTE predicate on the "phonenum" field.
func PhonenumLTE(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLTE(FieldPhonenum, v))
}

// PhonenumContains applies the Contains predicate on the "phonenum" field.
func PhonenumContains(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldContains(FieldPhonenum, v))
}

// PhonenumHasPrefix applies the HasPrefix predicate on the "phonenum" field.
func PhonenumHasPrefix(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldHasPrefix(FieldPhonenum, v))
}

// PhonenumHasSuffix applies the HasSuffix predicate on the "phonenum" field.
func PhonenumHasSuffix(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldHasSuffix(FieldPhonenum, v))
}

// PhonenumIsNil applies the IsNil predicate on the "phonenum" field.
func PhonenumIsNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIsNull(FieldPhonenum))
}

// PhonenumNotNil applies the NotNil predicate on the "phonenum" field.
func PhonenumNotNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotNull(FieldPhonenum))
}

// PhonenumEqualFold applies the EqualFold predicate on the "phonenum" field.
func PhonenumEqualFold(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEqualFold(FieldPhonenum, v))
}

// PhonenumContainsFold applies the ContainsFold predicate on the "phonenum" field.
func PhonenumContainsFold(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldContainsFold(FieldPhonenum, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailIsNil applies the IsNil predicate on the "email" field.
func EmailIsNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIsNull(FieldEmail))
}

// EmailNotNil applies the NotNil predicate on the "email" field.
func EmailNotNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotNull(FieldEmail))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldContainsFold(FieldEmail, v))
}

// FaxEQ applies the EQ predicate on the "fax" field.
func FaxEQ(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldFax, v))
}

// FaxNEQ applies the NEQ predicate on the "fax" field.
func FaxNEQ(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNEQ(FieldFax, v))
}

// FaxIn applies the In predicate on the "fax" field.
func FaxIn(vs ...string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIn(FieldFax, vs...))
}

// FaxNotIn applies the NotIn predicate on the "fax" field.
func FaxNotIn(vs ...string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotIn(FieldFax, vs...))
}

// FaxGT applies the GT predicate on the "fax" field.
func FaxGT(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGT(FieldFax, v))
}

// FaxGTE applies the GTE predicate on the "fax" field.
func FaxGTE(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGTE(FieldFax, v))
}

// FaxLT applies the LT predicate on the "fax" field.
func FaxLT(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLT(FieldFax, v))
}

// FaxLTE applies the LTE predicate on the "fax" field.
func FaxLTE(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLTE(FieldFax, v))
}

// FaxContains applies the Contains predicate on the "fax" field.
func FaxContains(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldContains(FieldFax, v))
}

// FaxHasPrefix applies the HasPrefix predicate on the "fax" field.
func FaxHasPrefix(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldHasPrefix(FieldFax, v))
}

// FaxHasSuffix applies the HasSuffix predicate on the "fax" field.
func FaxHasSuffix(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldHasSuffix(FieldFax, v))
}

// FaxIsNil applies the IsNil predicate on the "fax" field.
func FaxIsNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIsNull(FieldFax))
}

// FaxNotNil applies the NotNil predicate on the "fax" field.
func FaxNotNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotNull(FieldFax))
}

// FaxEqualFold applies the EqualFold predicate on the "fax" field.
func FaxEqualFold(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEqualFold(FieldFax, v))
}

// FaxContainsFold applies the ContainsFold predicate on the "fax" field.
func FaxContainsFold(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldContainsFold(FieldFax, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldContainsFold(FieldDescription, v))
}

// CreatorEQ applies the EQ predicate on the "creator" field.
func CreatorEQ(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldCreator, v))
}

// CreatorNEQ applies the NEQ predicate on the "creator" field.
func CreatorNEQ(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNEQ(FieldCreator, v))
}

// CreatorIn applies the In predicate on the "creator" field.
func CreatorIn(vs ...string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIn(FieldCreator, vs...))
}

// CreatorNotIn applies the NotIn predicate on the "creator" field.
func CreatorNotIn(vs ...string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotIn(FieldCreator, vs...))
}

// CreatorGT applies the GT predicate on the "creator" field.
func CreatorGT(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGT(FieldCreator, v))
}

// CreatorGTE applies the GTE predicate on the "creator" field.
func CreatorGTE(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGTE(FieldCreator, v))
}

// CreatorLT applies the LT predicate on the "creator" field.
func CreatorLT(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLT(FieldCreator, v))
}

// CreatorLTE applies the LTE predicate on the "creator" field.
func CreatorLTE(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLTE(FieldCreator, v))
}

// CreatorContains applies the Contains predicate on the "creator" field.
func CreatorContains(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldContains(FieldCreator, v))
}

// CreatorHasPrefix applies the HasPrefix predicate on the "creator" field.
func CreatorHasPrefix(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldHasPrefix(FieldCreator, v))
}

// CreatorHasSuffix applies the HasSuffix predicate on the "creator" field.
func CreatorHasSuffix(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldHasSuffix(FieldCreator, v))
}

// CreatorIsNil applies the IsNil predicate on the "creator" field.
func CreatorIsNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIsNull(FieldCreator))
}

// CreatorNotNil applies the NotNil predicate on the "creator" field.
func CreatorNotNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotNull(FieldCreator))
}

// CreatorEqualFold applies the EqualFold predicate on the "creator" field.
func CreatorEqualFold(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEqualFold(FieldCreator, v))
}

// CreatorContainsFold applies the ContainsFold predicate on the "creator" field.
func CreatorContainsFold(v string) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldContainsFold(FieldCreator, v))
}

// CreatedTimeEQ applies the EQ predicate on the "created_time" field.
func CreatedTimeEQ(v time.Time) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldEQ(FieldCreatedTime, v))
}

// CreatedTimeNEQ applies the NEQ predicate on the "created_time" field.
func CreatedTimeNEQ(v time.Time) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNEQ(FieldCreatedTime, v))
}

// CreatedTimeIn applies the In predicate on the "created_time" field.
func CreatedTimeIn(vs ...time.Time) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIn(FieldCreatedTime, vs...))
}

// CreatedTimeNotIn applies the NotIn predicate on the "created_time" field.
func CreatedTimeNotIn(vs ...time.Time) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotIn(FieldCreatedTime, vs...))
}

// CreatedTimeGT applies the GT predicate on the "created_time" field.
func CreatedTimeGT(v time.Time) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGT(FieldCreatedTime, v))
}

// CreatedTimeGTE applies the GTE predicate on the "created_time" field.
func CreatedTimeGTE(v time.Time) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldGTE(FieldCreatedTime, v))
}

// CreatedTimeLT applies the LT predicate on the "created_time" field.
func CreatedTimeLT(v time.Time) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLT(FieldCreatedTime, v))
}

// CreatedTimeLTE applies the LTE predicate on the "created_time" field.
func CreatedTimeLTE(v time.Time) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldLTE(FieldCreatedTime, v))
}

// CreatedTimeIsNil applies the IsNil predicate on the "created_time" field.
func CreatedTimeIsNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldIsNull(FieldCreatedTime))
}

// CreatedTimeNotNil applies the NotNil predicate on the "created_time" field.
func CreatedTimeNotNil() predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.FieldNotNull(FieldCreatedTime))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.FmDedicatedServices) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.FmDedicatedServices) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.FmDedicatedServices) predicate.FmDedicatedServices {
	return predicate.FmDedicatedServices(sql.NotPredicates(p))
}

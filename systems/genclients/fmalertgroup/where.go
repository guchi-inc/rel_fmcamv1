// Code generated by ent, DO NOT EDIT.

package fmalertgroup

import (
	"fmcam/systems/genclients/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLTE(FieldID, id))
}

// GroupName applies equality check predicate on the "group_name" field. It's identical to GroupNameEQ.
func GroupName(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldGroupName, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v uuid.UUID) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldTenantID, v))
}

// GroupType applies equality check predicate on the "group_type" field. It's identical to GroupTypeEQ.
func GroupType(v int8) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldGroupType, v))
}

// Enabled applies equality check predicate on the "enabled" field. It's identical to EnabledEQ.
func Enabled(v bool) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldEnabled, v))
}

// Customization applies equality check predicate on the "customization" field. It's identical to CustomizationEQ.
func Customization(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldCustomization, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldDescription, v))
}

// Creator applies equality check predicate on the "creator" field. It's identical to CreatorEQ.
func Creator(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldCreator, v))
}

// UniqEnabledGroup applies equality check predicate on the "uniq_enabled_group" field. It's identical to UniqEnabledGroupEQ.
func UniqEnabledGroup(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldUniqEnabledGroup, v))
}

// CreatedTime applies equality check predicate on the "created_time" field. It's identical to CreatedTimeEQ.
func CreatedTime(v time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldCreatedTime, v))
}

// UpdatedTime applies equality check predicate on the "updated_time" field. It's identical to UpdatedTimeEQ.
func UpdatedTime(v time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldUpdatedTime, v))
}

// GroupNameEQ applies the EQ predicate on the "group_name" field.
func GroupNameEQ(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldGroupName, v))
}

// GroupNameNEQ applies the NEQ predicate on the "group_name" field.
func GroupNameNEQ(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNEQ(FieldGroupName, v))
}

// GroupNameIn applies the In predicate on the "group_name" field.
func GroupNameIn(vs ...string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIn(FieldGroupName, vs...))
}

// GroupNameNotIn applies the NotIn predicate on the "group_name" field.
func GroupNameNotIn(vs ...string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotIn(FieldGroupName, vs...))
}

// GroupNameGT applies the GT predicate on the "group_name" field.
func GroupNameGT(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGT(FieldGroupName, v))
}

// GroupNameGTE applies the GTE predicate on the "group_name" field.
func GroupNameGTE(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGTE(FieldGroupName, v))
}

// GroupNameLT applies the LT predicate on the "group_name" field.
func GroupNameLT(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLT(FieldGroupName, v))
}

// GroupNameLTE applies the LTE predicate on the "group_name" field.
func GroupNameLTE(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLTE(FieldGroupName, v))
}

// GroupNameContains applies the Contains predicate on the "group_name" field.
func GroupNameContains(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldContains(FieldGroupName, v))
}

// GroupNameHasPrefix applies the HasPrefix predicate on the "group_name" field.
func GroupNameHasPrefix(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldHasPrefix(FieldGroupName, v))
}

// GroupNameHasSuffix applies the HasSuffix predicate on the "group_name" field.
func GroupNameHasSuffix(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldHasSuffix(FieldGroupName, v))
}

// GroupNameEqualFold applies the EqualFold predicate on the "group_name" field.
func GroupNameEqualFold(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEqualFold(FieldGroupName, v))
}

// GroupNameContainsFold applies the ContainsFold predicate on the "group_name" field.
func GroupNameContainsFold(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldContainsFold(FieldGroupName, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v uuid.UUID) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v uuid.UUID) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...uuid.UUID) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...uuid.UUID) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v uuid.UUID) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v uuid.UUID) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v uuid.UUID) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v uuid.UUID) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLTE(FieldTenantID, v))
}

// GroupTypeEQ applies the EQ predicate on the "group_type" field.
func GroupTypeEQ(v int8) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldGroupType, v))
}

// GroupTypeNEQ applies the NEQ predicate on the "group_type" field.
func GroupTypeNEQ(v int8) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNEQ(FieldGroupType, v))
}

// GroupTypeIn applies the In predicate on the "group_type" field.
func GroupTypeIn(vs ...int8) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIn(FieldGroupType, vs...))
}

// GroupTypeNotIn applies the NotIn predicate on the "group_type" field.
func GroupTypeNotIn(vs ...int8) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotIn(FieldGroupType, vs...))
}

// GroupTypeGT applies the GT predicate on the "group_type" field.
func GroupTypeGT(v int8) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGT(FieldGroupType, v))
}

// GroupTypeGTE applies the GTE predicate on the "group_type" field.
func GroupTypeGTE(v int8) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGTE(FieldGroupType, v))
}

// GroupTypeLT applies the LT predicate on the "group_type" field.
func GroupTypeLT(v int8) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLT(FieldGroupType, v))
}

// GroupTypeLTE applies the LTE predicate on the "group_type" field.
func GroupTypeLTE(v int8) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLTE(FieldGroupType, v))
}

// GroupTypeIsNil applies the IsNil predicate on the "group_type" field.
func GroupTypeIsNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIsNull(FieldGroupType))
}

// GroupTypeNotNil applies the NotNil predicate on the "group_type" field.
func GroupTypeNotNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotNull(FieldGroupType))
}

// EnabledEQ applies the EQ predicate on the "enabled" field.
func EnabledEQ(v bool) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldEnabled, v))
}

// EnabledNEQ applies the NEQ predicate on the "enabled" field.
func EnabledNEQ(v bool) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNEQ(FieldEnabled, v))
}

// EnabledIsNil applies the IsNil predicate on the "enabled" field.
func EnabledIsNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIsNull(FieldEnabled))
}

// EnabledNotNil applies the NotNil predicate on the "enabled" field.
func EnabledNotNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotNull(FieldEnabled))
}

// CustomizationEQ applies the EQ predicate on the "customization" field.
func CustomizationEQ(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldCustomization, v))
}

// CustomizationNEQ applies the NEQ predicate on the "customization" field.
func CustomizationNEQ(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNEQ(FieldCustomization, v))
}

// CustomizationIn applies the In predicate on the "customization" field.
func CustomizationIn(vs ...string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIn(FieldCustomization, vs...))
}

// CustomizationNotIn applies the NotIn predicate on the "customization" field.
func CustomizationNotIn(vs ...string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotIn(FieldCustomization, vs...))
}

// CustomizationGT applies the GT predicate on the "customization" field.
func CustomizationGT(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGT(FieldCustomization, v))
}

// CustomizationGTE applies the GTE predicate on the "customization" field.
func CustomizationGTE(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGTE(FieldCustomization, v))
}

// CustomizationLT applies the LT predicate on the "customization" field.
func CustomizationLT(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLT(FieldCustomization, v))
}

// CustomizationLTE applies the LTE predicate on the "customization" field.
func CustomizationLTE(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLTE(FieldCustomization, v))
}

// CustomizationContains applies the Contains predicate on the "customization" field.
func CustomizationContains(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldContains(FieldCustomization, v))
}

// CustomizationHasPrefix applies the HasPrefix predicate on the "customization" field.
func CustomizationHasPrefix(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldHasPrefix(FieldCustomization, v))
}

// CustomizationHasSuffix applies the HasSuffix predicate on the "customization" field.
func CustomizationHasSuffix(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldHasSuffix(FieldCustomization, v))
}

// CustomizationIsNil applies the IsNil predicate on the "customization" field.
func CustomizationIsNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIsNull(FieldCustomization))
}

// CustomizationNotNil applies the NotNil predicate on the "customization" field.
func CustomizationNotNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotNull(FieldCustomization))
}

// CustomizationEqualFold applies the EqualFold predicate on the "customization" field.
func CustomizationEqualFold(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEqualFold(FieldCustomization, v))
}

// CustomizationContainsFold applies the ContainsFold predicate on the "customization" field.
func CustomizationContainsFold(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldContainsFold(FieldCustomization, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldContainsFold(FieldDescription, v))
}

// CreatorEQ applies the EQ predicate on the "creator" field.
func CreatorEQ(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldCreator, v))
}

// CreatorNEQ applies the NEQ predicate on the "creator" field.
func CreatorNEQ(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNEQ(FieldCreator, v))
}

// CreatorIn applies the In predicate on the "creator" field.
func CreatorIn(vs ...string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIn(FieldCreator, vs...))
}

// CreatorNotIn applies the NotIn predicate on the "creator" field.
func CreatorNotIn(vs ...string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotIn(FieldCreator, vs...))
}

// CreatorGT applies the GT predicate on the "creator" field.
func CreatorGT(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGT(FieldCreator, v))
}

// CreatorGTE applies the GTE predicate on the "creator" field.
func CreatorGTE(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGTE(FieldCreator, v))
}

// CreatorLT applies the LT predicate on the "creator" field.
func CreatorLT(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLT(FieldCreator, v))
}

// CreatorLTE applies the LTE predicate on the "creator" field.
func CreatorLTE(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLTE(FieldCreator, v))
}

// CreatorContains applies the Contains predicate on the "creator" field.
func CreatorContains(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldContains(FieldCreator, v))
}

// CreatorHasPrefix applies the HasPrefix predicate on the "creator" field.
func CreatorHasPrefix(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldHasPrefix(FieldCreator, v))
}

// CreatorHasSuffix applies the HasSuffix predicate on the "creator" field.
func CreatorHasSuffix(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldHasSuffix(FieldCreator, v))
}

// CreatorIsNil applies the IsNil predicate on the "creator" field.
func CreatorIsNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIsNull(FieldCreator))
}

// CreatorNotNil applies the NotNil predicate on the "creator" field.
func CreatorNotNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotNull(FieldCreator))
}

// CreatorEqualFold applies the EqualFold predicate on the "creator" field.
func CreatorEqualFold(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEqualFold(FieldCreator, v))
}

// CreatorContainsFold applies the ContainsFold predicate on the "creator" field.
func CreatorContainsFold(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldContainsFold(FieldCreator, v))
}

// UniqEnabledGroupEQ applies the EQ predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupEQ(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldUniqEnabledGroup, v))
}

// UniqEnabledGroupNEQ applies the NEQ predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupNEQ(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNEQ(FieldUniqEnabledGroup, v))
}

// UniqEnabledGroupIn applies the In predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupIn(vs ...string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIn(FieldUniqEnabledGroup, vs...))
}

// UniqEnabledGroupNotIn applies the NotIn predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupNotIn(vs ...string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotIn(FieldUniqEnabledGroup, vs...))
}

// UniqEnabledGroupGT applies the GT predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupGT(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGT(FieldUniqEnabledGroup, v))
}

// UniqEnabledGroupGTE applies the GTE predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupGTE(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGTE(FieldUniqEnabledGroup, v))
}

// UniqEnabledGroupLT applies the LT predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupLT(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLT(FieldUniqEnabledGroup, v))
}

// UniqEnabledGroupLTE applies the LTE predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupLTE(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLTE(FieldUniqEnabledGroup, v))
}

// UniqEnabledGroupContains applies the Contains predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupContains(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldContains(FieldUniqEnabledGroup, v))
}

// UniqEnabledGroupHasPrefix applies the HasPrefix predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupHasPrefix(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldHasPrefix(FieldUniqEnabledGroup, v))
}

// UniqEnabledGroupHasSuffix applies the HasSuffix predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupHasSuffix(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldHasSuffix(FieldUniqEnabledGroup, v))
}

// UniqEnabledGroupIsNil applies the IsNil predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupIsNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIsNull(FieldUniqEnabledGroup))
}

// UniqEnabledGroupNotNil applies the NotNil predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupNotNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotNull(FieldUniqEnabledGroup))
}

// UniqEnabledGroupEqualFold applies the EqualFold predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupEqualFold(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEqualFold(FieldUniqEnabledGroup, v))
}

// UniqEnabledGroupContainsFold applies the ContainsFold predicate on the "uniq_enabled_group" field.
func UniqEnabledGroupContainsFold(v string) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldContainsFold(FieldUniqEnabledGroup, v))
}

// CreatedTimeEQ applies the EQ predicate on the "created_time" field.
func CreatedTimeEQ(v time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldCreatedTime, v))
}

// CreatedTimeNEQ applies the NEQ predicate on the "created_time" field.
func CreatedTimeNEQ(v time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNEQ(FieldCreatedTime, v))
}

// CreatedTimeIn applies the In predicate on the "created_time" field.
func CreatedTimeIn(vs ...time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIn(FieldCreatedTime, vs...))
}

// CreatedTimeNotIn applies the NotIn predicate on the "created_time" field.
func CreatedTimeNotIn(vs ...time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotIn(FieldCreatedTime, vs...))
}

// CreatedTimeGT applies the GT predicate on the "created_time" field.
func CreatedTimeGT(v time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGT(FieldCreatedTime, v))
}

// CreatedTimeGTE applies the GTE predicate on the "created_time" field.
func CreatedTimeGTE(v time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGTE(FieldCreatedTime, v))
}

// CreatedTimeLT applies the LT predicate on the "created_time" field.
func CreatedTimeLT(v time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLT(FieldCreatedTime, v))
}

// CreatedTimeLTE applies the LTE predicate on the "created_time" field.
func CreatedTimeLTE(v time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLTE(FieldCreatedTime, v))
}

// CreatedTimeIsNil applies the IsNil predicate on the "created_time" field.
func CreatedTimeIsNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIsNull(FieldCreatedTime))
}

// CreatedTimeNotNil applies the NotNil predicate on the "created_time" field.
func CreatedTimeNotNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotNull(FieldCreatedTime))
}

// UpdatedTimeEQ applies the EQ predicate on the "updated_time" field.
func UpdatedTimeEQ(v time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldEQ(FieldUpdatedTime, v))
}

// UpdatedTimeNEQ applies the NEQ predicate on the "updated_time" field.
func UpdatedTimeNEQ(v time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNEQ(FieldUpdatedTime, v))
}

// UpdatedTimeIn applies the In predicate on the "updated_time" field.
func UpdatedTimeIn(vs ...time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIn(FieldUpdatedTime, vs...))
}

// UpdatedTimeNotIn applies the NotIn predicate on the "updated_time" field.
func UpdatedTimeNotIn(vs ...time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotIn(FieldUpdatedTime, vs...))
}

// UpdatedTimeGT applies the GT predicate on the "updated_time" field.
func UpdatedTimeGT(v time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGT(FieldUpdatedTime, v))
}

// UpdatedTimeGTE applies the GTE predicate on the "updated_time" field.
func UpdatedTimeGTE(v time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldGTE(FieldUpdatedTime, v))
}

// UpdatedTimeLT applies the LT predicate on the "updated_time" field.
func UpdatedTimeLT(v time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLT(FieldUpdatedTime, v))
}

// UpdatedTimeLTE applies the LTE predicate on the "updated_time" field.
func UpdatedTimeLTE(v time.Time) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldLTE(FieldUpdatedTime, v))
}

// UpdatedTimeIsNil applies the IsNil predicate on the "updated_time" field.
func UpdatedTimeIsNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldIsNull(FieldUpdatedTime))
}

// UpdatedTimeNotNil applies the NotNil predicate on the "updated_time" field.
func UpdatedTimeNotNil() predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.FieldNotNull(FieldUpdatedTime))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.FmAlertGroup) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.FmAlertGroup) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.FmAlertGroup) predicate.FmAlertGroup {
	return predicate.FmAlertGroup(sql.NotPredicates(p))
}

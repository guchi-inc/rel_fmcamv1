// Code generated by ent, DO NOT EDIT.

package devices

import (
	"fmcam/systems/genclients/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v uuid.UUID) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldTenantID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldName, v))
}

// URL applies equality check predicate on the "url" field. It's identical to URLEQ.
func URL(v string) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldURL, v))
}

// Location applies equality check predicate on the "location" field. It's identical to LocationEQ.
func Location(v string) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldLocation, v))
}

// FuncType applies equality check predicate on the "func_type" field. It's identical to FuncTypeEQ.
func FuncType(v int) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldFuncType, v))
}

// DisplayWidth applies equality check predicate on the "display_width" field. It's identical to DisplayWidthEQ.
func DisplayWidth(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldDisplayWidth, v))
}

// DisplayHeight applies equality check predicate on the "display_height" field. It's identical to DisplayHeightEQ.
func DisplayHeight(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldDisplayHeight, v))
}

// RoiX applies equality check predicate on the "roi_x" field. It's identical to RoiXEQ.
func RoiX(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldRoiX, v))
}

// RoiY applies equality check predicate on the "roi_y" field. It's identical to RoiYEQ.
func RoiY(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldRoiY, v))
}

// RoiWidth applies equality check predicate on the "roi_width" field. It's identical to RoiWidthEQ.
func RoiWidth(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldRoiWidth, v))
}

// RoiHeight applies equality check predicate on the "roi_height" field. It's identical to RoiHeightEQ.
func RoiHeight(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldRoiHeight, v))
}

// RoiRotationAngle applies equality check predicate on the "roi_rotation_angle" field. It's identical to RoiRotationAngleEQ.
func RoiRotationAngle(v float64) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldRoiRotationAngle, v))
}

// RoiEnabled applies equality check predicate on the "roi_enabled" field. It's identical to RoiEnabledEQ.
func RoiEnabled(v bool) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldRoiEnabled, v))
}

// Enabled applies equality check predicate on the "enabled" field. It's identical to EnabledEQ.
func Enabled(v bool) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldEnabled, v))
}

// TargetFps applies equality check predicate on the "target_fps" field. It's identical to TargetFpsEQ.
func TargetFps(v int64) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldTargetFps, v))
}

// DwellDuration applies equality check predicate on the "dwell_duration" field. It's identical to DwellDurationEQ.
func DwellDuration(v int64) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldDwellDuration, v))
}

// CreatedTime applies equality check predicate on the "created_time" field. It's identical to CreatedTimeEQ.
func CreatedTime(v time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldCreatedTime, v))
}

// UpdatedTime applies equality check predicate on the "updated_time" field. It's identical to UpdatedTimeEQ.
func UpdatedTime(v time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldUpdatedTime, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v uuid.UUID) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v uuid.UUID) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...uuid.UUID) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...uuid.UUID) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v uuid.UUID) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v uuid.UUID) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v uuid.UUID) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v uuid.UUID) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldTenantID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Devices {
	return predicate.Devices(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Devices {
	return predicate.Devices(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Devices {
	return predicate.Devices(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.Devices {
	return predicate.Devices(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.Devices {
	return predicate.Devices(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Devices {
	return predicate.Devices(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Devices {
	return predicate.Devices(sql.FieldContainsFold(FieldName, v))
}

// URLEQ applies the EQ predicate on the "url" field.
func URLEQ(v string) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldURL, v))
}

// URLNEQ applies the NEQ predicate on the "url" field.
func URLNEQ(v string) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldURL, v))
}

// URLIn applies the In predicate on the "url" field.
func URLIn(vs ...string) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldURL, vs...))
}

// URLNotIn applies the NotIn predicate on the "url" field.
func URLNotIn(vs ...string) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldURL, vs...))
}

// URLGT applies the GT predicate on the "url" field.
func URLGT(v string) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldURL, v))
}

// URLGTE applies the GTE predicate on the "url" field.
func URLGTE(v string) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldURL, v))
}

// URLLT applies the LT predicate on the "url" field.
func URLLT(v string) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldURL, v))
}

// URLLTE applies the LTE predicate on the "url" field.
func URLLTE(v string) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldURL, v))
}

// URLContains applies the Contains predicate on the "url" field.
func URLContains(v string) predicate.Devices {
	return predicate.Devices(sql.FieldContains(FieldURL, v))
}

// URLHasPrefix applies the HasPrefix predicate on the "url" field.
func URLHasPrefix(v string) predicate.Devices {
	return predicate.Devices(sql.FieldHasPrefix(FieldURL, v))
}

// URLHasSuffix applies the HasSuffix predicate on the "url" field.
func URLHasSuffix(v string) predicate.Devices {
	return predicate.Devices(sql.FieldHasSuffix(FieldURL, v))
}

// URLEqualFold applies the EqualFold predicate on the "url" field.
func URLEqualFold(v string) predicate.Devices {
	return predicate.Devices(sql.FieldEqualFold(FieldURL, v))
}

// URLContainsFold applies the ContainsFold predicate on the "url" field.
func URLContainsFold(v string) predicate.Devices {
	return predicate.Devices(sql.FieldContainsFold(FieldURL, v))
}

// LocationEQ applies the EQ predicate on the "location" field.
func LocationEQ(v string) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldLocation, v))
}

// LocationNEQ applies the NEQ predicate on the "location" field.
func LocationNEQ(v string) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldLocation, v))
}

// LocationIn applies the In predicate on the "location" field.
func LocationIn(vs ...string) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldLocation, vs...))
}

// LocationNotIn applies the NotIn predicate on the "location" field.
func LocationNotIn(vs ...string) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldLocation, vs...))
}

// LocationGT applies the GT predicate on the "location" field.
func LocationGT(v string) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldLocation, v))
}

// LocationGTE applies the GTE predicate on the "location" field.
func LocationGTE(v string) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldLocation, v))
}

// LocationLT applies the LT predicate on the "location" field.
func LocationLT(v string) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldLocation, v))
}

// LocationLTE applies the LTE predicate on the "location" field.
func LocationLTE(v string) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldLocation, v))
}

// LocationContains applies the Contains predicate on the "location" field.
func LocationContains(v string) predicate.Devices {
	return predicate.Devices(sql.FieldContains(FieldLocation, v))
}

// LocationHasPrefix applies the HasPrefix predicate on the "location" field.
func LocationHasPrefix(v string) predicate.Devices {
	return predicate.Devices(sql.FieldHasPrefix(FieldLocation, v))
}

// LocationHasSuffix applies the HasSuffix predicate on the "location" field.
func LocationHasSuffix(v string) predicate.Devices {
	return predicate.Devices(sql.FieldHasSuffix(FieldLocation, v))
}

// LocationEqualFold applies the EqualFold predicate on the "location" field.
func LocationEqualFold(v string) predicate.Devices {
	return predicate.Devices(sql.FieldEqualFold(FieldLocation, v))
}

// LocationContainsFold applies the ContainsFold predicate on the "location" field.
func LocationContainsFold(v string) predicate.Devices {
	return predicate.Devices(sql.FieldContainsFold(FieldLocation, v))
}

// FuncTypeEQ applies the EQ predicate on the "func_type" field.
func FuncTypeEQ(v int) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldFuncType, v))
}

// FuncTypeNEQ applies the NEQ predicate on the "func_type" field.
func FuncTypeNEQ(v int) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldFuncType, v))
}

// FuncTypeIn applies the In predicate on the "func_type" field.
func FuncTypeIn(vs ...int) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldFuncType, vs...))
}

// FuncTypeNotIn applies the NotIn predicate on the "func_type" field.
func FuncTypeNotIn(vs ...int) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldFuncType, vs...))
}

// FuncTypeGT applies the GT predicate on the "func_type" field.
func FuncTypeGT(v int) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldFuncType, v))
}

// FuncTypeGTE applies the GTE predicate on the "func_type" field.
func FuncTypeGTE(v int) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldFuncType, v))
}

// FuncTypeLT applies the LT predicate on the "func_type" field.
func FuncTypeLT(v int) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldFuncType, v))
}

// FuncTypeLTE applies the LTE predicate on the "func_type" field.
func FuncTypeLTE(v int) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldFuncType, v))
}

// FuncTypeIsNil applies the IsNil predicate on the "func_type" field.
func FuncTypeIsNil() predicate.Devices {
	return predicate.Devices(sql.FieldIsNull(FieldFuncType))
}

// FuncTypeNotNil applies the NotNil predicate on the "func_type" field.
func FuncTypeNotNil() predicate.Devices {
	return predicate.Devices(sql.FieldNotNull(FieldFuncType))
}

// DisplayWidthEQ applies the EQ predicate on the "display_width" field.
func DisplayWidthEQ(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldDisplayWidth, v))
}

// DisplayWidthNEQ applies the NEQ predicate on the "display_width" field.
func DisplayWidthNEQ(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldDisplayWidth, v))
}

// DisplayWidthIn applies the In predicate on the "display_width" field.
func DisplayWidthIn(vs ...uint16) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldDisplayWidth, vs...))
}

// DisplayWidthNotIn applies the NotIn predicate on the "display_width" field.
func DisplayWidthNotIn(vs ...uint16) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldDisplayWidth, vs...))
}

// DisplayWidthGT applies the GT predicate on the "display_width" field.
func DisplayWidthGT(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldDisplayWidth, v))
}

// DisplayWidthGTE applies the GTE predicate on the "display_width" field.
func DisplayWidthGTE(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldDisplayWidth, v))
}

// DisplayWidthLT applies the LT predicate on the "display_width" field.
func DisplayWidthLT(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldDisplayWidth, v))
}

// DisplayWidthLTE applies the LTE predicate on the "display_width" field.
func DisplayWidthLTE(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldDisplayWidth, v))
}

// DisplayWidthIsNil applies the IsNil predicate on the "display_width" field.
func DisplayWidthIsNil() predicate.Devices {
	return predicate.Devices(sql.FieldIsNull(FieldDisplayWidth))
}

// DisplayWidthNotNil applies the NotNil predicate on the "display_width" field.
func DisplayWidthNotNil() predicate.Devices {
	return predicate.Devices(sql.FieldNotNull(FieldDisplayWidth))
}

// DisplayHeightEQ applies the EQ predicate on the "display_height" field.
func DisplayHeightEQ(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldDisplayHeight, v))
}

// DisplayHeightNEQ applies the NEQ predicate on the "display_height" field.
func DisplayHeightNEQ(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldDisplayHeight, v))
}

// DisplayHeightIn applies the In predicate on the "display_height" field.
func DisplayHeightIn(vs ...uint16) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldDisplayHeight, vs...))
}

// DisplayHeightNotIn applies the NotIn predicate on the "display_height" field.
func DisplayHeightNotIn(vs ...uint16) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldDisplayHeight, vs...))
}

// DisplayHeightGT applies the GT predicate on the "display_height" field.
func DisplayHeightGT(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldDisplayHeight, v))
}

// DisplayHeightGTE applies the GTE predicate on the "display_height" field.
func DisplayHeightGTE(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldDisplayHeight, v))
}

// DisplayHeightLT applies the LT predicate on the "display_height" field.
func DisplayHeightLT(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldDisplayHeight, v))
}

// DisplayHeightLTE applies the LTE predicate on the "display_height" field.
func DisplayHeightLTE(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldDisplayHeight, v))
}

// DisplayHeightIsNil applies the IsNil predicate on the "display_height" field.
func DisplayHeightIsNil() predicate.Devices {
	return predicate.Devices(sql.FieldIsNull(FieldDisplayHeight))
}

// DisplayHeightNotNil applies the NotNil predicate on the "display_height" field.
func DisplayHeightNotNil() predicate.Devices {
	return predicate.Devices(sql.FieldNotNull(FieldDisplayHeight))
}

// RoiXEQ applies the EQ predicate on the "roi_x" field.
func RoiXEQ(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldRoiX, v))
}

// RoiXNEQ applies the NEQ predicate on the "roi_x" field.
func RoiXNEQ(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldRoiX, v))
}

// RoiXIn applies the In predicate on the "roi_x" field.
func RoiXIn(vs ...uint16) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldRoiX, vs...))
}

// RoiXNotIn applies the NotIn predicate on the "roi_x" field.
func RoiXNotIn(vs ...uint16) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldRoiX, vs...))
}

// RoiXGT applies the GT predicate on the "roi_x" field.
func RoiXGT(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldRoiX, v))
}

// RoiXGTE applies the GTE predicate on the "roi_x" field.
func RoiXGTE(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldRoiX, v))
}

// RoiXLT applies the LT predicate on the "roi_x" field.
func RoiXLT(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldRoiX, v))
}

// RoiXLTE applies the LTE predicate on the "roi_x" field.
func RoiXLTE(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldRoiX, v))
}

// RoiXIsNil applies the IsNil predicate on the "roi_x" field.
func RoiXIsNil() predicate.Devices {
	return predicate.Devices(sql.FieldIsNull(FieldRoiX))
}

// RoiXNotNil applies the NotNil predicate on the "roi_x" field.
func RoiXNotNil() predicate.Devices {
	return predicate.Devices(sql.FieldNotNull(FieldRoiX))
}

// RoiYEQ applies the EQ predicate on the "roi_y" field.
func RoiYEQ(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldRoiY, v))
}

// RoiYNEQ applies the NEQ predicate on the "roi_y" field.
func RoiYNEQ(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldRoiY, v))
}

// RoiYIn applies the In predicate on the "roi_y" field.
func RoiYIn(vs ...uint16) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldRoiY, vs...))
}

// RoiYNotIn applies the NotIn predicate on the "roi_y" field.
func RoiYNotIn(vs ...uint16) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldRoiY, vs...))
}

// RoiYGT applies the GT predicate on the "roi_y" field.
func RoiYGT(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldRoiY, v))
}

// RoiYGTE applies the GTE predicate on the "roi_y" field.
func RoiYGTE(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldRoiY, v))
}

// RoiYLT applies the LT predicate on the "roi_y" field.
func RoiYLT(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldRoiY, v))
}

// RoiYLTE applies the LTE predicate on the "roi_y" field.
func RoiYLTE(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldRoiY, v))
}

// RoiYIsNil applies the IsNil predicate on the "roi_y" field.
func RoiYIsNil() predicate.Devices {
	return predicate.Devices(sql.FieldIsNull(FieldRoiY))
}

// RoiYNotNil applies the NotNil predicate on the "roi_y" field.
func RoiYNotNil() predicate.Devices {
	return predicate.Devices(sql.FieldNotNull(FieldRoiY))
}

// RoiWidthEQ applies the EQ predicate on the "roi_width" field.
func RoiWidthEQ(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldRoiWidth, v))
}

// RoiWidthNEQ applies the NEQ predicate on the "roi_width" field.
func RoiWidthNEQ(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldRoiWidth, v))
}

// RoiWidthIn applies the In predicate on the "roi_width" field.
func RoiWidthIn(vs ...uint16) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldRoiWidth, vs...))
}

// RoiWidthNotIn applies the NotIn predicate on the "roi_width" field.
func RoiWidthNotIn(vs ...uint16) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldRoiWidth, vs...))
}

// RoiWidthGT applies the GT predicate on the "roi_width" field.
func RoiWidthGT(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldRoiWidth, v))
}

// RoiWidthGTE applies the GTE predicate on the "roi_width" field.
func RoiWidthGTE(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldRoiWidth, v))
}

// RoiWidthLT applies the LT predicate on the "roi_width" field.
func RoiWidthLT(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldRoiWidth, v))
}

// RoiWidthLTE applies the LTE predicate on the "roi_width" field.
func RoiWidthLTE(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldRoiWidth, v))
}

// RoiWidthIsNil applies the IsNil predicate on the "roi_width" field.
func RoiWidthIsNil() predicate.Devices {
	return predicate.Devices(sql.FieldIsNull(FieldRoiWidth))
}

// RoiWidthNotNil applies the NotNil predicate on the "roi_width" field.
func RoiWidthNotNil() predicate.Devices {
	return predicate.Devices(sql.FieldNotNull(FieldRoiWidth))
}

// RoiHeightEQ applies the EQ predicate on the "roi_height" field.
func RoiHeightEQ(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldRoiHeight, v))
}

// RoiHeightNEQ applies the NEQ predicate on the "roi_height" field.
func RoiHeightNEQ(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldRoiHeight, v))
}

// RoiHeightIn applies the In predicate on the "roi_height" field.
func RoiHeightIn(vs ...uint16) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldRoiHeight, vs...))
}

// RoiHeightNotIn applies the NotIn predicate on the "roi_height" field.
func RoiHeightNotIn(vs ...uint16) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldRoiHeight, vs...))
}

// RoiHeightGT applies the GT predicate on the "roi_height" field.
func RoiHeightGT(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldRoiHeight, v))
}

// RoiHeightGTE applies the GTE predicate on the "roi_height" field.
func RoiHeightGTE(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldRoiHeight, v))
}

// RoiHeightLT applies the LT predicate on the "roi_height" field.
func RoiHeightLT(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldRoiHeight, v))
}

// RoiHeightLTE applies the LTE predicate on the "roi_height" field.
func RoiHeightLTE(v uint16) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldRoiHeight, v))
}

// RoiHeightIsNil applies the IsNil predicate on the "roi_height" field.
func RoiHeightIsNil() predicate.Devices {
	return predicate.Devices(sql.FieldIsNull(FieldRoiHeight))
}

// RoiHeightNotNil applies the NotNil predicate on the "roi_height" field.
func RoiHeightNotNil() predicate.Devices {
	return predicate.Devices(sql.FieldNotNull(FieldRoiHeight))
}

// RoiRotationAngleEQ applies the EQ predicate on the "roi_rotation_angle" field.
func RoiRotationAngleEQ(v float64) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldRoiRotationAngle, v))
}

// RoiRotationAngleNEQ applies the NEQ predicate on the "roi_rotation_angle" field.
func RoiRotationAngleNEQ(v float64) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldRoiRotationAngle, v))
}

// RoiRotationAngleIn applies the In predicate on the "roi_rotation_angle" field.
func RoiRotationAngleIn(vs ...float64) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldRoiRotationAngle, vs...))
}

// RoiRotationAngleNotIn applies the NotIn predicate on the "roi_rotation_angle" field.
func RoiRotationAngleNotIn(vs ...float64) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldRoiRotationAngle, vs...))
}

// RoiRotationAngleGT applies the GT predicate on the "roi_rotation_angle" field.
func RoiRotationAngleGT(v float64) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldRoiRotationAngle, v))
}

// RoiRotationAngleGTE applies the GTE predicate on the "roi_rotation_angle" field.
func RoiRotationAngleGTE(v float64) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldRoiRotationAngle, v))
}

// RoiRotationAngleLT applies the LT predicate on the "roi_rotation_angle" field.
func RoiRotationAngleLT(v float64) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldRoiRotationAngle, v))
}

// RoiRotationAngleLTE applies the LTE predicate on the "roi_rotation_angle" field.
func RoiRotationAngleLTE(v float64) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldRoiRotationAngle, v))
}

// RoiRotationAngleIsNil applies the IsNil predicate on the "roi_rotation_angle" field.
func RoiRotationAngleIsNil() predicate.Devices {
	return predicate.Devices(sql.FieldIsNull(FieldRoiRotationAngle))
}

// RoiRotationAngleNotNil applies the NotNil predicate on the "roi_rotation_angle" field.
func RoiRotationAngleNotNil() predicate.Devices {
	return predicate.Devices(sql.FieldNotNull(FieldRoiRotationAngle))
}

// RoiEnabledEQ applies the EQ predicate on the "roi_enabled" field.
func RoiEnabledEQ(v bool) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldRoiEnabled, v))
}

// RoiEnabledNEQ applies the NEQ predicate on the "roi_enabled" field.
func RoiEnabledNEQ(v bool) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldRoiEnabled, v))
}

// EnabledEQ applies the EQ predicate on the "enabled" field.
func EnabledEQ(v bool) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldEnabled, v))
}

// EnabledNEQ applies the NEQ predicate on the "enabled" field.
func EnabledNEQ(v bool) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldEnabled, v))
}

// TargetFpsEQ applies the EQ predicate on the "target_fps" field.
func TargetFpsEQ(v int64) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldTargetFps, v))
}

// TargetFpsNEQ applies the NEQ predicate on the "target_fps" field.
func TargetFpsNEQ(v int64) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldTargetFps, v))
}

// TargetFpsIn applies the In predicate on the "target_fps" field.
func TargetFpsIn(vs ...int64) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldTargetFps, vs...))
}

// TargetFpsNotIn applies the NotIn predicate on the "target_fps" field.
func TargetFpsNotIn(vs ...int64) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldTargetFps, vs...))
}

// TargetFpsGT applies the GT predicate on the "target_fps" field.
func TargetFpsGT(v int64) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldTargetFps, v))
}

// TargetFpsGTE applies the GTE predicate on the "target_fps" field.
func TargetFpsGTE(v int64) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldTargetFps, v))
}

// TargetFpsLT applies the LT predicate on the "target_fps" field.
func TargetFpsLT(v int64) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldTargetFps, v))
}

// TargetFpsLTE applies the LTE predicate on the "target_fps" field.
func TargetFpsLTE(v int64) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldTargetFps, v))
}

// DwellDurationEQ applies the EQ predicate on the "dwell_duration" field.
func DwellDurationEQ(v int64) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldDwellDuration, v))
}

// DwellDurationNEQ applies the NEQ predicate on the "dwell_duration" field.
func DwellDurationNEQ(v int64) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldDwellDuration, v))
}

// DwellDurationIn applies the In predicate on the "dwell_duration" field.
func DwellDurationIn(vs ...int64) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldDwellDuration, vs...))
}

// DwellDurationNotIn applies the NotIn predicate on the "dwell_duration" field.
func DwellDurationNotIn(vs ...int64) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldDwellDuration, vs...))
}

// DwellDurationGT applies the GT predicate on the "dwell_duration" field.
func DwellDurationGT(v int64) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldDwellDuration, v))
}

// DwellDurationGTE applies the GTE predicate on the "dwell_duration" field.
func DwellDurationGTE(v int64) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldDwellDuration, v))
}

// DwellDurationLT applies the LT predicate on the "dwell_duration" field.
func DwellDurationLT(v int64) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldDwellDuration, v))
}

// DwellDurationLTE applies the LTE predicate on the "dwell_duration" field.
func DwellDurationLTE(v int64) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldDwellDuration, v))
}

// DwellDurationIsNil applies the IsNil predicate on the "dwell_duration" field.
func DwellDurationIsNil() predicate.Devices {
	return predicate.Devices(sql.FieldIsNull(FieldDwellDuration))
}

// DwellDurationNotNil applies the NotNil predicate on the "dwell_duration" field.
func DwellDurationNotNil() predicate.Devices {
	return predicate.Devices(sql.FieldNotNull(FieldDwellDuration))
}

// CreatedTimeEQ applies the EQ predicate on the "created_time" field.
func CreatedTimeEQ(v time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldCreatedTime, v))
}

// CreatedTimeNEQ applies the NEQ predicate on the "created_time" field.
func CreatedTimeNEQ(v time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldCreatedTime, v))
}

// CreatedTimeIn applies the In predicate on the "created_time" field.
func CreatedTimeIn(vs ...time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldCreatedTime, vs...))
}

// CreatedTimeNotIn applies the NotIn predicate on the "created_time" field.
func CreatedTimeNotIn(vs ...time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldCreatedTime, vs...))
}

// CreatedTimeGT applies the GT predicate on the "created_time" field.
func CreatedTimeGT(v time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldCreatedTime, v))
}

// CreatedTimeGTE applies the GTE predicate on the "created_time" field.
func CreatedTimeGTE(v time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldCreatedTime, v))
}

// CreatedTimeLT applies the LT predicate on the "created_time" field.
func CreatedTimeLT(v time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldCreatedTime, v))
}

// CreatedTimeLTE applies the LTE predicate on the "created_time" field.
func CreatedTimeLTE(v time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldCreatedTime, v))
}

// CreatedTimeIsNil applies the IsNil predicate on the "created_time" field.
func CreatedTimeIsNil() predicate.Devices {
	return predicate.Devices(sql.FieldIsNull(FieldCreatedTime))
}

// CreatedTimeNotNil applies the NotNil predicate on the "created_time" field.
func CreatedTimeNotNil() predicate.Devices {
	return predicate.Devices(sql.FieldNotNull(FieldCreatedTime))
}

// UpdatedTimeEQ applies the EQ predicate on the "updated_time" field.
func UpdatedTimeEQ(v time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldEQ(FieldUpdatedTime, v))
}

// UpdatedTimeNEQ applies the NEQ predicate on the "updated_time" field.
func UpdatedTimeNEQ(v time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldNEQ(FieldUpdatedTime, v))
}

// UpdatedTimeIn applies the In predicate on the "updated_time" field.
func UpdatedTimeIn(vs ...time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldIn(FieldUpdatedTime, vs...))
}

// UpdatedTimeNotIn applies the NotIn predicate on the "updated_time" field.
func UpdatedTimeNotIn(vs ...time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldNotIn(FieldUpdatedTime, vs...))
}

// UpdatedTimeGT applies the GT predicate on the "updated_time" field.
func UpdatedTimeGT(v time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldGT(FieldUpdatedTime, v))
}

// UpdatedTimeGTE applies the GTE predicate on the "updated_time" field.
func UpdatedTimeGTE(v time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldGTE(FieldUpdatedTime, v))
}

// UpdatedTimeLT applies the LT predicate on the "updated_time" field.
func UpdatedTimeLT(v time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldLT(FieldUpdatedTime, v))
}

// UpdatedTimeLTE applies the LTE predicate on the "updated_time" field.
func UpdatedTimeLTE(v time.Time) predicate.Devices {
	return predicate.Devices(sql.FieldLTE(FieldUpdatedTime, v))
}

// UpdatedTimeIsNil applies the IsNil predicate on the "updated_time" field.
func UpdatedTimeIsNil() predicate.Devices {
	return predicate.Devices(sql.FieldIsNull(FieldUpdatedTime))
}

// UpdatedTimeNotNil applies the NotNil predicate on the "updated_time" field.
func UpdatedTimeNotNil() predicate.Devices {
	return predicate.Devices(sql.FieldNotNull(FieldUpdatedTime))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Devices) predicate.Devices {
	return predicate.Devices(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Devices) predicate.Devices {
	return predicate.Devices(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Devices) predicate.Devices {
	return predicate.Devices(sql.NotPredicates(p))
}

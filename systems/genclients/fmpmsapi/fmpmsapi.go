// Code generated by ent, DO NOT EDIT.

package fmpmsapi

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the fmpmsapi type in the database.
	Label = "fmpms_api"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPmsName holds the string denoting the pms_name field in the database.
	FieldPmsName = "pms_name"
	// FieldPmsAPI holds the string denoting the pms_api field in the database.
	FieldPmsAPI = "pms_api"
	// FieldEnabled holds the string denoting the enabled field in the database.
	FieldEnabled = "enabled"
	// FieldContact holds the string denoting the contact field in the database.
	FieldContact = "contact"
	// FieldPhonenum holds the string denoting the phonenum field in the database.
	FieldPhonenum = "phonenum"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldDeleteFlag holds the string denoting the delete_flag field in the database.
	FieldDeleteFlag = "delete_flag"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// FieldCreatedTime holds the string denoting the created_time field in the database.
	FieldCreatedTime = "created_time"
	// FieldUpdatedTime holds the string denoting the updated_time field in the database.
	FieldUpdatedTime = "updated_time"
	// Table holds the table name of the fmpmsapi in the database.
	Table = "fm_pms_apis"
)

// Columns holds all SQL columns for fmpmsapi fields.
var Columns = []string{
	FieldID,
	FieldPmsName,
	FieldPmsAPI,
	FieldEnabled,
	FieldContact,
	FieldPhonenum,
	FieldDescription,
	FieldDeleteFlag,
	FieldCreator,
	FieldCreatedTime,
	FieldUpdatedTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultPmsName holds the default value on creation for the "pms_name" field.
	DefaultPmsName string
	// PmsNameValidator is a validator for the "pms_name" field. It is called by the builders before save.
	PmsNameValidator func(string) error
	// DefaultPmsAPI holds the default value on creation for the "pms_api" field.
	DefaultPmsAPI string
	// PmsAPIValidator is a validator for the "pms_api" field. It is called by the builders before save.
	PmsAPIValidator func(string) error
	// DefaultEnabled holds the default value on creation for the "enabled" field.
	DefaultEnabled bool
	// DefaultContact holds the default value on creation for the "contact" field.
	DefaultContact string
	// ContactValidator is a validator for the "contact" field. It is called by the builders before save.
	ContactValidator func(string) error
	// DefaultPhonenum holds the default value on creation for the "phonenum" field.
	DefaultPhonenum string
	// PhonenumValidator is a validator for the "phonenum" field. It is called by the builders before save.
	PhonenumValidator func(string) error
	// DefaultDescription holds the default value on creation for the "description" field.
	DefaultDescription string
	// DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	DescriptionValidator func(string) error
	// DefaultDeleteFlag holds the default value on creation for the "delete_flag" field.
	DefaultDeleteFlag string
	// DeleteFlagValidator is a validator for the "delete_flag" field. It is called by the builders before save.
	DeleteFlagValidator func(string) error
	// DefaultCreator holds the default value on creation for the "creator" field.
	DefaultCreator string
	// CreatorValidator is a validator for the "creator" field. It is called by the builders before save.
	CreatorValidator func(string) error
)

// OrderOption defines the ordering options for the FMPMSApi queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByPmsName orders the results by the pms_name field.
func ByPmsName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPmsName, opts...).ToFunc()
}

// ByPmsAPI orders the results by the pms_api field.
func ByPmsAPI(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPmsAPI, opts...).ToFunc()
}

// ByEnabled orders the results by the enabled field.
func ByEnabled(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnabled, opts...).ToFunc()
}

// ByContact orders the results by the contact field.
func ByContact(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldContact, opts...).ToFunc()
}

// ByPhonenum orders the results by the phonenum field.
func ByPhonenum(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPhonenum, opts...).ToFunc()
}

// ByDescription orders the results by the description field.
func ByDescription(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDescription, opts...).ToFunc()
}

// ByDeleteFlag orders the results by the delete_flag field.
func ByDeleteFlag(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeleteFlag, opts...).ToFunc()
}

// ByCreator orders the results by the creator field.
func ByCreator(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreator, opts...).ToFunc()
}

// ByCreatedTime orders the results by the created_time field.
func ByCreatedTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedTime, opts...).ToFunc()
}

// ByUpdatedTime orders the results by the updated_time field.
func ByUpdatedTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedTime, opts...).ToFunc()
}

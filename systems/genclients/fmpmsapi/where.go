// Code generated by ent, DO NOT EDIT.

package fmpmsapi

import (
	"fmcam/systems/genclients/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLTE(FieldID, id))
}

// PmsName applies equality check predicate on the "pms_name" field. It's identical to PmsNameEQ.
func PmsName(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldPmsName, v))
}

// PmsAPI applies equality check predicate on the "pms_api" field. It's identical to PmsAPIEQ.
func PmsAPI(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldPmsAPI, v))
}

// Enabled applies equality check predicate on the "enabled" field. It's identical to EnabledEQ.
func Enabled(v bool) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldEnabled, v))
}

// Contact applies equality check predicate on the "contact" field. It's identical to ContactEQ.
func Contact(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldContact, v))
}

// Phonenum applies equality check predicate on the "phonenum" field. It's identical to PhonenumEQ.
func Phonenum(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldPhonenum, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldDescription, v))
}

// DeleteFlag applies equality check predicate on the "delete_flag" field. It's identical to DeleteFlagEQ.
func DeleteFlag(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldDeleteFlag, v))
}

// Creator applies equality check predicate on the "creator" field. It's identical to CreatorEQ.
func Creator(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldCreator, v))
}

// CreatedTime applies equality check predicate on the "created_time" field. It's identical to CreatedTimeEQ.
func CreatedTime(v time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldCreatedTime, v))
}

// UpdatedTime applies equality check predicate on the "updated_time" field. It's identical to UpdatedTimeEQ.
func UpdatedTime(v time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldUpdatedTime, v))
}

// PmsNameEQ applies the EQ predicate on the "pms_name" field.
func PmsNameEQ(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldPmsName, v))
}

// PmsNameNEQ applies the NEQ predicate on the "pms_name" field.
func PmsNameNEQ(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNEQ(FieldPmsName, v))
}

// PmsNameIn applies the In predicate on the "pms_name" field.
func PmsNameIn(vs ...string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIn(FieldPmsName, vs...))
}

// PmsNameNotIn applies the NotIn predicate on the "pms_name" field.
func PmsNameNotIn(vs ...string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotIn(FieldPmsName, vs...))
}

// PmsNameGT applies the GT predicate on the "pms_name" field.
func PmsNameGT(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGT(FieldPmsName, v))
}

// PmsNameGTE applies the GTE predicate on the "pms_name" field.
func PmsNameGTE(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGTE(FieldPmsName, v))
}

// PmsNameLT applies the LT predicate on the "pms_name" field.
func PmsNameLT(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLT(FieldPmsName, v))
}

// PmsNameLTE applies the LTE predicate on the "pms_name" field.
func PmsNameLTE(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLTE(FieldPmsName, v))
}

// PmsNameContains applies the Contains predicate on the "pms_name" field.
func PmsNameContains(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldContains(FieldPmsName, v))
}

// PmsNameHasPrefix applies the HasPrefix predicate on the "pms_name" field.
func PmsNameHasPrefix(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldHasPrefix(FieldPmsName, v))
}

// PmsNameHasSuffix applies the HasSuffix predicate on the "pms_name" field.
func PmsNameHasSuffix(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldHasSuffix(FieldPmsName, v))
}

// PmsNameEqualFold applies the EqualFold predicate on the "pms_name" field.
func PmsNameEqualFold(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEqualFold(FieldPmsName, v))
}

// PmsNameContainsFold applies the ContainsFold predicate on the "pms_name" field.
func PmsNameContainsFold(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldContainsFold(FieldPmsName, v))
}

// PmsAPIEQ applies the EQ predicate on the "pms_api" field.
func PmsAPIEQ(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldPmsAPI, v))
}

// PmsAPINEQ applies the NEQ predicate on the "pms_api" field.
func PmsAPINEQ(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNEQ(FieldPmsAPI, v))
}

// PmsAPIIn applies the In predicate on the "pms_api" field.
func PmsAPIIn(vs ...string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIn(FieldPmsAPI, vs...))
}

// PmsAPINotIn applies the NotIn predicate on the "pms_api" field.
func PmsAPINotIn(vs ...string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotIn(FieldPmsAPI, vs...))
}

// PmsAPIGT applies the GT predicate on the "pms_api" field.
func PmsAPIGT(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGT(FieldPmsAPI, v))
}

// PmsAPIGTE applies the GTE predicate on the "pms_api" field.
func PmsAPIGTE(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGTE(FieldPmsAPI, v))
}

// PmsAPILT applies the LT predicate on the "pms_api" field.
func PmsAPILT(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLT(FieldPmsAPI, v))
}

// PmsAPILTE applies the LTE predicate on the "pms_api" field.
func PmsAPILTE(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLTE(FieldPmsAPI, v))
}

// PmsAPIContains applies the Contains predicate on the "pms_api" field.
func PmsAPIContains(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldContains(FieldPmsAPI, v))
}

// PmsAPIHasPrefix applies the HasPrefix predicate on the "pms_api" field.
func PmsAPIHasPrefix(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldHasPrefix(FieldPmsAPI, v))
}

// PmsAPIHasSuffix applies the HasSuffix predicate on the "pms_api" field.
func PmsAPIHasSuffix(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldHasSuffix(FieldPmsAPI, v))
}

// PmsAPIEqualFold applies the EqualFold predicate on the "pms_api" field.
func PmsAPIEqualFold(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEqualFold(FieldPmsAPI, v))
}

// PmsAPIContainsFold applies the ContainsFold predicate on the "pms_api" field.
func PmsAPIContainsFold(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldContainsFold(FieldPmsAPI, v))
}

// EnabledEQ applies the EQ predicate on the "enabled" field.
func EnabledEQ(v bool) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldEnabled, v))
}

// EnabledNEQ applies the NEQ predicate on the "enabled" field.
func EnabledNEQ(v bool) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNEQ(FieldEnabled, v))
}

// EnabledIsNil applies the IsNil predicate on the "enabled" field.
func EnabledIsNil() predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIsNull(FieldEnabled))
}

// EnabledNotNil applies the NotNil predicate on the "enabled" field.
func EnabledNotNil() predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotNull(FieldEnabled))
}

// ContactEQ applies the EQ predicate on the "contact" field.
func ContactEQ(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldContact, v))
}

// ContactNEQ applies the NEQ predicate on the "contact" field.
func ContactNEQ(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNEQ(FieldContact, v))
}

// ContactIn applies the In predicate on the "contact" field.
func ContactIn(vs ...string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIn(FieldContact, vs...))
}

// ContactNotIn applies the NotIn predicate on the "contact" field.
func ContactNotIn(vs ...string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotIn(FieldContact, vs...))
}

// ContactGT applies the GT predicate on the "contact" field.
func ContactGT(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGT(FieldContact, v))
}

// ContactGTE applies the GTE predicate on the "contact" field.
func ContactGTE(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGTE(FieldContact, v))
}

// ContactLT applies the LT predicate on the "contact" field.
func ContactLT(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLT(FieldContact, v))
}

// ContactLTE applies the LTE predicate on the "contact" field.
func ContactLTE(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLTE(FieldContact, v))
}

// ContactContains applies the Contains predicate on the "contact" field.
func ContactContains(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldContains(FieldContact, v))
}

// ContactHasPrefix applies the HasPrefix predicate on the "contact" field.
func ContactHasPrefix(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldHasPrefix(FieldContact, v))
}

// ContactHasSuffix applies the HasSuffix predicate on the "contact" field.
func ContactHasSuffix(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldHasSuffix(FieldContact, v))
}

// ContactEqualFold applies the EqualFold predicate on the "contact" field.
func ContactEqualFold(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEqualFold(FieldContact, v))
}

// ContactContainsFold applies the ContainsFold predicate on the "contact" field.
func ContactContainsFold(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldContainsFold(FieldContact, v))
}

// PhonenumEQ applies the EQ predicate on the "phonenum" field.
func PhonenumEQ(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldPhonenum, v))
}

// PhonenumNEQ applies the NEQ predicate on the "phonenum" field.
func PhonenumNEQ(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNEQ(FieldPhonenum, v))
}

// PhonenumIn applies the In predicate on the "phonenum" field.
func PhonenumIn(vs ...string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIn(FieldPhonenum, vs...))
}

// PhonenumNotIn applies the NotIn predicate on the "phonenum" field.
func PhonenumNotIn(vs ...string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotIn(FieldPhonenum, vs...))
}

// PhonenumGT applies the GT predicate on the "phonenum" field.
func PhonenumGT(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGT(FieldPhonenum, v))
}

// PhonenumGTE applies the GTE predicate on the "phonenum" field.
func PhonenumGTE(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGTE(FieldPhonenum, v))
}

// PhonenumLT applies the LT predicate on the "phonenum" field.
func PhonenumLT(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLT(FieldPhonenum, v))
}

// PhonenumLTE applies the LTE predicate on the "phonenum" field.
func PhonenumLTE(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLTE(FieldPhonenum, v))
}

// PhonenumContains applies the Contains predicate on the "phonenum" field.
func PhonenumContains(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldContains(FieldPhonenum, v))
}

// PhonenumHasPrefix applies the HasPrefix predicate on the "phonenum" field.
func PhonenumHasPrefix(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldHasPrefix(FieldPhonenum, v))
}

// PhonenumHasSuffix applies the HasSuffix predicate on the "phonenum" field.
func PhonenumHasSuffix(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldHasSuffix(FieldPhonenum, v))
}

// PhonenumIsNil applies the IsNil predicate on the "phonenum" field.
func PhonenumIsNil() predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIsNull(FieldPhonenum))
}

// PhonenumNotNil applies the NotNil predicate on the "phonenum" field.
func PhonenumNotNil() predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotNull(FieldPhonenum))
}

// PhonenumEqualFold applies the EqualFold predicate on the "phonenum" field.
func PhonenumEqualFold(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEqualFold(FieldPhonenum, v))
}

// PhonenumContainsFold applies the ContainsFold predicate on the "phonenum" field.
func PhonenumContainsFold(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldContainsFold(FieldPhonenum, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionIsNil applies the IsNil predicate on the "description" field.
func DescriptionIsNil() predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIsNull(FieldDescription))
}

// DescriptionNotNil applies the NotNil predicate on the "description" field.
func DescriptionNotNil() predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotNull(FieldDescription))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldContainsFold(FieldDescription, v))
}

// DeleteFlagEQ applies the EQ predicate on the "delete_flag" field.
func DeleteFlagEQ(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldDeleteFlag, v))
}

// DeleteFlagNEQ applies the NEQ predicate on the "delete_flag" field.
func DeleteFlagNEQ(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNEQ(FieldDeleteFlag, v))
}

// DeleteFlagIn applies the In predicate on the "delete_flag" field.
func DeleteFlagIn(vs ...string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIn(FieldDeleteFlag, vs...))
}

// DeleteFlagNotIn applies the NotIn predicate on the "delete_flag" field.
func DeleteFlagNotIn(vs ...string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotIn(FieldDeleteFlag, vs...))
}

// DeleteFlagGT applies the GT predicate on the "delete_flag" field.
func DeleteFlagGT(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGT(FieldDeleteFlag, v))
}

// DeleteFlagGTE applies the GTE predicate on the "delete_flag" field.
func DeleteFlagGTE(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGTE(FieldDeleteFlag, v))
}

// DeleteFlagLT applies the LT predicate on the "delete_flag" field.
func DeleteFlagLT(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLT(FieldDeleteFlag, v))
}

// DeleteFlagLTE applies the LTE predicate on the "delete_flag" field.
func DeleteFlagLTE(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLTE(FieldDeleteFlag, v))
}

// DeleteFlagContains applies the Contains predicate on the "delete_flag" field.
func DeleteFlagContains(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldContains(FieldDeleteFlag, v))
}

// DeleteFlagHasPrefix applies the HasPrefix predicate on the "delete_flag" field.
func DeleteFlagHasPrefix(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldHasPrefix(FieldDeleteFlag, v))
}

// DeleteFlagHasSuffix applies the HasSuffix predicate on the "delete_flag" field.
func DeleteFlagHasSuffix(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldHasSuffix(FieldDeleteFlag, v))
}

// DeleteFlagIsNil applies the IsNil predicate on the "delete_flag" field.
func DeleteFlagIsNil() predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIsNull(FieldDeleteFlag))
}

// DeleteFlagNotNil applies the NotNil predicate on the "delete_flag" field.
func DeleteFlagNotNil() predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotNull(FieldDeleteFlag))
}

// DeleteFlagEqualFold applies the EqualFold predicate on the "delete_flag" field.
func DeleteFlagEqualFold(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEqualFold(FieldDeleteFlag, v))
}

// DeleteFlagContainsFold applies the ContainsFold predicate on the "delete_flag" field.
func DeleteFlagContainsFold(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldContainsFold(FieldDeleteFlag, v))
}

// CreatorEQ applies the EQ predicate on the "creator" field.
func CreatorEQ(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldCreator, v))
}

// CreatorNEQ applies the NEQ predicate on the "creator" field.
func CreatorNEQ(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNEQ(FieldCreator, v))
}

// CreatorIn applies the In predicate on the "creator" field.
func CreatorIn(vs ...string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIn(FieldCreator, vs...))
}

// CreatorNotIn applies the NotIn predicate on the "creator" field.
func CreatorNotIn(vs ...string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotIn(FieldCreator, vs...))
}

// CreatorGT applies the GT predicate on the "creator" field.
func CreatorGT(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGT(FieldCreator, v))
}

// CreatorGTE applies the GTE predicate on the "creator" field.
func CreatorGTE(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGTE(FieldCreator, v))
}

// CreatorLT applies the LT predicate on the "creator" field.
func CreatorLT(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLT(FieldCreator, v))
}

// CreatorLTE applies the LTE predicate on the "creator" field.
func CreatorLTE(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLTE(FieldCreator, v))
}

// CreatorContains applies the Contains predicate on the "creator" field.
func CreatorContains(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldContains(FieldCreator, v))
}

// CreatorHasPrefix applies the HasPrefix predicate on the "creator" field.
func CreatorHasPrefix(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldHasPrefix(FieldCreator, v))
}

// CreatorHasSuffix applies the HasSuffix predicate on the "creator" field.
func CreatorHasSuffix(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldHasSuffix(FieldCreator, v))
}

// CreatorIsNil applies the IsNil predicate on the "creator" field.
func CreatorIsNil() predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIsNull(FieldCreator))
}

// CreatorNotNil applies the NotNil predicate on the "creator" field.
func CreatorNotNil() predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotNull(FieldCreator))
}

// CreatorEqualFold applies the EqualFold predicate on the "creator" field.
func CreatorEqualFold(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEqualFold(FieldCreator, v))
}

// CreatorContainsFold applies the ContainsFold predicate on the "creator" field.
func CreatorContainsFold(v string) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldContainsFold(FieldCreator, v))
}

// CreatedTimeEQ applies the EQ predicate on the "created_time" field.
func CreatedTimeEQ(v time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldCreatedTime, v))
}

// CreatedTimeNEQ applies the NEQ predicate on the "created_time" field.
func CreatedTimeNEQ(v time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNEQ(FieldCreatedTime, v))
}

// CreatedTimeIn applies the In predicate on the "created_time" field.
func CreatedTimeIn(vs ...time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIn(FieldCreatedTime, vs...))
}

// CreatedTimeNotIn applies the NotIn predicate on the "created_time" field.
func CreatedTimeNotIn(vs ...time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotIn(FieldCreatedTime, vs...))
}

// CreatedTimeGT applies the GT predicate on the "created_time" field.
func CreatedTimeGT(v time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGT(FieldCreatedTime, v))
}

// CreatedTimeGTE applies the GTE predicate on the "created_time" field.
func CreatedTimeGTE(v time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGTE(FieldCreatedTime, v))
}

// CreatedTimeLT applies the LT predicate on the "created_time" field.
func CreatedTimeLT(v time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLT(FieldCreatedTime, v))
}

// CreatedTimeLTE applies the LTE predicate on the "created_time" field.
func CreatedTimeLTE(v time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLTE(FieldCreatedTime, v))
}

// CreatedTimeIsNil applies the IsNil predicate on the "created_time" field.
func CreatedTimeIsNil() predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIsNull(FieldCreatedTime))
}

// CreatedTimeNotNil applies the NotNil predicate on the "created_time" field.
func CreatedTimeNotNil() predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotNull(FieldCreatedTime))
}

// UpdatedTimeEQ applies the EQ predicate on the "updated_time" field.
func UpdatedTimeEQ(v time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldEQ(FieldUpdatedTime, v))
}

// UpdatedTimeNEQ applies the NEQ predicate on the "updated_time" field.
func UpdatedTimeNEQ(v time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNEQ(FieldUpdatedTime, v))
}

// UpdatedTimeIn applies the In predicate on the "updated_time" field.
func UpdatedTimeIn(vs ...time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIn(FieldUpdatedTime, vs...))
}

// UpdatedTimeNotIn applies the NotIn predicate on the "updated_time" field.
func UpdatedTimeNotIn(vs ...time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotIn(FieldUpdatedTime, vs...))
}

// UpdatedTimeGT applies the GT predicate on the "updated_time" field.
func UpdatedTimeGT(v time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGT(FieldUpdatedTime, v))
}

// UpdatedTimeGTE applies the GTE predicate on the "updated_time" field.
func UpdatedTimeGTE(v time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldGTE(FieldUpdatedTime, v))
}

// UpdatedTimeLT applies the LT predicate on the "updated_time" field.
func UpdatedTimeLT(v time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLT(FieldUpdatedTime, v))
}

// UpdatedTimeLTE applies the LTE predicate on the "updated_time" field.
func UpdatedTimeLTE(v time.Time) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldLTE(FieldUpdatedTime, v))
}

// UpdatedTimeIsNil applies the IsNil predicate on the "updated_time" field.
func UpdatedTimeIsNil() predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldIsNull(FieldUpdatedTime))
}

// UpdatedTimeNotNil applies the NotNil predicate on the "updated_time" field.
func UpdatedTimeNotNil() predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.FieldNotNull(FieldUpdatedTime))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.FMPMSApi) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.FMPMSApi) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.FMPMSApi) predicate.FMPMSApi {
	return predicate.FMPMSApi(sql.NotPredicates(p))
}

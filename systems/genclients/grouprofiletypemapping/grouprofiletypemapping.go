// Code generated by ent, DO NOT EDIT.

package grouprofiletypemapping

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the grouprofiletypemapping type in the database.
	Label = "grou_profile_type_mapping"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldGroupID holds the string denoting the group_id field in the database.
	FieldGroupID = "group_id"
	// FieldProfileTypeID holds the string denoting the profile_type_id field in the database.
	FieldProfileTypeID = "profile_type_id"
	// FieldCreator holds the string denoting the creator field in the database.
	FieldCreator = "creator"
	// FieldCreatedTime holds the string denoting the created_time field in the database.
	FieldCreatedTime = "created_time"
	// Table holds the table name of the grouprofiletypemapping in the database.
	Table = "group_profile_type_mapping"
)

// Columns holds all SQL columns for grouprofiletypemapping fields.
var Columns = []string{
	FieldID,
	FieldGroupID,
	FieldProfileTypeID,
	FieldCreator,
	FieldCreatedTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the GrouProfileTypeMapping queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByGroupID orders the results by the group_id field.
func ByGroupID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGroupID, opts...).ToFunc()
}

// ByProfileTypeID orders the results by the profile_type_id field.
func ByProfileTypeID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldProfileTypeID, opts...).ToFunc()
}

// ByCreator orders the results by the creator field.
func ByCreator(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreator, opts...).ToFunc()
}

// ByCreatedTime orders the results by the created_time field.
func ByCreatedTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedTime, opts...).ToFunc()
}

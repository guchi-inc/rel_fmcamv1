// Code generated by ent, DO NOT EDIT.

package profiles

import (
	"fmcam/systems/genclients/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldLTE(FieldID, id))
}

// TypeID applies equality check predicate on the "type_id" field. It's identical to TypeIDEQ.
func TypeID(v int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldTypeID, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldName, v))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v uuid.UUID) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldTenantID, v))
}

// IDCardNumber applies equality check predicate on the "id_card_number" field. It's identical to IDCardNumberEQ.
func IDCardNumber(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldIDCardNumber, v))
}

// PhoneNumber applies equality check predicate on the "phone_number" field. It's identical to PhoneNumberEQ.
func PhoneNumber(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldPhoneNumber, v))
}

// Enabled applies equality check predicate on the "enabled" field. It's identical to EnabledEQ.
func Enabled(v bool) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldEnabled, v))
}

// RoomID applies equality check predicate on the "room_id" field. It's identical to RoomIDEQ.
func RoomID(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldRoomID, v))
}

// TmpURL applies equality check predicate on the "tmp_url" field. It's identical to TmpURLEQ.
func TmpURL(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldTmpURL, v))
}

// CreatedTime applies equality check predicate on the "created_time" field. It's identical to CreatedTimeEQ.
func CreatedTime(v time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldCreatedTime, v))
}

// UpdatedTime applies equality check predicate on the "updated_time" field. It's identical to UpdatedTimeEQ.
func UpdatedTime(v time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldUpdatedTime, v))
}

// TypeIDEQ applies the EQ predicate on the "type_id" field.
func TypeIDEQ(v int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldTypeID, v))
}

// TypeIDNEQ applies the NEQ predicate on the "type_id" field.
func TypeIDNEQ(v int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldNEQ(FieldTypeID, v))
}

// TypeIDIn applies the In predicate on the "type_id" field.
func TypeIDIn(vs ...int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldIn(FieldTypeID, vs...))
}

// TypeIDNotIn applies the NotIn predicate on the "type_id" field.
func TypeIDNotIn(vs ...int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldNotIn(FieldTypeID, vs...))
}

// TypeIDGT applies the GT predicate on the "type_id" field.
func TypeIDGT(v int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldGT(FieldTypeID, v))
}

// TypeIDGTE applies the GTE predicate on the "type_id" field.
func TypeIDGTE(v int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldGTE(FieldTypeID, v))
}

// TypeIDLT applies the LT predicate on the "type_id" field.
func TypeIDLT(v int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldLT(FieldTypeID, v))
}

// TypeIDLTE applies the LTE predicate on the "type_id" field.
func TypeIDLTE(v int64) predicate.Profiles {
	return predicate.Profiles(sql.FieldLTE(FieldTypeID, v))
}

// TypeIDIsNil applies the IsNil predicate on the "type_id" field.
func TypeIDIsNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldIsNull(FieldTypeID))
}

// TypeIDNotNil applies the NotNil predicate on the "type_id" field.
func TypeIDNotNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldNotNull(FieldTypeID))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Profiles {
	return predicate.Profiles(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Profiles {
	return predicate.Profiles(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldHasSuffix(FieldName, v))
}

// NameIsNil applies the IsNil predicate on the "name" field.
func NameIsNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldIsNull(FieldName))
}

// NameNotNil applies the NotNil predicate on the "name" field.
func NameNotNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldNotNull(FieldName))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldContainsFold(FieldName, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v uuid.UUID) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v uuid.UUID) predicate.Profiles {
	return predicate.Profiles(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...uuid.UUID) predicate.Profiles {
	return predicate.Profiles(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...uuid.UUID) predicate.Profiles {
	return predicate.Profiles(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v uuid.UUID) predicate.Profiles {
	return predicate.Profiles(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v uuid.UUID) predicate.Profiles {
	return predicate.Profiles(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v uuid.UUID) predicate.Profiles {
	return predicate.Profiles(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v uuid.UUID) predicate.Profiles {
	return predicate.Profiles(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDIsNil applies the IsNil predicate on the "tenant_id" field.
func TenantIDIsNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldIsNull(FieldTenantID))
}

// TenantIDNotNil applies the NotNil predicate on the "tenant_id" field.
func TenantIDNotNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldNotNull(FieldTenantID))
}

// IDCardNumberEQ applies the EQ predicate on the "id_card_number" field.
func IDCardNumberEQ(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldIDCardNumber, v))
}

// IDCardNumberNEQ applies the NEQ predicate on the "id_card_number" field.
func IDCardNumberNEQ(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldNEQ(FieldIDCardNumber, v))
}

// IDCardNumberIn applies the In predicate on the "id_card_number" field.
func IDCardNumberIn(vs ...string) predicate.Profiles {
	return predicate.Profiles(sql.FieldIn(FieldIDCardNumber, vs...))
}

// IDCardNumberNotIn applies the NotIn predicate on the "id_card_number" field.
func IDCardNumberNotIn(vs ...string) predicate.Profiles {
	return predicate.Profiles(sql.FieldNotIn(FieldIDCardNumber, vs...))
}

// IDCardNumberGT applies the GT predicate on the "id_card_number" field.
func IDCardNumberGT(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldGT(FieldIDCardNumber, v))
}

// IDCardNumberGTE applies the GTE predicate on the "id_card_number" field.
func IDCardNumberGTE(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldGTE(FieldIDCardNumber, v))
}

// IDCardNumberLT applies the LT predicate on the "id_card_number" field.
func IDCardNumberLT(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldLT(FieldIDCardNumber, v))
}

// IDCardNumberLTE applies the LTE predicate on the "id_card_number" field.
func IDCardNumberLTE(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldLTE(FieldIDCardNumber, v))
}

// IDCardNumberContains applies the Contains predicate on the "id_card_number" field.
func IDCardNumberContains(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldContains(FieldIDCardNumber, v))
}

// IDCardNumberHasPrefix applies the HasPrefix predicate on the "id_card_number" field.
func IDCardNumberHasPrefix(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldHasPrefix(FieldIDCardNumber, v))
}

// IDCardNumberHasSuffix applies the HasSuffix predicate on the "id_card_number" field.
func IDCardNumberHasSuffix(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldHasSuffix(FieldIDCardNumber, v))
}

// IDCardNumberIsNil applies the IsNil predicate on the "id_card_number" field.
func IDCardNumberIsNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldIsNull(FieldIDCardNumber))
}

// IDCardNumberNotNil applies the NotNil predicate on the "id_card_number" field.
func IDCardNumberNotNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldNotNull(FieldIDCardNumber))
}

// IDCardNumberEqualFold applies the EqualFold predicate on the "id_card_number" field.
func IDCardNumberEqualFold(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEqualFold(FieldIDCardNumber, v))
}

// IDCardNumberContainsFold applies the ContainsFold predicate on the "id_card_number" field.
func IDCardNumberContainsFold(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldContainsFold(FieldIDCardNumber, v))
}

// PhoneNumberEQ applies the EQ predicate on the "phone_number" field.
func PhoneNumberEQ(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldPhoneNumber, v))
}

// PhoneNumberNEQ applies the NEQ predicate on the "phone_number" field.
func PhoneNumberNEQ(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldNEQ(FieldPhoneNumber, v))
}

// PhoneNumberIn applies the In predicate on the "phone_number" field.
func PhoneNumberIn(vs ...string) predicate.Profiles {
	return predicate.Profiles(sql.FieldIn(FieldPhoneNumber, vs...))
}

// PhoneNumberNotIn applies the NotIn predicate on the "phone_number" field.
func PhoneNumberNotIn(vs ...string) predicate.Profiles {
	return predicate.Profiles(sql.FieldNotIn(FieldPhoneNumber, vs...))
}

// PhoneNumberGT applies the GT predicate on the "phone_number" field.
func PhoneNumberGT(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldGT(FieldPhoneNumber, v))
}

// PhoneNumberGTE applies the GTE predicate on the "phone_number" field.
func PhoneNumberGTE(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldGTE(FieldPhoneNumber, v))
}

// PhoneNumberLT applies the LT predicate on the "phone_number" field.
func PhoneNumberLT(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldLT(FieldPhoneNumber, v))
}

// PhoneNumberLTE applies the LTE predicate on the "phone_number" field.
func PhoneNumberLTE(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldLTE(FieldPhoneNumber, v))
}

// PhoneNumberContains applies the Contains predicate on the "phone_number" field.
func PhoneNumberContains(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldContains(FieldPhoneNumber, v))
}

// PhoneNumberHasPrefix applies the HasPrefix predicate on the "phone_number" field.
func PhoneNumberHasPrefix(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldHasPrefix(FieldPhoneNumber, v))
}

// PhoneNumberHasSuffix applies the HasSuffix predicate on the "phone_number" field.
func PhoneNumberHasSuffix(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldHasSuffix(FieldPhoneNumber, v))
}

// PhoneNumberIsNil applies the IsNil predicate on the "phone_number" field.
func PhoneNumberIsNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldIsNull(FieldPhoneNumber))
}

// PhoneNumberNotNil applies the NotNil predicate on the "phone_number" field.
func PhoneNumberNotNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldNotNull(FieldPhoneNumber))
}

// PhoneNumberEqualFold applies the EqualFold predicate on the "phone_number" field.
func PhoneNumberEqualFold(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEqualFold(FieldPhoneNumber, v))
}

// PhoneNumberContainsFold applies the ContainsFold predicate on the "phone_number" field.
func PhoneNumberContainsFold(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldContainsFold(FieldPhoneNumber, v))
}

// EnabledEQ applies the EQ predicate on the "enabled" field.
func EnabledEQ(v bool) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldEnabled, v))
}

// EnabledNEQ applies the NEQ predicate on the "enabled" field.
func EnabledNEQ(v bool) predicate.Profiles {
	return predicate.Profiles(sql.FieldNEQ(FieldEnabled, v))
}

// EnabledIsNil applies the IsNil predicate on the "enabled" field.
func EnabledIsNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldIsNull(FieldEnabled))
}

// EnabledNotNil applies the NotNil predicate on the "enabled" field.
func EnabledNotNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldNotNull(FieldEnabled))
}

// RoomIDEQ applies the EQ predicate on the "room_id" field.
func RoomIDEQ(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldRoomID, v))
}

// RoomIDNEQ applies the NEQ predicate on the "room_id" field.
func RoomIDNEQ(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldNEQ(FieldRoomID, v))
}

// RoomIDIn applies the In predicate on the "room_id" field.
func RoomIDIn(vs ...string) predicate.Profiles {
	return predicate.Profiles(sql.FieldIn(FieldRoomID, vs...))
}

// RoomIDNotIn applies the NotIn predicate on the "room_id" field.
func RoomIDNotIn(vs ...string) predicate.Profiles {
	return predicate.Profiles(sql.FieldNotIn(FieldRoomID, vs...))
}

// RoomIDGT applies the GT predicate on the "room_id" field.
func RoomIDGT(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldGT(FieldRoomID, v))
}

// RoomIDGTE applies the GTE predicate on the "room_id" field.
func RoomIDGTE(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldGTE(FieldRoomID, v))
}

// RoomIDLT applies the LT predicate on the "room_id" field.
func RoomIDLT(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldLT(FieldRoomID, v))
}

// RoomIDLTE applies the LTE predicate on the "room_id" field.
func RoomIDLTE(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldLTE(FieldRoomID, v))
}

// RoomIDContains applies the Contains predicate on the "room_id" field.
func RoomIDContains(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldContains(FieldRoomID, v))
}

// RoomIDHasPrefix applies the HasPrefix predicate on the "room_id" field.
func RoomIDHasPrefix(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldHasPrefix(FieldRoomID, v))
}

// RoomIDHasSuffix applies the HasSuffix predicate on the "room_id" field.
func RoomIDHasSuffix(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldHasSuffix(FieldRoomID, v))
}

// RoomIDIsNil applies the IsNil predicate on the "room_id" field.
func RoomIDIsNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldIsNull(FieldRoomID))
}

// RoomIDNotNil applies the NotNil predicate on the "room_id" field.
func RoomIDNotNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldNotNull(FieldRoomID))
}

// RoomIDEqualFold applies the EqualFold predicate on the "room_id" field.
func RoomIDEqualFold(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEqualFold(FieldRoomID, v))
}

// RoomIDContainsFold applies the ContainsFold predicate on the "room_id" field.
func RoomIDContainsFold(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldContainsFold(FieldRoomID, v))
}

// TmpURLEQ applies the EQ predicate on the "tmp_url" field.
func TmpURLEQ(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldTmpURL, v))
}

// TmpURLNEQ applies the NEQ predicate on the "tmp_url" field.
func TmpURLNEQ(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldNEQ(FieldTmpURL, v))
}

// TmpURLIn applies the In predicate on the "tmp_url" field.
func TmpURLIn(vs ...string) predicate.Profiles {
	return predicate.Profiles(sql.FieldIn(FieldTmpURL, vs...))
}

// TmpURLNotIn applies the NotIn predicate on the "tmp_url" field.
func TmpURLNotIn(vs ...string) predicate.Profiles {
	return predicate.Profiles(sql.FieldNotIn(FieldTmpURL, vs...))
}

// TmpURLGT applies the GT predicate on the "tmp_url" field.
func TmpURLGT(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldGT(FieldTmpURL, v))
}

// TmpURLGTE applies the GTE predicate on the "tmp_url" field.
func TmpURLGTE(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldGTE(FieldTmpURL, v))
}

// TmpURLLT applies the LT predicate on the "tmp_url" field.
func TmpURLLT(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldLT(FieldTmpURL, v))
}

// TmpURLLTE applies the LTE predicate on the "tmp_url" field.
func TmpURLLTE(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldLTE(FieldTmpURL, v))
}

// TmpURLContains applies the Contains predicate on the "tmp_url" field.
func TmpURLContains(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldContains(FieldTmpURL, v))
}

// TmpURLHasPrefix applies the HasPrefix predicate on the "tmp_url" field.
func TmpURLHasPrefix(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldHasPrefix(FieldTmpURL, v))
}

// TmpURLHasSuffix applies the HasSuffix predicate on the "tmp_url" field.
func TmpURLHasSuffix(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldHasSuffix(FieldTmpURL, v))
}

// TmpURLIsNil applies the IsNil predicate on the "tmp_url" field.
func TmpURLIsNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldIsNull(FieldTmpURL))
}

// TmpURLNotNil applies the NotNil predicate on the "tmp_url" field.
func TmpURLNotNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldNotNull(FieldTmpURL))
}

// TmpURLEqualFold applies the EqualFold predicate on the "tmp_url" field.
func TmpURLEqualFold(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldEqualFold(FieldTmpURL, v))
}

// TmpURLContainsFold applies the ContainsFold predicate on the "tmp_url" field.
func TmpURLContainsFold(v string) predicate.Profiles {
	return predicate.Profiles(sql.FieldContainsFold(FieldTmpURL, v))
}

// CreatedTimeEQ applies the EQ predicate on the "created_time" field.
func CreatedTimeEQ(v time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldCreatedTime, v))
}

// CreatedTimeNEQ applies the NEQ predicate on the "created_time" field.
func CreatedTimeNEQ(v time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldNEQ(FieldCreatedTime, v))
}

// CreatedTimeIn applies the In predicate on the "created_time" field.
func CreatedTimeIn(vs ...time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldIn(FieldCreatedTime, vs...))
}

// CreatedTimeNotIn applies the NotIn predicate on the "created_time" field.
func CreatedTimeNotIn(vs ...time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldNotIn(FieldCreatedTime, vs...))
}

// CreatedTimeGT applies the GT predicate on the "created_time" field.
func CreatedTimeGT(v time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldGT(FieldCreatedTime, v))
}

// CreatedTimeGTE applies the GTE predicate on the "created_time" field.
func CreatedTimeGTE(v time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldGTE(FieldCreatedTime, v))
}

// CreatedTimeLT applies the LT predicate on the "created_time" field.
func CreatedTimeLT(v time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldLT(FieldCreatedTime, v))
}

// CreatedTimeLTE applies the LTE predicate on the "created_time" field.
func CreatedTimeLTE(v time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldLTE(FieldCreatedTime, v))
}

// CreatedTimeIsNil applies the IsNil predicate on the "created_time" field.
func CreatedTimeIsNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldIsNull(FieldCreatedTime))
}

// CreatedTimeNotNil applies the NotNil predicate on the "created_time" field.
func CreatedTimeNotNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldNotNull(FieldCreatedTime))
}

// UpdatedTimeEQ applies the EQ predicate on the "updated_time" field.
func UpdatedTimeEQ(v time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldEQ(FieldUpdatedTime, v))
}

// UpdatedTimeNEQ applies the NEQ predicate on the "updated_time" field.
func UpdatedTimeNEQ(v time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldNEQ(FieldUpdatedTime, v))
}

// UpdatedTimeIn applies the In predicate on the "updated_time" field.
func UpdatedTimeIn(vs ...time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldIn(FieldUpdatedTime, vs...))
}

// UpdatedTimeNotIn applies the NotIn predicate on the "updated_time" field.
func UpdatedTimeNotIn(vs ...time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldNotIn(FieldUpdatedTime, vs...))
}

// UpdatedTimeGT applies the GT predicate on the "updated_time" field.
func UpdatedTimeGT(v time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldGT(FieldUpdatedTime, v))
}

// UpdatedTimeGTE applies the GTE predicate on the "updated_time" field.
func UpdatedTimeGTE(v time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldGTE(FieldUpdatedTime, v))
}

// UpdatedTimeLT applies the LT predicate on the "updated_time" field.
func UpdatedTimeLT(v time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldLT(FieldUpdatedTime, v))
}

// UpdatedTimeLTE applies the LTE predicate on the "updated_time" field.
func UpdatedTimeLTE(v time.Time) predicate.Profiles {
	return predicate.Profiles(sql.FieldLTE(FieldUpdatedTime, v))
}

// UpdatedTimeIsNil applies the IsNil predicate on the "updated_time" field.
func UpdatedTimeIsNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldIsNull(FieldUpdatedTime))
}

// UpdatedTimeNotNil applies the NotNil predicate on the "updated_time" field.
func UpdatedTimeNotNil() predicate.Profiles {
	return predicate.Profiles(sql.FieldNotNull(FieldUpdatedTime))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Profiles) predicate.Profiles {
	return predicate.Profiles(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Profiles) predicate.Profiles {
	return predicate.Profiles(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Profiles) predicate.Profiles {
	return predicate.Profiles(sql.NotPredicates(p))
}

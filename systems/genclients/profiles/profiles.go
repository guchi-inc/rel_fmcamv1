// Code generated by ent, DO NOT EDIT.

package profiles

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the profiles type in the database.
	Label = "profiles"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTypeID holds the string denoting the type_id field in the database.
	FieldTypeID = "type_id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldTenantID holds the string denoting the tenant_id field in the database.
	FieldTenantID = "tenant_id"
	// FieldIDCardNumber holds the string denoting the id_card_number field in the database.
	FieldIDCardNumber = "id_card_number"
	// FieldPhoneNumber holds the string denoting the phone_number field in the database.
	FieldPhoneNumber = "phone_number"
	// FieldEnabled holds the string denoting the enabled field in the database.
	FieldEnabled = "enabled"
	// FieldRoomID holds the string denoting the room_id field in the database.
	FieldRoomID = "room_id"
	// FieldTmpURL holds the string denoting the tmp_url field in the database.
	FieldTmpURL = "tmp_url"
	// FieldCreatedTime holds the string denoting the created_time field in the database.
	FieldCreatedTime = "created_time"
	// FieldUpdatedTime holds the string denoting the updated_time field in the database.
	FieldUpdatedTime = "updated_time"
	// Table holds the table name of the profiles in the database.
	Table = "Profile"
)

// Columns holds all SQL columns for profiles fields.
var Columns = []string{
	FieldID,
	FieldTypeID,
	FieldName,
	FieldTenantID,
	FieldIDCardNumber,
	FieldPhoneNumber,
	FieldEnabled,
	FieldRoomID,
	FieldTmpURL,
	FieldCreatedTime,
	FieldUpdatedTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// IDCardNumberValidator is a validator for the "id_card_number" field. It is called by the builders before save.
	IDCardNumberValidator func(string) error
	// DefaultPhoneNumber holds the default value on creation for the "phone_number" field.
	DefaultPhoneNumber string
	// DefaultEnabled holds the default value on creation for the "enabled" field.
	DefaultEnabled bool
	// UpdateDefaultUpdatedTime holds the default value on update for the "updated_time" field.
	UpdateDefaultUpdatedTime func() time.Time
)

// OrderOption defines the ordering options for the Profiles queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByTypeID orders the results by the type_id field.
func ByTypeID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTypeID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByTenantID orders the results by the tenant_id field.
func ByTenantID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTenantID, opts...).ToFunc()
}

// ByIDCardNumber orders the results by the id_card_number field.
func ByIDCardNumber(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIDCardNumber, opts...).ToFunc()
}

// ByPhoneNumber orders the results by the phone_number field.
func ByPhoneNumber(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPhoneNumber, opts...).ToFunc()
}

// ByEnabled orders the results by the enabled field.
func ByEnabled(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnabled, opts...).ToFunc()
}

// ByRoomID orders the results by the room_id field.
func ByRoomID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRoomID, opts...).ToFunc()
}

// ByTmpURL orders the results by the tmp_url field.
func ByTmpURL(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTmpURL, opts...).ToFunc()
}

// ByCreatedTime orders the results by the created_time field.
func ByCreatedTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedTime, opts...).ToFunc()
}

// ByUpdatedTime orders the results by the updated_time field.
func ByUpdatedTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedTime, opts...).ToFunc()
}

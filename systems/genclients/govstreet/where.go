// Code generated by ent, DO NOT EDIT.

package govstreet

import (
	"fmcam/systems/genclients/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLTE(FieldID, id))
}

// Code applies equality check predicate on the "code" field. It's identical to CodeEQ.
func Code(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldCode, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldName, v))
}

// ProvinceCode applies equality check predicate on the "province_code" field. It's identical to ProvinceCodeEQ.
func ProvinceCode(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldProvinceCode, v))
}

// CityCode applies equality check predicate on the "city_code" field. It's identical to CityCodeEQ.
func CityCode(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldCityCode, v))
}

// AreaCode applies equality check predicate on the "area_code" field. It's identical to AreaCodeEQ.
func AreaCode(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldAreaCode, v))
}

// Creator applies equality check predicate on the "creator" field. It's identical to CreatorEQ.
func Creator(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldCreator, v))
}

// DeleteFlag applies equality check predicate on the "delete_flag" field. It's identical to DeleteFlagEQ.
func DeleteFlag(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldDeleteFlag, v))
}

// CreatedTime applies equality check predicate on the "created_time" field. It's identical to CreatedTimeEQ.
func CreatedTime(v time.Time) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldCreatedTime, v))
}

// CodeEQ applies the EQ predicate on the "code" field.
func CodeEQ(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldCode, v))
}

// CodeNEQ applies the NEQ predicate on the "code" field.
func CodeNEQ(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNEQ(FieldCode, v))
}

// CodeIn applies the In predicate on the "code" field.
func CodeIn(vs ...string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldIn(FieldCode, vs...))
}

// CodeNotIn applies the NotIn predicate on the "code" field.
func CodeNotIn(vs ...string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNotIn(FieldCode, vs...))
}

// CodeGT applies the GT predicate on the "code" field.
func CodeGT(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGT(FieldCode, v))
}

// CodeGTE applies the GTE predicate on the "code" field.
func CodeGTE(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGTE(FieldCode, v))
}

// CodeLT applies the LT predicate on the "code" field.
func CodeLT(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLT(FieldCode, v))
}

// CodeLTE applies the LTE predicate on the "code" field.
func CodeLTE(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLTE(FieldCode, v))
}

// CodeContains applies the Contains predicate on the "code" field.
func CodeContains(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldContains(FieldCode, v))
}

// CodeHasPrefix applies the HasPrefix predicate on the "code" field.
func CodeHasPrefix(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldHasPrefix(FieldCode, v))
}

// CodeHasSuffix applies the HasSuffix predicate on the "code" field.
func CodeHasSuffix(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldHasSuffix(FieldCode, v))
}

// CodeEqualFold applies the EqualFold predicate on the "code" field.
func CodeEqualFold(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEqualFold(FieldCode, v))
}

// CodeContainsFold applies the ContainsFold predicate on the "code" field.
func CodeContainsFold(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldContainsFold(FieldCode, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldContainsFold(FieldName, v))
}

// ProvinceCodeEQ applies the EQ predicate on the "province_code" field.
func ProvinceCodeEQ(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldProvinceCode, v))
}

// ProvinceCodeNEQ applies the NEQ predicate on the "province_code" field.
func ProvinceCodeNEQ(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNEQ(FieldProvinceCode, v))
}

// ProvinceCodeIn applies the In predicate on the "province_code" field.
func ProvinceCodeIn(vs ...string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldIn(FieldProvinceCode, vs...))
}

// ProvinceCodeNotIn applies the NotIn predicate on the "province_code" field.
func ProvinceCodeNotIn(vs ...string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNotIn(FieldProvinceCode, vs...))
}

// ProvinceCodeGT applies the GT predicate on the "province_code" field.
func ProvinceCodeGT(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGT(FieldProvinceCode, v))
}

// ProvinceCodeGTE applies the GTE predicate on the "province_code" field.
func ProvinceCodeGTE(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGTE(FieldProvinceCode, v))
}

// ProvinceCodeLT applies the LT predicate on the "province_code" field.
func ProvinceCodeLT(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLT(FieldProvinceCode, v))
}

// ProvinceCodeLTE applies the LTE predicate on the "province_code" field.
func ProvinceCodeLTE(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLTE(FieldProvinceCode, v))
}

// ProvinceCodeContains applies the Contains predicate on the "province_code" field.
func ProvinceCodeContains(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldContains(FieldProvinceCode, v))
}

// ProvinceCodeHasPrefix applies the HasPrefix predicate on the "province_code" field.
func ProvinceCodeHasPrefix(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldHasPrefix(FieldProvinceCode, v))
}

// ProvinceCodeHasSuffix applies the HasSuffix predicate on the "province_code" field.
func ProvinceCodeHasSuffix(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldHasSuffix(FieldProvinceCode, v))
}

// ProvinceCodeEqualFold applies the EqualFold predicate on the "province_code" field.
func ProvinceCodeEqualFold(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEqualFold(FieldProvinceCode, v))
}

// ProvinceCodeContainsFold applies the ContainsFold predicate on the "province_code" field.
func ProvinceCodeContainsFold(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldContainsFold(FieldProvinceCode, v))
}

// CityCodeEQ applies the EQ predicate on the "city_code" field.
func CityCodeEQ(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldCityCode, v))
}

// CityCodeNEQ applies the NEQ predicate on the "city_code" field.
func CityCodeNEQ(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNEQ(FieldCityCode, v))
}

// CityCodeIn applies the In predicate on the "city_code" field.
func CityCodeIn(vs ...string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldIn(FieldCityCode, vs...))
}

// CityCodeNotIn applies the NotIn predicate on the "city_code" field.
func CityCodeNotIn(vs ...string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNotIn(FieldCityCode, vs...))
}

// CityCodeGT applies the GT predicate on the "city_code" field.
func CityCodeGT(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGT(FieldCityCode, v))
}

// CityCodeGTE applies the GTE predicate on the "city_code" field.
func CityCodeGTE(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGTE(FieldCityCode, v))
}

// CityCodeLT applies the LT predicate on the "city_code" field.
func CityCodeLT(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLT(FieldCityCode, v))
}

// CityCodeLTE applies the LTE predicate on the "city_code" field.
func CityCodeLTE(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLTE(FieldCityCode, v))
}

// CityCodeContains applies the Contains predicate on the "city_code" field.
func CityCodeContains(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldContains(FieldCityCode, v))
}

// CityCodeHasPrefix applies the HasPrefix predicate on the "city_code" field.
func CityCodeHasPrefix(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldHasPrefix(FieldCityCode, v))
}

// CityCodeHasSuffix applies the HasSuffix predicate on the "city_code" field.
func CityCodeHasSuffix(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldHasSuffix(FieldCityCode, v))
}

// CityCodeEqualFold applies the EqualFold predicate on the "city_code" field.
func CityCodeEqualFold(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEqualFold(FieldCityCode, v))
}

// CityCodeContainsFold applies the ContainsFold predicate on the "city_code" field.
func CityCodeContainsFold(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldContainsFold(FieldCityCode, v))
}

// AreaCodeEQ applies the EQ predicate on the "area_code" field.
func AreaCodeEQ(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldAreaCode, v))
}

// AreaCodeNEQ applies the NEQ predicate on the "area_code" field.
func AreaCodeNEQ(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNEQ(FieldAreaCode, v))
}

// AreaCodeIn applies the In predicate on the "area_code" field.
func AreaCodeIn(vs ...string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldIn(FieldAreaCode, vs...))
}

// AreaCodeNotIn applies the NotIn predicate on the "area_code" field.
func AreaCodeNotIn(vs ...string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNotIn(FieldAreaCode, vs...))
}

// AreaCodeGT applies the GT predicate on the "area_code" field.
func AreaCodeGT(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGT(FieldAreaCode, v))
}

// AreaCodeGTE applies the GTE predicate on the "area_code" field.
func AreaCodeGTE(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGTE(FieldAreaCode, v))
}

// AreaCodeLT applies the LT predicate on the "area_code" field.
func AreaCodeLT(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLT(FieldAreaCode, v))
}

// AreaCodeLTE applies the LTE predicate on the "area_code" field.
func AreaCodeLTE(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLTE(FieldAreaCode, v))
}

// AreaCodeContains applies the Contains predicate on the "area_code" field.
func AreaCodeContains(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldContains(FieldAreaCode, v))
}

// AreaCodeHasPrefix applies the HasPrefix predicate on the "area_code" field.
func AreaCodeHasPrefix(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldHasPrefix(FieldAreaCode, v))
}

// AreaCodeHasSuffix applies the HasSuffix predicate on the "area_code" field.
func AreaCodeHasSuffix(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldHasSuffix(FieldAreaCode, v))
}

// AreaCodeEqualFold applies the EqualFold predicate on the "area_code" field.
func AreaCodeEqualFold(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEqualFold(FieldAreaCode, v))
}

// AreaCodeContainsFold applies the ContainsFold predicate on the "area_code" field.
func AreaCodeContainsFold(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldContainsFold(FieldAreaCode, v))
}

// CreatorEQ applies the EQ predicate on the "creator" field.
func CreatorEQ(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldCreator, v))
}

// CreatorNEQ applies the NEQ predicate on the "creator" field.
func CreatorNEQ(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNEQ(FieldCreator, v))
}

// CreatorIn applies the In predicate on the "creator" field.
func CreatorIn(vs ...string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldIn(FieldCreator, vs...))
}

// CreatorNotIn applies the NotIn predicate on the "creator" field.
func CreatorNotIn(vs ...string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNotIn(FieldCreator, vs...))
}

// CreatorGT applies the GT predicate on the "creator" field.
func CreatorGT(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGT(FieldCreator, v))
}

// CreatorGTE applies the GTE predicate on the "creator" field.
func CreatorGTE(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGTE(FieldCreator, v))
}

// CreatorLT applies the LT predicate on the "creator" field.
func CreatorLT(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLT(FieldCreator, v))
}

// CreatorLTE applies the LTE predicate on the "creator" field.
func CreatorLTE(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLTE(FieldCreator, v))
}

// CreatorContains applies the Contains predicate on the "creator" field.
func CreatorContains(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldContains(FieldCreator, v))
}

// CreatorHasPrefix applies the HasPrefix predicate on the "creator" field.
func CreatorHasPrefix(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldHasPrefix(FieldCreator, v))
}

// CreatorHasSuffix applies the HasSuffix predicate on the "creator" field.
func CreatorHasSuffix(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldHasSuffix(FieldCreator, v))
}

// CreatorEqualFold applies the EqualFold predicate on the "creator" field.
func CreatorEqualFold(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEqualFold(FieldCreator, v))
}

// CreatorContainsFold applies the ContainsFold predicate on the "creator" field.
func CreatorContainsFold(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldContainsFold(FieldCreator, v))
}

// DeleteFlagEQ applies the EQ predicate on the "delete_flag" field.
func DeleteFlagEQ(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldDeleteFlag, v))
}

// DeleteFlagNEQ applies the NEQ predicate on the "delete_flag" field.
func DeleteFlagNEQ(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNEQ(FieldDeleteFlag, v))
}

// DeleteFlagIn applies the In predicate on the "delete_flag" field.
func DeleteFlagIn(vs ...string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldIn(FieldDeleteFlag, vs...))
}

// DeleteFlagNotIn applies the NotIn predicate on the "delete_flag" field.
func DeleteFlagNotIn(vs ...string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNotIn(FieldDeleteFlag, vs...))
}

// DeleteFlagGT applies the GT predicate on the "delete_flag" field.
func DeleteFlagGT(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGT(FieldDeleteFlag, v))
}

// DeleteFlagGTE applies the GTE predicate on the "delete_flag" field.
func DeleteFlagGTE(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGTE(FieldDeleteFlag, v))
}

// DeleteFlagLT applies the LT predicate on the "delete_flag" field.
func DeleteFlagLT(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLT(FieldDeleteFlag, v))
}

// DeleteFlagLTE applies the LTE predicate on the "delete_flag" field.
func DeleteFlagLTE(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLTE(FieldDeleteFlag, v))
}

// DeleteFlagContains applies the Contains predicate on the "delete_flag" field.
func DeleteFlagContains(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldContains(FieldDeleteFlag, v))
}

// DeleteFlagHasPrefix applies the HasPrefix predicate on the "delete_flag" field.
func DeleteFlagHasPrefix(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldHasPrefix(FieldDeleteFlag, v))
}

// DeleteFlagHasSuffix applies the HasSuffix predicate on the "delete_flag" field.
func DeleteFlagHasSuffix(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldHasSuffix(FieldDeleteFlag, v))
}

// DeleteFlagEqualFold applies the EqualFold predicate on the "delete_flag" field.
func DeleteFlagEqualFold(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEqualFold(FieldDeleteFlag, v))
}

// DeleteFlagContainsFold applies the ContainsFold predicate on the "delete_flag" field.
func DeleteFlagContainsFold(v string) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldContainsFold(FieldDeleteFlag, v))
}

// CreatedTimeEQ applies the EQ predicate on the "created_time" field.
func CreatedTimeEQ(v time.Time) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldEQ(FieldCreatedTime, v))
}

// CreatedTimeNEQ applies the NEQ predicate on the "created_time" field.
func CreatedTimeNEQ(v time.Time) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNEQ(FieldCreatedTime, v))
}

// CreatedTimeIn applies the In predicate on the "created_time" field.
func CreatedTimeIn(vs ...time.Time) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldIn(FieldCreatedTime, vs...))
}

// CreatedTimeNotIn applies the NotIn predicate on the "created_time" field.
func CreatedTimeNotIn(vs ...time.Time) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldNotIn(FieldCreatedTime, vs...))
}

// CreatedTimeGT applies the GT predicate on the "created_time" field.
func CreatedTimeGT(v time.Time) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGT(FieldCreatedTime, v))
}

// CreatedTimeGTE applies the GTE predicate on the "created_time" field.
func CreatedTimeGTE(v time.Time) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldGTE(FieldCreatedTime, v))
}

// CreatedTimeLT applies the LT predicate on the "created_time" field.
func CreatedTimeLT(v time.Time) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLT(FieldCreatedTime, v))
}

// CreatedTimeLTE applies the LTE predicate on the "created_time" field.
func CreatedTimeLTE(v time.Time) predicate.GovStreet {
	return predicate.GovStreet(sql.FieldLTE(FieldCreatedTime, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.GovStreet) predicate.GovStreet {
	return predicate.GovStreet(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.GovStreet) predicate.GovStreet {
	return predicate.GovStreet(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.GovStreet) predicate.GovStreet {
	return predicate.GovStreet(sql.NotPredicates(p))
}

// Code generated by ent, DO NOT EDIT.

package fmalertdefinition

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the fmalertdefinition type in the database.
	Label = "fm_alert_definition"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAlertGroupID holds the string denoting the alert_group_id field in the database.
	FieldAlertGroupID = "alert_group_id"
	// FieldLevel holds the string denoting the level field in the database.
	FieldLevel = "level"
	// FieldProfileTypeID holds the string denoting the profile_type_id field in the database.
	FieldProfileTypeID = "profile_type_id"
	// FieldAction holds the string denoting the action field in the database.
	FieldAction = "action"
	// FieldAlarmSound holds the string denoting the alarm_sound field in the database.
	FieldAlarmSound = "alarm_sound"
	// FieldCreatedTime holds the string denoting the created_time field in the database.
	FieldCreatedTime = "created_time"
	// FieldUpdatedTime holds the string denoting the updated_time field in the database.
	FieldUpdatedTime = "updated_time"
	// Table holds the table name of the fmalertdefinition in the database.
	Table = "fm_alert_definition"
)

// Columns holds all SQL columns for fmalertdefinition fields.
var Columns = []string{
	FieldID,
	FieldAlertGroupID,
	FieldLevel,
	FieldProfileTypeID,
	FieldAction,
	FieldAlarmSound,
	FieldCreatedTime,
	FieldUpdatedTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// ActionValidator is a validator for the "action" field. It is called by the builders before save.
	ActionValidator func(string) error
	// AlarmSoundValidator is a validator for the "alarm_sound" field. It is called by the builders before save.
	AlarmSoundValidator func(string) error
	// UpdateDefaultUpdatedTime holds the default value on update for the "updated_time" field.
	UpdateDefaultUpdatedTime func() time.Time
)

// OrderOption defines the ordering options for the FmAlertDefinition queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByAlertGroupID orders the results by the alert_group_id field.
func ByAlertGroupID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAlertGroupID, opts...).ToFunc()
}

// ByLevel orders the results by the level field.
func ByLevel(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLevel, opts...).ToFunc()
}

// ByProfileTypeID orders the results by the profile_type_id field.
func ByProfileTypeID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldProfileTypeID, opts...).ToFunc()
}

// ByAction orders the results by the action field.
func ByAction(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAction, opts...).ToFunc()
}

// ByAlarmSound orders the results by the alarm_sound field.
func ByAlarmSound(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAlarmSound, opts...).ToFunc()
}

// ByCreatedTime orders the results by the created_time field.
func ByCreatedTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedTime, opts...).ToFunc()
}

// ByUpdatedTime orders the results by the updated_time field.
func ByUpdatedTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedTime, opts...).ToFunc()
}

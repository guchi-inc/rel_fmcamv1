// Code generated by ent, DO NOT EDIT.

package fmalertdefinition

import (
	"fmcam/systems/genclients/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLTE(FieldID, id))
}

// AlertGroupID applies equality check predicate on the "alert_group_id" field. It's identical to AlertGroupIDEQ.
func AlertGroupID(v int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldAlertGroupID, v))
}

// Level applies equality check predicate on the "level" field. It's identical to LevelEQ.
func Level(v int) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldLevel, v))
}

// ProfileTypeID applies equality check predicate on the "profile_type_id" field. It's identical to ProfileTypeIDEQ.
func ProfileTypeID(v int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldProfileTypeID, v))
}

// Action applies equality check predicate on the "action" field. It's identical to ActionEQ.
func Action(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldAction, v))
}

// AlarmSound applies equality check predicate on the "alarm_sound" field. It's identical to AlarmSoundEQ.
func AlarmSound(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldAlarmSound, v))
}

// CreatedTime applies equality check predicate on the "created_time" field. It's identical to CreatedTimeEQ.
func CreatedTime(v time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldCreatedTime, v))
}

// UpdatedTime applies equality check predicate on the "updated_time" field. It's identical to UpdatedTimeEQ.
func UpdatedTime(v time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldUpdatedTime, v))
}

// AlertGroupIDEQ applies the EQ predicate on the "alert_group_id" field.
func AlertGroupIDEQ(v int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldAlertGroupID, v))
}

// AlertGroupIDNEQ applies the NEQ predicate on the "alert_group_id" field.
func AlertGroupIDNEQ(v int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNEQ(FieldAlertGroupID, v))
}

// AlertGroupIDIn applies the In predicate on the "alert_group_id" field.
func AlertGroupIDIn(vs ...int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIn(FieldAlertGroupID, vs...))
}

// AlertGroupIDNotIn applies the NotIn predicate on the "alert_group_id" field.
func AlertGroupIDNotIn(vs ...int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotIn(FieldAlertGroupID, vs...))
}

// AlertGroupIDGT applies the GT predicate on the "alert_group_id" field.
func AlertGroupIDGT(v int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGT(FieldAlertGroupID, v))
}

// AlertGroupIDGTE applies the GTE predicate on the "alert_group_id" field.
func AlertGroupIDGTE(v int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGTE(FieldAlertGroupID, v))
}

// AlertGroupIDLT applies the LT predicate on the "alert_group_id" field.
func AlertGroupIDLT(v int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLT(FieldAlertGroupID, v))
}

// AlertGroupIDLTE applies the LTE predicate on the "alert_group_id" field.
func AlertGroupIDLTE(v int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLTE(FieldAlertGroupID, v))
}

// AlertGroupIDIsNil applies the IsNil predicate on the "alert_group_id" field.
func AlertGroupIDIsNil() predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIsNull(FieldAlertGroupID))
}

// AlertGroupIDNotNil applies the NotNil predicate on the "alert_group_id" field.
func AlertGroupIDNotNil() predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotNull(FieldAlertGroupID))
}

// LevelEQ applies the EQ predicate on the "level" field.
func LevelEQ(v int) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldLevel, v))
}

// LevelNEQ applies the NEQ predicate on the "level" field.
func LevelNEQ(v int) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNEQ(FieldLevel, v))
}

// LevelIn applies the In predicate on the "level" field.
func LevelIn(vs ...int) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIn(FieldLevel, vs...))
}

// LevelNotIn applies the NotIn predicate on the "level" field.
func LevelNotIn(vs ...int) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotIn(FieldLevel, vs...))
}

// LevelGT applies the GT predicate on the "level" field.
func LevelGT(v int) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGT(FieldLevel, v))
}

// LevelGTE applies the GTE predicate on the "level" field.
func LevelGTE(v int) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGTE(FieldLevel, v))
}

// LevelLT applies the LT predicate on the "level" field.
func LevelLT(v int) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLT(FieldLevel, v))
}

// LevelLTE applies the LTE predicate on the "level" field.
func LevelLTE(v int) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLTE(FieldLevel, v))
}

// LevelIsNil applies the IsNil predicate on the "level" field.
func LevelIsNil() predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIsNull(FieldLevel))
}

// LevelNotNil applies the NotNil predicate on the "level" field.
func LevelNotNil() predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotNull(FieldLevel))
}

// ProfileTypeIDEQ applies the EQ predicate on the "profile_type_id" field.
func ProfileTypeIDEQ(v int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldProfileTypeID, v))
}

// ProfileTypeIDNEQ applies the NEQ predicate on the "profile_type_id" field.
func ProfileTypeIDNEQ(v int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNEQ(FieldProfileTypeID, v))
}

// ProfileTypeIDIn applies the In predicate on the "profile_type_id" field.
func ProfileTypeIDIn(vs ...int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIn(FieldProfileTypeID, vs...))
}

// ProfileTypeIDNotIn applies the NotIn predicate on the "profile_type_id" field.
func ProfileTypeIDNotIn(vs ...int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotIn(FieldProfileTypeID, vs...))
}

// ProfileTypeIDGT applies the GT predicate on the "profile_type_id" field.
func ProfileTypeIDGT(v int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGT(FieldProfileTypeID, v))
}

// ProfileTypeIDGTE applies the GTE predicate on the "profile_type_id" field.
func ProfileTypeIDGTE(v int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGTE(FieldProfileTypeID, v))
}

// ProfileTypeIDLT applies the LT predicate on the "profile_type_id" field.
func ProfileTypeIDLT(v int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLT(FieldProfileTypeID, v))
}

// ProfileTypeIDLTE applies the LTE predicate on the "profile_type_id" field.
func ProfileTypeIDLTE(v int64) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLTE(FieldProfileTypeID, v))
}

// ProfileTypeIDIsNil applies the IsNil predicate on the "profile_type_id" field.
func ProfileTypeIDIsNil() predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIsNull(FieldProfileTypeID))
}

// ProfileTypeIDNotNil applies the NotNil predicate on the "profile_type_id" field.
func ProfileTypeIDNotNil() predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotNull(FieldProfileTypeID))
}

// ActionEQ applies the EQ predicate on the "action" field.
func ActionEQ(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldAction, v))
}

// ActionNEQ applies the NEQ predicate on the "action" field.
func ActionNEQ(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNEQ(FieldAction, v))
}

// ActionIn applies the In predicate on the "action" field.
func ActionIn(vs ...string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIn(FieldAction, vs...))
}

// ActionNotIn applies the NotIn predicate on the "action" field.
func ActionNotIn(vs ...string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotIn(FieldAction, vs...))
}

// ActionGT applies the GT predicate on the "action" field.
func ActionGT(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGT(FieldAction, v))
}

// ActionGTE applies the GTE predicate on the "action" field.
func ActionGTE(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGTE(FieldAction, v))
}

// ActionLT applies the LT predicate on the "action" field.
func ActionLT(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLT(FieldAction, v))
}

// ActionLTE applies the LTE predicate on the "action" field.
func ActionLTE(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLTE(FieldAction, v))
}

// ActionContains applies the Contains predicate on the "action" field.
func ActionContains(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldContains(FieldAction, v))
}

// ActionHasPrefix applies the HasPrefix predicate on the "action" field.
func ActionHasPrefix(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldHasPrefix(FieldAction, v))
}

// ActionHasSuffix applies the HasSuffix predicate on the "action" field.
func ActionHasSuffix(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldHasSuffix(FieldAction, v))
}

// ActionIsNil applies the IsNil predicate on the "action" field.
func ActionIsNil() predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIsNull(FieldAction))
}

// ActionNotNil applies the NotNil predicate on the "action" field.
func ActionNotNil() predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotNull(FieldAction))
}

// ActionEqualFold applies the EqualFold predicate on the "action" field.
func ActionEqualFold(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEqualFold(FieldAction, v))
}

// ActionContainsFold applies the ContainsFold predicate on the "action" field.
func ActionContainsFold(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldContainsFold(FieldAction, v))
}

// AlarmSoundEQ applies the EQ predicate on the "alarm_sound" field.
func AlarmSoundEQ(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldAlarmSound, v))
}

// AlarmSoundNEQ applies the NEQ predicate on the "alarm_sound" field.
func AlarmSoundNEQ(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNEQ(FieldAlarmSound, v))
}

// AlarmSoundIn applies the In predicate on the "alarm_sound" field.
func AlarmSoundIn(vs ...string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIn(FieldAlarmSound, vs...))
}

// AlarmSoundNotIn applies the NotIn predicate on the "alarm_sound" field.
func AlarmSoundNotIn(vs ...string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotIn(FieldAlarmSound, vs...))
}

// AlarmSoundGT applies the GT predicate on the "alarm_sound" field.
func AlarmSoundGT(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGT(FieldAlarmSound, v))
}

// AlarmSoundGTE applies the GTE predicate on the "alarm_sound" field.
func AlarmSoundGTE(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGTE(FieldAlarmSound, v))
}

// AlarmSoundLT applies the LT predicate on the "alarm_sound" field.
func AlarmSoundLT(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLT(FieldAlarmSound, v))
}

// AlarmSoundLTE applies the LTE predicate on the "alarm_sound" field.
func AlarmSoundLTE(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLTE(FieldAlarmSound, v))
}

// AlarmSoundContains applies the Contains predicate on the "alarm_sound" field.
func AlarmSoundContains(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldContains(FieldAlarmSound, v))
}

// AlarmSoundHasPrefix applies the HasPrefix predicate on the "alarm_sound" field.
func AlarmSoundHasPrefix(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldHasPrefix(FieldAlarmSound, v))
}

// AlarmSoundHasSuffix applies the HasSuffix predicate on the "alarm_sound" field.
func AlarmSoundHasSuffix(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldHasSuffix(FieldAlarmSound, v))
}

// AlarmSoundIsNil applies the IsNil predicate on the "alarm_sound" field.
func AlarmSoundIsNil() predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIsNull(FieldAlarmSound))
}

// AlarmSoundNotNil applies the NotNil predicate on the "alarm_sound" field.
func AlarmSoundNotNil() predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotNull(FieldAlarmSound))
}

// AlarmSoundEqualFold applies the EqualFold predicate on the "alarm_sound" field.
func AlarmSoundEqualFold(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEqualFold(FieldAlarmSound, v))
}

// AlarmSoundContainsFold applies the ContainsFold predicate on the "alarm_sound" field.
func AlarmSoundContainsFold(v string) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldContainsFold(FieldAlarmSound, v))
}

// CreatedTimeEQ applies the EQ predicate on the "created_time" field.
func CreatedTimeEQ(v time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldCreatedTime, v))
}

// CreatedTimeNEQ applies the NEQ predicate on the "created_time" field.
func CreatedTimeNEQ(v time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNEQ(FieldCreatedTime, v))
}

// CreatedTimeIn applies the In predicate on the "created_time" field.
func CreatedTimeIn(vs ...time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIn(FieldCreatedTime, vs...))
}

// CreatedTimeNotIn applies the NotIn predicate on the "created_time" field.
func CreatedTimeNotIn(vs ...time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotIn(FieldCreatedTime, vs...))
}

// CreatedTimeGT applies the GT predicate on the "created_time" field.
func CreatedTimeGT(v time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGT(FieldCreatedTime, v))
}

// CreatedTimeGTE applies the GTE predicate on the "created_time" field.
func CreatedTimeGTE(v time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGTE(FieldCreatedTime, v))
}

// CreatedTimeLT applies the LT predicate on the "created_time" field.
func CreatedTimeLT(v time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLT(FieldCreatedTime, v))
}

// CreatedTimeLTE applies the LTE predicate on the "created_time" field.
func CreatedTimeLTE(v time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLTE(FieldCreatedTime, v))
}

// CreatedTimeIsNil applies the IsNil predicate on the "created_time" field.
func CreatedTimeIsNil() predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIsNull(FieldCreatedTime))
}

// CreatedTimeNotNil applies the NotNil predicate on the "created_time" field.
func CreatedTimeNotNil() predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotNull(FieldCreatedTime))
}

// UpdatedTimeEQ applies the EQ predicate on the "updated_time" field.
func UpdatedTimeEQ(v time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldEQ(FieldUpdatedTime, v))
}

// UpdatedTimeNEQ applies the NEQ predicate on the "updated_time" field.
func UpdatedTimeNEQ(v time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNEQ(FieldUpdatedTime, v))
}

// UpdatedTimeIn applies the In predicate on the "updated_time" field.
func UpdatedTimeIn(vs ...time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIn(FieldUpdatedTime, vs...))
}

// UpdatedTimeNotIn applies the NotIn predicate on the "updated_time" field.
func UpdatedTimeNotIn(vs ...time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotIn(FieldUpdatedTime, vs...))
}

// UpdatedTimeGT applies the GT predicate on the "updated_time" field.
func UpdatedTimeGT(v time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGT(FieldUpdatedTime, v))
}

// UpdatedTimeGTE applies the GTE predicate on the "updated_time" field.
func UpdatedTimeGTE(v time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldGTE(FieldUpdatedTime, v))
}

// UpdatedTimeLT applies the LT predicate on the "updated_time" field.
func UpdatedTimeLT(v time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLT(FieldUpdatedTime, v))
}

// UpdatedTimeLTE applies the LTE predicate on the "updated_time" field.
func UpdatedTimeLTE(v time.Time) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldLTE(FieldUpdatedTime, v))
}

// UpdatedTimeIsNil applies the IsNil predicate on the "updated_time" field.
func UpdatedTimeIsNil() predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldIsNull(FieldUpdatedTime))
}

// UpdatedTimeNotNil applies the NotNil predicate on the "updated_time" field.
func UpdatedTimeNotNil() predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.FieldNotNull(FieldUpdatedTime))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.FmAlertDefinition) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.FmAlertDefinition) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.FmAlertDefinition) predicate.FmAlertDefinition {
	return predicate.FmAlertDefinition(sql.NotPredicates(p))
}
